{"version":3,"file":"module.js","sources":["../node_modules/_tslib@2.6.3@tslib/tslib.es6.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Utils.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/Attachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/Sequence.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Animation.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/AnimationState.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/AnimationStateData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/BoundingBoxAttachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/ClippingAttachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Texture.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/BoneData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/PathConstraintData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Skeleton.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/SlotData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/SkeletonBinary.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/TextureAtlas.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/MeshAttachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/PathAttachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/PointAttachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/attachments/RegionAttachment.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/AtlasAttachmentLoader.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Bone.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/ConstraintData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/AssetManagerBase.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Event.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/EventData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/IkConstraint.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/IkConstraintData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/PathConstraint.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/PhysicsConstraint.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Slot.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/TransformConstraint.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/PhysicsConstraintData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/SkeletonData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Skin.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/TransformConstraintData.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/SkeletonBounds.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/Triangulator.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/SkeletonClipping.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/SkeletonJson.js","../node_modules/_@esotericsoftware_spine-core@4.2.56@@esotericsoftware/spine-core/dist/polyfills.js","../src/loader/LoaderUtils.ts","../src/util/ReturnablePool.ts","../src/util/ClearablePool.ts","../src/util/BlendMode.ts","../src/SpineGenerator.ts","../src/SpineMaterial.ts","../src/SpineAnimationRenderer.ts","../src/loader/SkeletonDataResource.ts","../src/util/BufferReader.ts","../src/loader/SpineLoader.ts","../src/loader/EditorSpineAtlasLoader.ts","../src/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class IntSet {\n    array = new Array();\n    add(value) {\n        let contains = this.contains(value);\n        this.array[value | 0] = value | 0;\n        return !contains;\n    }\n    contains(value) {\n        return this.array[value | 0] != undefined;\n    }\n    remove(value) {\n        this.array[value | 0] = undefined;\n    }\n    clear() {\n        this.array.length = 0;\n    }\n}\nexport class StringSet {\n    entries = {};\n    size = 0;\n    add(value) {\n        let contains = this.entries[value];\n        this.entries[value] = true;\n        if (!contains) {\n            this.size++;\n            return true;\n        }\n        return false;\n    }\n    addAll(values) {\n        let oldSize = this.size;\n        for (var i = 0, n = values.length; i < n; i++)\n            this.add(values[i]);\n        return oldSize != this.size;\n    }\n    contains(value) {\n        return this.entries[value];\n    }\n    clear() {\n        this.entries = {};\n        this.size = 0;\n    }\n}\nexport class Color {\n    r;\n    g;\n    b;\n    a;\n    static WHITE = new Color(1, 1, 1, 1);\n    static RED = new Color(1, 0, 0, 1);\n    static GREEN = new Color(0, 1, 0, 1);\n    static BLUE = new Color(0, 0, 1, 1);\n    static MAGENTA = new Color(1, 0, 1, 1);\n    constructor(r = 0, g = 0, b = 0, a = 0) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    set(r, g, b, a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n        return this.clamp();\n    }\n    setFromColor(c) {\n        this.r = c.r;\n        this.g = c.g;\n        this.b = c.b;\n        this.a = c.a;\n        return this;\n    }\n    setFromString(hex) {\n        hex = hex.charAt(0) == '#' ? hex.substr(1) : hex;\n        this.r = parseInt(hex.substr(0, 2), 16) / 255;\n        this.g = parseInt(hex.substr(2, 2), 16) / 255;\n        this.b = parseInt(hex.substr(4, 2), 16) / 255;\n        this.a = hex.length != 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n        return this;\n    }\n    add(r, g, b, a) {\n        this.r += r;\n        this.g += g;\n        this.b += b;\n        this.a += a;\n        return this.clamp();\n    }\n    clamp() {\n        if (this.r < 0)\n            this.r = 0;\n        else if (this.r > 1)\n            this.r = 1;\n        if (this.g < 0)\n            this.g = 0;\n        else if (this.g > 1)\n            this.g = 1;\n        if (this.b < 0)\n            this.b = 0;\n        else if (this.b > 1)\n            this.b = 1;\n        if (this.a < 0)\n            this.a = 0;\n        else if (this.a > 1)\n            this.a = 1;\n        return this;\n    }\n    static rgba8888ToColor(color, value) {\n        color.r = ((value & 0xff000000) >>> 24) / 255;\n        color.g = ((value & 0x00ff0000) >>> 16) / 255;\n        color.b = ((value & 0x0000ff00) >>> 8) / 255;\n        color.a = ((value & 0x000000ff)) / 255;\n    }\n    static rgb888ToColor(color, value) {\n        color.r = ((value & 0x00ff0000) >>> 16) / 255;\n        color.g = ((value & 0x0000ff00) >>> 8) / 255;\n        color.b = ((value & 0x000000ff)) / 255;\n    }\n    toRgb888() {\n        const hex = (x) => (\"0\" + (x * 255).toString(16)).slice(-2);\n        return Number(\"0x\" + hex(this.r) + hex(this.g) + hex(this.b));\n    }\n    static fromString(hex) {\n        return new Color().setFromString(hex);\n    }\n}\nexport class MathUtils {\n    static PI = 3.1415927;\n    static PI2 = MathUtils.PI * 2;\n    static invPI2 = 1 / MathUtils.PI2;\n    static radiansToDegrees = 180 / MathUtils.PI;\n    static radDeg = MathUtils.radiansToDegrees;\n    static degreesToRadians = MathUtils.PI / 180;\n    static degRad = MathUtils.degreesToRadians;\n    static clamp(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    }\n    static cosDeg(degrees) {\n        return Math.cos(degrees * MathUtils.degRad);\n    }\n    static sinDeg(degrees) {\n        return Math.sin(degrees * MathUtils.degRad);\n    }\n    static atan2Deg(y, x) {\n        return Math.atan2(y, x) * MathUtils.degRad;\n    }\n    static signum(value) {\n        return value > 0 ? 1 : value < 0 ? -1 : 0;\n    }\n    static toInt(x) {\n        return x > 0 ? Math.floor(x) : Math.ceil(x);\n    }\n    static cbrt(x) {\n        let y = Math.pow(Math.abs(x), 1 / 3);\n        return x < 0 ? -y : y;\n    }\n    static randomTriangular(min, max) {\n        return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n    }\n    static randomTriangularWith(min, max, mode) {\n        let u = Math.random();\n        let d = max - min;\n        if (u <= (mode - min) / d)\n            return min + Math.sqrt(u * d * (mode - min));\n        return max - Math.sqrt((1 - u) * d * (max - mode));\n    }\n    static isPowerOfTwo(value) {\n        return value && (value & (value - 1)) === 0;\n    }\n}\nexport class Interpolation {\n    apply(start, end, a) {\n        return start + (end - start) * this.applyInternal(a);\n    }\n}\nexport class Pow extends Interpolation {\n    power = 2;\n    constructor(power) {\n        super();\n        this.power = power;\n    }\n    applyInternal(a) {\n        if (a <= 0.5)\n            return Math.pow(a * 2, this.power) / 2;\n        return Math.pow((a - 1) * 2, this.power) / (this.power % 2 == 0 ? -2 : 2) + 1;\n    }\n}\nexport class PowOut extends Pow {\n    constructor(power) {\n        super(power);\n    }\n    applyInternal(a) {\n        return Math.pow(a - 1, this.power) * (this.power % 2 == 0 ? -1 : 1) + 1;\n    }\n}\nexport class Utils {\n    static SUPPORTS_TYPED_ARRAYS = typeof (Float32Array) !== \"undefined\";\n    static arrayCopy(source, sourceStart, dest, destStart, numElements) {\n        for (let i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n            dest[j] = source[i];\n        }\n    }\n    static arrayFill(array, fromIndex, toIndex, value) {\n        for (let i = fromIndex; i < toIndex; i++)\n            array[i] = value;\n    }\n    static setArraySize(array, size, value = 0) {\n        let oldSize = array.length;\n        if (oldSize == size)\n            return array;\n        array.length = size;\n        if (oldSize < size) {\n            for (let i = oldSize; i < size; i++)\n                array[i] = value;\n        }\n        return array;\n    }\n    static ensureArrayCapacity(array, size, value = 0) {\n        if (array.length >= size)\n            return array;\n        return Utils.setArraySize(array, size, value);\n    }\n    static newArray(size, defaultValue) {\n        let array = new Array(size);\n        for (let i = 0; i < size; i++)\n            array[i] = defaultValue;\n        return array;\n    }\n    static newFloatArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Float32Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static newShortArray(size) {\n        if (Utils.SUPPORTS_TYPED_ARRAYS)\n            return new Int16Array(size);\n        else {\n            let array = new Array(size);\n            for (let i = 0; i < array.length; i++)\n                array[i] = 0;\n            return array;\n        }\n    }\n    static toFloatArray(array) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n    }\n    static toSinglePrecision(value) {\n        return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n    }\n    // This function is used to fix WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n    static webkit602BugfixHelper(alpha, blend) {\n    }\n    static contains(array, element, identity = true) {\n        for (var i = 0; i < array.length; i++)\n            if (array[i] == element)\n                return true;\n        return false;\n    }\n    static enumValue(type, name) {\n        return type[name[0].toUpperCase() + name.slice(1)];\n    }\n}\nexport class DebugUtils {\n    static logBones(skeleton) {\n        for (let i = 0; i < skeleton.bones.length; i++) {\n            let bone = skeleton.bones[i];\n            console.log(bone.data.name + \", \" + bone.a + \", \" + bone.b + \", \" + bone.c + \", \" + bone.d + \", \" + bone.worldX + \", \" + bone.worldY);\n        }\n    }\n}\nexport class Pool {\n    items = new Array();\n    instantiator;\n    constructor(instantiator) {\n        this.instantiator = instantiator;\n    }\n    obtain() {\n        return this.items.length > 0 ? this.items.pop() : this.instantiator();\n    }\n    free(item) {\n        if (item.reset)\n            item.reset();\n        this.items.push(item);\n    }\n    freeAll(items) {\n        for (let i = 0; i < items.length; i++)\n            this.free(items[i]);\n    }\n    clear() {\n        this.items.length = 0;\n    }\n}\nexport class Vector2 {\n    x;\n    y;\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    length() {\n        let x = this.x;\n        let y = this.y;\n        return Math.sqrt(x * x + y * y);\n    }\n    normalize() {\n        let len = this.length();\n        if (len != 0) {\n            this.x /= len;\n            this.y /= len;\n        }\n        return this;\n    }\n}\nexport class TimeKeeper {\n    maxDelta = 0.064;\n    framesPerSecond = 0;\n    delta = 0;\n    totalTime = 0;\n    lastTime = Date.now() / 1000;\n    frameCount = 0;\n    frameTime = 0;\n    update() {\n        let now = Date.now() / 1000;\n        this.delta = now - this.lastTime;\n        this.frameTime += this.delta;\n        this.totalTime += this.delta;\n        if (this.delta > this.maxDelta)\n            this.delta = this.maxDelta;\n        this.lastTime = now;\n        this.frameCount++;\n        if (this.frameTime > 1) {\n            this.framesPerSecond = this.frameCount / this.frameTime;\n            this.frameTime = 0;\n            this.frameCount = 0;\n        }\n    }\n}\nexport class WindowedMean {\n    values;\n    addedValues = 0;\n    lastValue = 0;\n    mean = 0;\n    dirty = true;\n    constructor(windowSize = 32) {\n        this.values = new Array(windowSize);\n    }\n    hasEnoughData() {\n        return this.addedValues >= this.values.length;\n    }\n    addValue(value) {\n        if (this.addedValues < this.values.length)\n            this.addedValues++;\n        this.values[this.lastValue++] = value;\n        if (this.lastValue > this.values.length - 1)\n            this.lastValue = 0;\n        this.dirty = true;\n    }\n    getMean() {\n        if (this.hasEnoughData()) {\n            if (this.dirty) {\n                let mean = 0;\n                for (let i = 0; i < this.values.length; i++)\n                    mean += this.values[i];\n                this.mean = mean / this.values.length;\n                this.dirty = false;\n            }\n            return this.mean;\n        }\n        return 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils.js\";\n/** The base class for all attachments. */\nexport class Attachment {\n    name;\n    constructor(name) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n}\n/** Base class for an attachment with vertices that are transformed by one or more bones and can be deformed by a slot's\n * {@link Slot#deform}. */\nexport class VertexAttachment extends Attachment {\n    static nextID = 0;\n    /** The unique ID for this attachment. */\n    id = VertexAttachment.nextID++;\n    /** The bones which affect the {@link #getVertices()}. The array entries are, for each vertex, the number of bones affecting\n     * the vertex followed by that many bone indices, which is the index of the bone in {@link Skeleton#bones}. Will be null\n     * if this attachment has no weights. */\n    bones = null;\n    /** The vertex positions in the bone's coordinate system. For a non-weighted attachment, the values are `x,y`\n     * entries for each vertex. For a weighted attachment, the values are `x,y,weight` entries for each bone affecting\n     * each vertex. */\n    vertices = [];\n    /** The maximum number of world vertex values that can be output by\n     * {@link #computeWorldVertices()} using the `count` parameter. */\n    worldVerticesLength = 0;\n    /** Timelines for the timeline attachment are also applied to this attachment.\n     * May be null if no attachment-specific timelines should be applied. */\n    timelineAttachment = this;\n    constructor(name) {\n        super(name);\n    }\n    /** Transforms the attachment's local {@link #vertices} to world coordinates. If the slot's {@link Slot#deform} is\n     * not empty, it is used to deform the vertices.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide.\n     * @param start The index of the first {@link #vertices} value to transform. Each vertex has 2 values, x and y.\n     * @param count The number of world vertex values to output. Must be <= {@link #worldVerticesLength} - `start`.\n     * @param worldVertices The output world vertices. Must have a length >= `offset` + `count` *\n     *           `stride` / 2.\n     * @param offset The `worldVertices` index to begin writing values.\n     * @param stride The number of `worldVertices` entries between the value pairs written. */\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        count = offset + (count >> 1) * stride;\n        let skeleton = slot.bone.skeleton;\n        let deformArray = slot.deform;\n        let vertices = this.vertices;\n        let bones = this.bones;\n        if (!bones) {\n            if (deformArray.length > 0)\n                vertices = deformArray;\n            let bone = slot.bone;\n            let x = bone.worldX;\n            let y = bone.worldY;\n            let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n            for (let v = start, w = offset; w < count; v += 2, w += stride) {\n                let vx = vertices[v], vy = vertices[v + 1];\n                worldVertices[w] = vx * a + vy * b + x;\n                worldVertices[w + 1] = vx * c + vy * d + y;\n            }\n            return;\n        }\n        let v = 0, skip = 0;\n        for (let i = 0; i < start; i += 2) {\n            let n = bones[v];\n            v += n + 1;\n            skip += n;\n        }\n        let skeletonBones = skeleton.bones;\n        if (deformArray.length == 0) {\n            for (let w = offset, b = skip * 3; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b], vy = vertices[b + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n        else {\n            let deform = deformArray;\n            for (let w = offset, b = skip * 3, f = skip << 1; w < count; w += stride) {\n                let wx = 0, wy = 0;\n                let n = bones[v++];\n                n += v;\n                for (; v < n; v++, b += 3, f += 2) {\n                    let bone = skeletonBones[bones[v]];\n                    let vx = vertices[b] + deform[f], vy = vertices[b + 1] + deform[f + 1], weight = vertices[b + 2];\n                    wx += (vx * bone.a + vy * bone.b + bone.worldX) * weight;\n                    wy += (vx * bone.c + vy * bone.d + bone.worldY) * weight;\n                }\n                worldVertices[w] = wx;\n                worldVertices[w + 1] = wy;\n            }\n        }\n    }\n    /** Does not copy id (generated) or name (set on construction). **/\n    copyTo(attachment) {\n        if (this.bones) {\n            attachment.bones = new Array(this.bones.length);\n            Utils.arrayCopy(this.bones, 0, attachment.bones, 0, this.bones.length);\n        }\n        else\n            attachment.bones = null;\n        if (this.vertices) {\n            attachment.vertices = Utils.newFloatArray(this.vertices.length);\n            Utils.arrayCopy(this.vertices, 0, attachment.vertices, 0, this.vertices.length);\n        }\n        attachment.worldVerticesLength = this.worldVerticesLength;\n        attachment.timelineAttachment = this.timelineAttachment;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0YWNobWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hdHRhY2htZW50cy9BdHRhY2htZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQW1CLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUVyRCwwQ0FBMEM7QUFDMUMsTUFBTSxPQUFnQixVQUFVO0lBQy9CLElBQUksQ0FBUztJQUViLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBR0Q7QUFFRDswQkFDMEI7QUFDMUIsTUFBTSxPQUFnQixnQkFBaUIsU0FBUSxVQUFVO0lBQ2hELE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBRTFCLHlDQUF5QztJQUN6QyxFQUFFLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUM7SUFFL0I7OzRDQUV3QztJQUN4QyxLQUFLLEdBQXlCLElBQUksQ0FBQztJQUVuQzs7c0JBRWtCO0lBQ2xCLFFBQVEsR0FBb0IsRUFBRSxDQUFDO0lBRS9CO3NFQUNrRTtJQUNsRSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7SUFFeEI7NEVBQ3dFO0lBQ3hFLGtCQUFrQixHQUFlLElBQUksQ0FBQztJQUV0QyxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs7Ozs7Ozs7OzhGQVUwRjtJQUMxRixvQkFBb0IsQ0FBRSxJQUFVLEVBQUUsS0FBYSxFQUFFLEtBQWEsRUFBRSxhQUE4QixFQUFFLE1BQWMsRUFBRSxNQUFjO1FBQzdILEtBQUssR0FBRyxNQUFNLEdBQUcsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ3ZDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ2xDLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDOUIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUM3QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWCxJQUFJLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQztnQkFBRSxRQUFRLEdBQUcsV0FBVyxDQUFDO1lBQ25ELElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNwQixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDbkQsS0FBSyxJQUFJLENBQUMsR0FBRyxLQUFLLEVBQUUsQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLE1BQU0sRUFBRTtnQkFDL0QsSUFBSSxFQUFFLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUMzQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDdkMsYUFBYSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzNDO1lBQ0QsT0FBTztTQUNQO1FBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksR0FBRyxDQUFDLENBQUM7UUFDcEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNYLElBQUksSUFBSSxDQUFDLENBQUM7U0FDVjtRQUNELElBQUksYUFBYSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7UUFDbkMsSUFBSSxXQUFXLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsSUFBSSxNQUFNLEVBQUU7Z0JBQzFELElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDbkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDMUIsSUFBSSxJQUFJLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNuQyxJQUFJLEVBQUUsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsTUFBTSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ3JFLEVBQUUsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUM7b0JBQ3pELEVBQUUsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUM7aUJBQ3pEO2dCQUNELGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7Z0JBQ3RCLGFBQWEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO2FBQzFCO1NBQ0Q7YUFBTTtZQUNOLElBQUksTUFBTSxHQUFHLFdBQVcsQ0FBQztZQUN6QixLQUFLLElBQUksQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsSUFBSSxNQUFNLEVBQUU7Z0JBQ3pFLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDbkIsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO29CQUNsQyxJQUFJLElBQUksR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ25DLElBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxNQUFNLEdBQUcsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDakcsRUFBRSxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQztvQkFDekQsRUFBRSxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQztpQkFDekQ7Z0JBQ0QsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDdEIsYUFBYSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDMUI7U0FDRDtJQUNGLENBQUM7SUFFRCxtRUFBbUU7SUFDbkUsTUFBTSxDQUFFLFVBQTRCO1FBQ25DLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNmLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQVMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4RCxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDdkU7O1lBQ0EsVUFBVSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFFekIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLFVBQVUsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2hFLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoRjtRQUVELFVBQVUsQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUM7UUFDMUQsVUFBVSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztJQUN6RCxDQUFDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Utils } from \"../Utils.js\";\nexport class Sequence {\n    static _nextID = 0;\n    id = Sequence.nextID();\n    regions;\n    start = 0;\n    digits = 0;\n    /** The index of the region to show for the setup pose. */\n    setupIndex = 0;\n    constructor(count) {\n        this.regions = new Array(count);\n    }\n    copy() {\n        let copy = new Sequence(this.regions.length);\n        Utils.arrayCopy(this.regions, 0, copy.regions, 0, this.regions.length);\n        copy.start = this.start;\n        copy.digits = this.digits;\n        copy.setupIndex = this.setupIndex;\n        return copy;\n    }\n    apply(slot, attachment) {\n        let index = slot.sequenceIndex;\n        if (index == -1)\n            index = this.setupIndex;\n        if (index >= this.regions.length)\n            index = this.regions.length - 1;\n        let region = this.regions[index];\n        if (attachment.region != region) {\n            attachment.region = region;\n            attachment.updateRegion();\n        }\n    }\n    getPath(basePath, index) {\n        let result = basePath;\n        let frame = (this.start + index).toString();\n        for (let i = this.digits - frame.length; i > 0; i--)\n            result += \"0\";\n        result += frame;\n        return result;\n    }\n    static nextID() {\n        return Sequence._nextID++;\n    }\n}\nexport var SequenceMode;\n(function (SequenceMode) {\n    SequenceMode[SequenceMode[\"hold\"] = 0] = \"hold\";\n    SequenceMode[SequenceMode[\"once\"] = 1] = \"once\";\n    SequenceMode[SequenceMode[\"loop\"] = 2] = \"loop\";\n    SequenceMode[SequenceMode[\"pingpong\"] = 3] = \"pingpong\";\n    SequenceMode[SequenceMode[\"onceReverse\"] = 4] = \"onceReverse\";\n    SequenceMode[SequenceMode[\"loopReverse\"] = 5] = \"loopReverse\";\n    SequenceMode[SequenceMode[\"pingpongReverse\"] = 6] = \"pingpongReverse\";\n})(SequenceMode || (SequenceMode = {}));\nexport const SequenceModeValues = [\n    SequenceMode.hold,\n    SequenceMode.once,\n    SequenceMode.loop,\n    SequenceMode.pingpong,\n    SequenceMode.onceReverse,\n    SequenceMode.loopReverse,\n    SequenceMode.pingpongReverse\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VxdWVuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvU2VxdWVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHcEMsTUFBTSxPQUFPLFFBQVE7SUFDWixNQUFNLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUUzQixFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3ZCLE9BQU8sQ0FBa0I7SUFDekIsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNWLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDWCwwREFBMEQ7SUFDMUQsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUVmLFlBQWEsS0FBYTtRQUN6QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFnQixLQUFLLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ2xDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVELEtBQUssQ0FBRSxJQUFVLEVBQUUsVUFBNEI7UUFDOUMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUMvQixJQUFJLEtBQUssSUFBSSxDQUFDLENBQUM7WUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QyxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07WUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ2xFLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakMsSUFBSSxVQUFVLENBQUMsTUFBTSxJQUFJLE1BQU0sRUFBRTtZQUNoQyxVQUFVLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUMzQixVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDMUI7SUFDRixDQUFDO0lBRUQsT0FBTyxDQUFFLFFBQWdCLEVBQUUsS0FBYTtRQUN2QyxJQUFJLE1BQU0sR0FBRyxRQUFRLENBQUM7UUFDdEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVDLEtBQUssSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ2xELE1BQU0sSUFBSSxHQUFHLENBQUM7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDO1FBQ2hCLE9BQU8sTUFBTSxDQUFDO0lBQ2YsQ0FBQztJQUVPLE1BQU0sQ0FBQyxNQUFNO1FBQ3BCLE9BQU8sUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzNCLENBQUM7O0FBR0YsTUFBTSxDQUFOLElBQVksWUFRWDtBQVJELFdBQVksWUFBWTtJQUN2QiwrQ0FBUSxDQUFBO0lBQ1IsK0NBQVEsQ0FBQTtJQUNSLCtDQUFRLENBQUE7SUFDUix1REFBWSxDQUFBO0lBQ1osNkRBQWUsQ0FBQTtJQUNmLDZEQUFlLENBQUE7SUFDZixxRUFBbUIsQ0FBQTtBQUNwQixDQUFDLEVBUlcsWUFBWSxLQUFaLFlBQVksUUFRdkI7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRztJQUNqQyxZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsSUFBSTtJQUNqQixZQUFZLENBQUMsUUFBUTtJQUNyQixZQUFZLENBQUMsV0FBVztJQUN4QixZQUFZLENBQUMsV0FBVztJQUN4QixZQUFZLENBQUMsZUFBZTtDQUM1QixDQUFDIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment.js\";\nimport { StringSet, Utils, MathUtils } from \"./Utils.js\";\nimport { SequenceMode, SequenceModeValues } from \"./attachments/Sequence.js\";\n/** A simple container for a list of timelines and a name. */\nexport class Animation {\n    /** The animation's name, which is unique across all animations in the skeleton. */\n    name;\n    timelines = [];\n    timelineIds = new StringSet();\n    /** The duration of the animation in seconds, which is the highest time of all keys in the timeline. */\n    duration;\n    constructor(name, timelines, duration) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n        this.setTimelines(timelines);\n        this.duration = duration;\n    }\n    setTimelines(timelines) {\n        if (!timelines)\n            throw new Error(\"timelines cannot be null.\");\n        this.timelines = timelines;\n        this.timelineIds.clear();\n        for (var i = 0; i < timelines.length; i++)\n            this.timelineIds.addAll(timelines[i].getPropertyIds());\n    }\n    hasTimeline(ids) {\n        for (let i = 0; i < ids.length; i++)\n            if (this.timelineIds.contains(ids[i]))\n                return true;\n        return false;\n    }\n    /** Applies all the animation's timelines to the specified skeleton.\n     *\n     * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}.\n     * @param loop If true, the animation repeats after {@link #getDuration()}.\n     * @param events May be null to ignore fired events. */\n    apply(skeleton, lastTime, time, loop, events, alpha, blend, direction) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (loop && this.duration != 0) {\n            time %= this.duration;\n            if (lastTime > 0)\n                lastTime %= this.duration;\n        }\n        let timelines = this.timelines;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            timelines[i].apply(skeleton, lastTime, time, events, alpha, blend, direction);\n    }\n}\n/** Controls how a timeline value is mixed with the setup pose value or current pose value when a timeline's `alpha`\n * < 1.\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixBlend;\n(function (MixBlend) {\n    /** Transitions from the setup value to the timeline value (the current value is not used). Before the first key, the setup\n     * value is set. */\n    MixBlend[MixBlend[\"setup\"] = 0] = \"setup\";\n    /** Transitions from the current value to the timeline value. Before the first key, transitions from the current value to\n     * the setup value. Timelines which perform instant transitions, such as {@link DrawOrderTimeline} or\n     * {@link AttachmentTimeline}, use the setup value before the first key.\n     *\n     * `first` is intended for the first animations applied, not for animations layered on top of those. */\n    MixBlend[MixBlend[\"first\"] = 1] = \"first\";\n    /** Transitions from the current value to the timeline value. No change is made before the first key (the current value is\n     * kept until the first key).\n     *\n     * `replace` is intended for animations layered on top of others, not for the first animations applied. */\n    MixBlend[MixBlend[\"replace\"] = 2] = \"replace\";\n    /** Transitions from the current value to the current value plus the timeline value. No change is made before the first key\n     * (the current value is kept until the first key).\n     *\n     * `add` is intended for animations layered on top of others, not for the first animations applied. Properties\n     * keyed by additive animations must be set manually or by another animation before applying the additive animations, else\n     * the property values will increase continually. */\n    MixBlend[MixBlend[\"add\"] = 3] = \"add\";\n})(MixBlend || (MixBlend = {}));\n/** Indicates whether a timeline's `alpha` is mixing out over time toward 0 (the setup or current pose value) or\n * mixing in toward 1 (the timeline's value).\n *\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\nexport var MixDirection;\n(function (MixDirection) {\n    MixDirection[MixDirection[\"mixIn\"] = 0] = \"mixIn\";\n    MixDirection[MixDirection[\"mixOut\"] = 1] = \"mixOut\";\n})(MixDirection || (MixDirection = {}));\nconst Property = {\n    rotate: 0,\n    x: 1,\n    y: 2,\n    scaleX: 3,\n    scaleY: 4,\n    shearX: 5,\n    shearY: 6,\n    inherit: 7,\n    rgb: 8,\n    alpha: 9,\n    rgb2: 10,\n    attachment: 11,\n    deform: 12,\n    event: 13,\n    drawOrder: 14,\n    ikConstraint: 15,\n    transformConstraint: 16,\n    pathConstraintPosition: 17,\n    pathConstraintSpacing: 18,\n    pathConstraintMix: 19,\n    physicsConstraintInertia: 20,\n    physicsConstraintStrength: 21,\n    physicsConstraintDamping: 22,\n    physicsConstraintMass: 23,\n    physicsConstraintWind: 24,\n    physicsConstraintGravity: 25,\n    physicsConstraintMix: 26,\n    physicsConstraintReset: 27,\n    sequence: 28,\n};\n/** The interface for all timelines. */\nexport class Timeline {\n    propertyIds;\n    frames;\n    constructor(frameCount, propertyIds) {\n        this.propertyIds = propertyIds;\n        this.frames = Utils.newFloatArray(frameCount * this.getFrameEntries());\n    }\n    getPropertyIds() {\n        return this.propertyIds;\n    }\n    getFrameEntries() {\n        return 1;\n    }\n    getFrameCount() {\n        return this.frames.length / this.getFrameEntries();\n    }\n    getDuration() {\n        return this.frames[this.frames.length - this.getFrameEntries()];\n    }\n    static search1(frames, time) {\n        let n = frames.length;\n        for (let i = 1; i < n; i++)\n            if (frames[i] > time)\n                return i - 1;\n        return n - 1;\n    }\n    static search(frames, time, step) {\n        let n = frames.length;\n        for (let i = step; i < n; i += step)\n            if (frames[i] > time)\n                return i - step;\n        return n - step;\n    }\n}\n/** The base class for timelines that use interpolation between key frame values. */\nexport class CurveTimeline extends Timeline {\n    curves; // type, x, y, ...\n    constructor(frameCount, bezierCount, propertyIds) {\n        super(frameCount, propertyIds);\n        this.curves = Utils.newFloatArray(frameCount + bezierCount * 18 /*BEZIER_SIZE*/);\n        this.curves[frameCount - 1] = 1 /*STEPPED*/;\n    }\n    /** Sets the specified key frame to linear interpolation. */\n    setLinear(frame) {\n        this.curves[frame] = 0 /*LINEAR*/;\n    }\n    /** Sets the specified key frame to stepped interpolation. */\n    setStepped(frame) {\n        this.curves[frame] = 1 /*STEPPED*/;\n    }\n    /** Shrinks the storage for Bezier curves, for use when <code>bezierCount</code> (specified in the constructor) was larger\n     * than the actual number of Bezier curves. */\n    shrink(bezierCount) {\n        let size = this.getFrameCount() + bezierCount * 18 /*BEZIER_SIZE*/;\n        if (this.curves.length > size) {\n            let newCurves = Utils.newFloatArray(size);\n            Utils.arrayCopy(this.curves, 0, newCurves, 0, size);\n            this.curves = newCurves;\n        }\n    }\n    /** Stores the segments for the specified Bezier curve. For timelines that modify multiple values, there may be more than\n     * one curve per frame.\n     * @param bezier The ordinal of this Bezier curve for this timeline, between 0 and <code>bezierCount - 1</code> (specified\n     *           in the constructor), inclusive.\n     * @param frame Between 0 and <code>frameCount - 1</code>, inclusive.\n     * @param value The index of the value for this frame that this curve is used for.\n     * @param time1 The time for the first key.\n     * @param value1 The value for the first key.\n     * @param cx1 The time for the first Bezier handle.\n     * @param cy1 The value for the first Bezier handle.\n     * @param cx2 The time of the second Bezier handle.\n     * @param cy2 The value for the second Bezier handle.\n     * @param time2 The time for the second key.\n     * @param value2 The value for the second key. */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = (value1 - cy1 * 2 + cy2) * 0.03;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = ((cy1 - cy2) * 3 - value1 + value2) * 0.006;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = (cy1 - value1) * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = value1 + dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    /** Returns the Bezier interpolated value for the specified time.\n     * @param frameIndex The index into {@link #getFrames()} for the values of the frame before <code>time</code>.\n     * @param valueOffset The offset from <code>frameIndex</code> to the value this curve is used for.\n     * @param i The index of the Bezier segments. See {@link #getCurveType(int)}. */\n    getBezierValue(time, frameIndex, valueOffset, i) {\n        let curves = this.curves;\n        if (curves[i] > time) {\n            let x = this.frames[frameIndex], y = this.frames[frameIndex + valueOffset];\n            return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        frameIndex += this.getFrameEntries();\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (time - x) / (this.frames[frameIndex] - x) * (this.frames[frameIndex + valueOffset] - y);\n    }\n}\nexport class CurveTimeline1 extends CurveTimeline {\n    constructor(frameCount, bezierCount, propertyId) {\n        super(frameCount, bezierCount, [propertyId]);\n    }\n    getFrameEntries() {\n        return 2 /*ENTRIES*/;\n    }\n    /** Sets the time and value for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value) {\n        frame <<= 1;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE*/] = value;\n    }\n    /** Returns the interpolated value for the specified time. */\n    getCurveValue(time) {\n        let frames = this.frames;\n        let i = frames.length - 2;\n        for (let ii = 2; ii <= i; ii += 2) {\n            if (frames[ii] > time) {\n                i = ii - 2;\n                break;\n            }\n        }\n        let curveType = this.curves[i >> 1];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i], value = frames[i + 1 /*VALUE*/];\n                return value + (time - before) / (frames[i + 2 /*ENTRIES*/] - before) * (frames[i + 2 /*ENTRIES*/ + 1 /*VALUE*/] - value);\n            case 1 /*STEPPED*/:\n                return frames[i + 1 /*VALUE*/];\n        }\n        return this.getBezierValue(time, i, 1 /*VALUE*/, curveType - 2 /*BEZIER*/);\n    }\n    getRelativeValue(time, alpha, blend, current, setup) {\n        if (time < this.frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    return setup;\n                case MixBlend.first:\n                    return current + (setup - current) * alpha;\n            }\n            return current;\n        }\n        let value = this.getCurveValue(time);\n        switch (blend) {\n            case MixBlend.setup:\n                return setup + value * alpha;\n            case MixBlend.first:\n            case MixBlend.replace:\n                value += setup - current;\n        }\n        return current + value * alpha;\n    }\n    getAbsoluteValue(time, alpha, blend, current, setup) {\n        if (time < this.frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    return setup;\n                case MixBlend.first:\n                    return current + (setup - current) * alpha;\n            }\n            return current;\n        }\n        let value = this.getCurveValue(time);\n        if (blend == MixBlend.setup)\n            return setup + (value - setup) * alpha;\n        return current + (value - current) * alpha;\n    }\n    getAbsoluteValue2(time, alpha, blend, current, setup, value) {\n        if (time < this.frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    return setup;\n                case MixBlend.first:\n                    return current + (setup - current) * alpha;\n            }\n            return current;\n        }\n        if (blend == MixBlend.setup)\n            return setup + (value - setup) * alpha;\n        return current + (value - current) * alpha;\n    }\n    getScaleValue(time, alpha, blend, direction, current, setup) {\n        const frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    return setup;\n                case MixBlend.first:\n                    return current + (setup - current) * alpha;\n            }\n            return current;\n        }\n        let value = this.getCurveValue(time) * setup;\n        if (alpha == 1) {\n            if (blend == MixBlend.add)\n                return current + value - setup;\n            return value;\n        }\n        // Mixing out uses sign of setup or current pose, else use sign of key.\n        if (direction == MixDirection.mixOut) {\n            switch (blend) {\n                case MixBlend.setup:\n                    return setup + (Math.abs(value) * MathUtils.signum(setup) - setup) * alpha;\n                case MixBlend.first:\n                case MixBlend.replace:\n                    return current + (Math.abs(value) * MathUtils.signum(current) - current) * alpha;\n            }\n        }\n        else {\n            let s = 0;\n            switch (blend) {\n                case MixBlend.setup:\n                    s = Math.abs(setup) * MathUtils.signum(value);\n                    return s + (value - s) * alpha;\n                case MixBlend.first:\n                case MixBlend.replace:\n                    s = Math.abs(current) * MathUtils.signum(value);\n                    return s + (value - s) * alpha;\n            }\n        }\n        return current + (value - setup) * alpha;\n    }\n}\n/** The base class for a {@link CurveTimeline} which sets two properties. */\nexport class CurveTimeline2 extends CurveTimeline {\n    /** @param bezierCount The maximum number of Bezier curves. See {@link #shrink(int)}.\n     * @param propertyIds Unique identifiers for the properties the timeline modifies. */\n    constructor(frameCount, bezierCount, propertyId1, propertyId2) {\n        super(frameCount, bezierCount, [propertyId1, propertyId2]);\n    }\n    getFrameEntries() {\n        return 3 /*ENTRIES*/;\n    }\n    /** Sets the time and values for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, value1, value2) {\n        frame *= 3 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*VALUE1*/] = value1;\n        this.frames[frame + 2 /*VALUE2*/] = value2;\n    }\n}\n/** Changes a bone's local {@link Bone#rotation}. */\nexport class RotateTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.rotate + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.rotation = this.getRelativeValue(time, alpha, blend, bone.rotation, bone.data.rotation);\n    }\n}\n/** Changes a bone's local {@link Bone#x} and {@link Bone#y}. */\nexport class TranslateTimeline extends CurveTimeline2 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex, Property.y + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.x = bone.data.x;\n                    bone.y = bone.data.y;\n                    return;\n                case MixBlend.first:\n                    bone.x += (bone.data.x - bone.x) * alpha;\n                    bone.y += (bone.data.y - bone.y) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.x = bone.data.x + x * alpha;\n                bone.y = bone.data.y + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.x += (bone.data.x + x - bone.x) * alpha;\n                bone.y += (bone.data.y + y - bone.y) * alpha;\n                break;\n            case MixBlend.add:\n                bone.x += x * alpha;\n                bone.y += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateXTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.x + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.x = this.getRelativeValue(time, alpha, blend, bone.x, bone.data.x);\n    }\n}\n/** Changes a bone's local {@link Bone#x}. */\nexport class TranslateYTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.y + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.y = this.getRelativeValue(time, alpha, blend, bone.y, bone.data.y);\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleTimeline extends CurveTimeline2 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.scaleX = bone.data.scaleX;\n                    bone.scaleY = bone.data.scaleY;\n                    return;\n                case MixBlend.first:\n                    bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n                    bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n            }\n            return;\n        }\n        let x, y;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        x *= bone.data.scaleX;\n        y *= bone.data.scaleY;\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                bone.scaleX += x - bone.data.scaleX;\n                bone.scaleY += y - bone.data.scaleY;\n            }\n            else {\n                bone.scaleX = x;\n                bone.scaleY = y;\n            }\n        }\n        else {\n            let bx = 0, by = 0;\n            if (direction == MixDirection.mixOut) {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = bone.data.scaleX;\n                        by = bone.data.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = bone.scaleX;\n                        by = bone.scaleY;\n                        bone.scaleX = bx + (Math.abs(x) * MathUtils.signum(bx) - bx) * alpha;\n                        bone.scaleY = by + (Math.abs(y) * MathUtils.signum(by) - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup:\n                        bx = Math.abs(bone.data.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.data.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        bx = Math.abs(bone.scaleX) * MathUtils.signum(x);\n                        by = Math.abs(bone.scaleY) * MathUtils.signum(y);\n                        bone.scaleX = bx + (x - bx) * alpha;\n                        bone.scaleY = by + (y - by) * alpha;\n                        break;\n                    case MixBlend.add:\n                        bone.scaleX += (x - bone.data.scaleX) * alpha;\n                        bone.scaleY += (y - bone.data.scaleY) * alpha;\n                }\n            }\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleXTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.scaleX = this.getScaleValue(time, alpha, blend, direction, bone.scaleX, bone.data.scaleX);\n    }\n}\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\nexport class ScaleYTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.scaleY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.scaleY = this.getScaleValue(time, alpha, blend, direction, bone.scaleY, bone.data.scaleY);\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearTimeline extends CurveTimeline2 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.shearX = bone.data.shearX;\n                    bone.shearY = bone.data.shearY;\n                    return;\n                case MixBlend.first:\n                    bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n                    bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n            }\n            return;\n        }\n        let x = 0, y = 0;\n        let i = Timeline.search(frames, time, 3 /*ENTRIES*/);\n        let curveType = this.curves[i / 3 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                let t = (time - before) / (frames[i + 3 /*ENTRIES*/] - before);\n                x += (frames[i + 3 /*ENTRIES*/ + 1 /*VALUE1*/] - x) * t;\n                y += (frames[i + 3 /*ENTRIES*/ + 2 /*VALUE2*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                x = frames[i + 1 /*VALUE1*/];\n                y = frames[i + 2 /*VALUE2*/];\n                break;\n            default:\n                x = this.getBezierValue(time, i, 1 /*VALUE1*/, curveType - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 2 /*VALUE2*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        switch (blend) {\n            case MixBlend.setup:\n                bone.shearX = bone.data.shearX + x * alpha;\n                bone.shearY = bone.data.shearY + y * alpha;\n                break;\n            case MixBlend.first:\n            case MixBlend.replace:\n                bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n                bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n                break;\n            case MixBlend.add:\n                bone.shearX += x * alpha;\n                bone.shearY += y * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearXTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearX + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.shearX = this.getRelativeValue(time, alpha, blend, bone.shearX, bone.data.shearX);\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class ShearYTimeline extends CurveTimeline1 {\n    boneIndex = 0;\n    constructor(frameCount, bezierCount, boneIndex) {\n        super(frameCount, bezierCount, Property.shearY + \"|\" + boneIndex);\n        this.boneIndex = boneIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (bone.active)\n            bone.shearY = this.getRelativeValue(time, alpha, blend, bone.shearY, bone.data.shearY);\n    }\n}\nexport class InheritTimeline extends Timeline {\n    boneIndex = 0;\n    constructor(frameCount, boneIndex) {\n        super(frameCount, [Property.inherit + \"|\" + boneIndex]);\n        this.boneIndex = boneIndex;\n    }\n    getFrameEntries() {\n        return 2 /*ENTRIES*/;\n    }\n    /** Sets the transform mode for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time The frame time in seconds. */\n    setFrame(frame, time, inherit) {\n        frame *= 2 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*INHERIT*/] = inherit;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let bone = skeleton.bones[this.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                bone.inherit = bone.data.inherit;\n            return;\n        }\n        bone.inherit = this.frames[Timeline.search(frames, time, 2 /*ENTRIES*/) + 1 /*INHERIT*/];\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBATimeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 5 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b, a) {\n        frame *= 5 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.setFromColor(setup);\n                    return;\n                case MixBlend.first:\n                    color.add((setup.r - color.r) * alpha, (setup.g - color.g) * alpha, (setup.b - color.b) * alpha, (setup.a - color.a) * alpha);\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0;\n        let i = Timeline.search(frames, time, 5 /*ENTRIES*/);\n        let curveType = this.curves[i / 5 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                let t = (time - before) / (frames[i + 5 /*ENTRIES*/] - before);\n                r += (frames[i + 5 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 5 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 5 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 5 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1)\n            color.set(r, g, b, a);\n        else {\n            if (blend == MixBlend.setup)\n                color.setFromColor(slot.data.color);\n            color.add((r - color.r) * alpha, (g - color.g) * alpha, (b - color.b) * alpha, (a - color.a) * alpha);\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color}. */\nexport class RGBTimeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n    setFrame(frame, time, r, g, b) {\n        frame <<= 2;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let color = slot.color;\n        if (time < frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.r = setup.r;\n                    color.g = setup.g;\n                    color.b = setup.b;\n                    return;\n                case MixBlend.first:\n                    color.r += (setup.r - color.r) * alpha;\n                    color.g += (setup.g - color.g) * alpha;\n                    color.b += (setup.b - color.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                r += (frames[i + 4 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 4 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 4 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            color.r = r;\n            color.g = g;\n            color.b = b;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setup = slot.data.color;\n                color.r = setup.r;\n                color.g = setup.g;\n                color.b = setup.b;\n            }\n            color.r += (r - color.r) * alpha;\n            color.g += (g - color.g) * alpha;\n            color.b += (b - color.b) * alpha;\n        }\n    }\n}\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\nexport class AlphaTimeline extends CurveTimeline1 {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, Property.alpha + \"|\" + slotIndex);\n        this.slotIndex = slotIndex;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let color = slot.color;\n        if (time < this.frames[0]) {\n            let setup = slot.data.color;\n            switch (blend) {\n                case MixBlend.setup:\n                    color.a = setup.a;\n                    return;\n                case MixBlend.first:\n                    color.a += (setup.a - color.a) * alpha;\n            }\n            return;\n        }\n        let a = this.getCurveValue(time);\n        if (alpha == 1)\n            color.a = a;\n        else {\n            if (blend == MixBlend.setup)\n                color.a = slot.data.color.a;\n            color.a += (a - color.a) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGBA2Timeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.alpha + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 8 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, a, r2, g2, b2) {\n        frame <<= 3;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*A*/] = a;\n        this.frames[frame + 5 /*R2*/] = r2;\n        this.frames[frame + 6 /*G2*/] = g2;\n        this.frames[frame + 7 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.setFromColor(setupLight);\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.add((setupLight.r - light.r) * alpha, (setupLight.g - light.g) * alpha, (setupLight.b - light.b) * alpha, (setupLight.a - light.a) * alpha);\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 8 /*ENTRIES*/);\n        let curveType = this.curves[i >> 3];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                let t = (time - before) / (frames[i + 8 /*ENTRIES*/] - before);\n                r += (frames[i + 8 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 8 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 8 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                a += (frames[i + 8 /*ENTRIES*/ + 4 /*A*/] - a) * t;\n                r2 += (frames[i + 8 /*ENTRIES*/ + 5 /*R2*/] - r2) * t;\n                g2 += (frames[i + 8 /*ENTRIES*/ + 6 /*G2*/] - g2) * t;\n                b2 += (frames[i + 8 /*ENTRIES*/ + 7 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                a = frames[i + 4 /*A*/];\n                r2 = frames[i + 5 /*R2*/];\n                g2 = frames[i + 6 /*G2*/];\n                b2 = frames[i + 7 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                a = this.getBezierValue(time, i, 4 /*A*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 5 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 6 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 7 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 6 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.set(r, g, b, a);\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                light.setFromColor(slot.data.color);\n                let setupDark = slot.data.darkColor;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.add((r - light.r) * alpha, (g - light.g) * alpha, (b - light.b) * alpha, (a - light.a) * alpha);\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\nexport class RGB2Timeline extends CurveTimeline {\n    slotIndex = 0;\n    constructor(frameCount, bezierCount, slotIndex) {\n        super(frameCount, bezierCount, [\n            Property.rgb + \"|\" + slotIndex,\n            Property.rgb2 + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n    setFrame(frame, time, r, g, b, r2, g2, b2) {\n        frame *= 7 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*R*/] = r;\n        this.frames[frame + 2 /*G*/] = g;\n        this.frames[frame + 3 /*B*/] = b;\n        this.frames[frame + 4 /*R2*/] = r2;\n        this.frames[frame + 5 /*G2*/] = g2;\n        this.frames[frame + 6 /*B2*/] = b2;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let frames = this.frames;\n        let light = slot.color, dark = slot.darkColor;\n        if (time < frames[0]) {\n            let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n            switch (blend) {\n                case MixBlend.setup:\n                    light.r = setupLight.r;\n                    light.g = setupLight.g;\n                    light.b = setupLight.b;\n                    dark.r = setupDark.r;\n                    dark.g = setupDark.g;\n                    dark.b = setupDark.b;\n                    return;\n                case MixBlend.first:\n                    light.r += (setupLight.r - light.r) * alpha;\n                    light.g += (setupLight.g - light.g) * alpha;\n                    light.b += (setupLight.b - light.b) * alpha;\n                    dark.r += (setupDark.r - dark.r) * alpha;\n                    dark.g += (setupDark.g - dark.g) * alpha;\n                    dark.b += (setupDark.b - dark.b) * alpha;\n            }\n            return;\n        }\n        let r = 0, g = 0, b = 0, a = 0, r2 = 0, g2 = 0, b2 = 0;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                r += (frames[i + 7 /*ENTRIES*/ + 1 /*R*/] - r) * t;\n                g += (frames[i + 7 /*ENTRIES*/ + 2 /*G*/] - g) * t;\n                b += (frames[i + 7 /*ENTRIES*/ + 3 /*B*/] - b) * t;\n                r2 += (frames[i + 7 /*ENTRIES*/ + 4 /*R2*/] - r2) * t;\n                g2 += (frames[i + 7 /*ENTRIES*/ + 5 /*G2*/] - g2) * t;\n                b2 += (frames[i + 7 /*ENTRIES*/ + 6 /*B2*/] - b2) * t;\n                break;\n            case 1 /*STEPPED*/:\n                r = frames[i + 1 /*R*/];\n                g = frames[i + 2 /*G*/];\n                b = frames[i + 3 /*B*/];\n                r2 = frames[i + 4 /*R2*/];\n                g2 = frames[i + 5 /*G2*/];\n                b2 = frames[i + 6 /*B2*/];\n                break;\n            default:\n                r = this.getBezierValue(time, i, 1 /*R*/, curveType - 2 /*BEZIER*/);\n                g = this.getBezierValue(time, i, 2 /*G*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                b = this.getBezierValue(time, i, 3 /*B*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                r2 = this.getBezierValue(time, i, 4 /*R2*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                g2 = this.getBezierValue(time, i, 5 /*G2*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                b2 = this.getBezierValue(time, i, 6 /*B2*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (alpha == 1) {\n            light.r = r;\n            light.g = g;\n            light.b = b;\n            dark.r = r2;\n            dark.g = g2;\n            dark.b = b2;\n        }\n        else {\n            if (blend == MixBlend.setup) {\n                let setupLight = slot.data.color, setupDark = slot.data.darkColor;\n                light.r = setupLight.r;\n                light.g = setupLight.g;\n                light.b = setupLight.b;\n                dark.r = setupDark.r;\n                dark.g = setupDark.g;\n                dark.b = setupDark.b;\n            }\n            light.r += (r - light.r) * alpha;\n            light.g += (g - light.g) * alpha;\n            light.b += (b - light.b) * alpha;\n            dark.r += (r2 - dark.r) * alpha;\n            dark.g += (g2 - dark.g) * alpha;\n            dark.b += (b2 - dark.b) * alpha;\n        }\n    }\n}\n/** Changes a slot's {@link Slot#attachment}. */\nexport class AttachmentTimeline extends Timeline {\n    slotIndex = 0;\n    /** The attachment name for each key frame. May contain null values to clear the attachment. */\n    attachmentNames;\n    constructor(frameCount, slotIndex) {\n        super(frameCount, [\n            Property.attachment + \"|\" + slotIndex\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachmentNames = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the attachment name for the specified key frame. */\n    setFrame(frame, time, attachmentName) {\n        this.frames[frame] = time;\n        this.attachmentNames[frame] = attachmentName;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName);\n            return;\n        }\n        this.setAttachment(skeleton, slot, this.attachmentNames[Timeline.search1(this.frames, time)]);\n    }\n    setAttachment(skeleton, slot, attachmentName) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(this.slotIndex, attachmentName));\n    }\n}\n/** Changes a slot's {@link Slot#deform} to deform a {@link VertexAttachment}. */\nexport class DeformTimeline extends CurveTimeline {\n    slotIndex = 0;\n    /** The attachment that will be deformed. */\n    attachment;\n    /** The vertices for each key frame. */\n    vertices;\n    constructor(frameCount, bezierCount, slotIndex, attachment) {\n        super(frameCount, bezierCount, [\n            Property.deform + \"|\" + slotIndex + \"|\" + attachment.id\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n        this.vertices = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the vertices for the specified key frame.\n     * @param vertices Vertex positions for an unweighted VertexAttachment, or deform offsets if it has weights. */\n    setFrame(frame, time, vertices) {\n        this.frames[frame] = time;\n        this.vertices[frame] = vertices;\n    }\n    /** @param value1 Ignored (0 is used for a deform timeline).\n     * @param value2 Ignored (1 is used for a deform timeline). */\n    setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n        let curves = this.curves;\n        let i = this.getFrameCount() + bezier * 18 /*BEZIER_SIZE*/;\n        if (value == 0)\n            curves[frame] = 2 /*BEZIER*/ + i;\n        let tmpx = (time1 - cx1 * 2 + cx2) * 0.03, tmpy = cy2 * 0.03 - cy1 * 0.06;\n        let dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006, dddy = (cy1 - cy2 + 0.33333333) * 0.018;\n        let ddx = tmpx * 2 + dddx, ddy = tmpy * 2 + dddy;\n        let dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667, dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;\n        let x = time1 + dx, y = dy;\n        for (let n = i + 18 /*BEZIER_SIZE*/; i < n; i += 2) {\n            curves[i] = x;\n            curves[i + 1] = y;\n            dx += ddx;\n            dy += ddy;\n            ddx += dddx;\n            ddy += dddy;\n            x += dx;\n            y += dy;\n        }\n    }\n    getCurvePercent(time, frame) {\n        let curves = this.curves;\n        let i = curves[frame];\n        switch (i) {\n            case 0 /*LINEAR*/:\n                let x = this.frames[frame];\n                return (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n            case 1 /*STEPPED*/:\n                return 0;\n        }\n        i -= 2 /*BEZIER*/;\n        if (curves[i] > time) {\n            let x = this.frames[frame];\n            return curves[i + 1] * (time - x) / (curves[i] - x);\n        }\n        let n = i + 18 /*BEZIER_SIZE*/;\n        for (i += 2; i < n; i += 2) {\n            if (curves[i] >= time) {\n                let x = curves[i - 2], y = curves[i - 1];\n                return y + (time - x) / (curves[i] - x) * (curves[i + 1] - y);\n            }\n        }\n        let x = curves[n - 2], y = curves[n - 1];\n        return y + (1 - y) * (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.getAttachment();\n        if (!slotAttachment)\n            return;\n        if (!(slotAttachment instanceof VertexAttachment) || slotAttachment.timelineAttachment != this.attachment)\n            return;\n        let deform = slot.deform;\n        if (deform.length == 0)\n            blend = MixBlend.setup;\n        let vertices = this.vertices;\n        let vertexCount = vertices[0].length;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    deform.length = 0;\n                    return;\n                case MixBlend.first:\n                    if (alpha == 1) {\n                        deform.length = 0;\n                        return;\n                    }\n                    deform.length = vertexCount;\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] += (setupVertices[i] - deform[i]) * alpha;\n                    }\n                    else {\n                        // Weighted deform offsets.\n                        alpha = 1 - alpha;\n                        for (var i = 0; i < vertexCount; i++)\n                            deform[i] *= alpha;\n                    }\n            }\n            return;\n        }\n        deform.length = vertexCount;\n        if (time >= frames[frames.length - 1]) {\n            let lastVertices = vertices[frames.length - 1];\n            if (alpha == 1) {\n                if (blend == MixBlend.add) {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i] - setupVertices[i];\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += lastVertices[i];\n                    }\n                }\n                else\n                    Utils.arrayCopy(lastVertices, 0, deform, 0, vertexCount);\n            }\n            else {\n                switch (blend) {\n                    case MixBlend.setup: {\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++) {\n                                let setup = setupVertices[i];\n                                deform[i] = setup + (lastVertices[i] - setup) * alpha;\n                            }\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] = lastVertices[i] * alpha;\n                        }\n                        break;\n                    }\n                    case MixBlend.first:\n                    case MixBlend.replace:\n                        for (let i = 0; i < vertexCount; i++)\n                            deform[i] += (lastVertices[i] - deform[i]) * alpha;\n                        break;\n                    case MixBlend.add:\n                        let vertexAttachment = slotAttachment;\n                        if (!vertexAttachment.bones) {\n                            // Unweighted vertex positions, with alpha.\n                            let setupVertices = vertexAttachment.vertices;\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += (lastVertices[i] - setupVertices[i]) * alpha;\n                        }\n                        else {\n                            // Weighted deform offsets, with alpha.\n                            for (let i = 0; i < vertexCount; i++)\n                                deform[i] += lastVertices[i] * alpha;\n                        }\n                }\n            }\n            return;\n        }\n        // Interpolate between the previous frame and the current frame.\n        let frame = Timeline.search1(frames, time);\n        let percent = this.getCurvePercent(time, frame);\n        let prevVertices = vertices[frame];\n        let nextVertices = vertices[frame + 1];\n        if (alpha == 1) {\n            if (blend == MixBlend.add) {\n                let vertexAttachment = slotAttachment;\n                if (!vertexAttachment.bones) {\n                    // Unweighted vertex positions, with alpha.\n                    let setupVertices = vertexAttachment.vertices;\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent - setupVertices[i];\n                    }\n                }\n                else {\n                    // Weighted deform offsets, with alpha.\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += prev + (nextVertices[i] - prev) * percent;\n                    }\n                }\n            }\n            else {\n                for (let i = 0; i < vertexCount; i++) {\n                    let prev = prevVertices[i];\n                    deform[i] = prev + (nextVertices[i] - prev) * percent;\n                }\n            }\n        }\n        else {\n            switch (blend) {\n                case MixBlend.setup: {\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i], setup = setupVertices[i];\n                            deform[i] = setup + (prev + (nextVertices[i] - prev) * percent - setup) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] = (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n                    break;\n                }\n                case MixBlend.first:\n                case MixBlend.replace:\n                    for (let i = 0; i < vertexCount; i++) {\n                        let prev = prevVertices[i];\n                        deform[i] += (prev + (nextVertices[i] - prev) * percent - deform[i]) * alpha;\n                    }\n                    break;\n                case MixBlend.add:\n                    let vertexAttachment = slotAttachment;\n                    if (!vertexAttachment.bones) {\n                        // Unweighted vertex positions, with alpha.\n                        let setupVertices = vertexAttachment.vertices;\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent - setupVertices[i]) * alpha;\n                        }\n                    }\n                    else {\n                        // Weighted deform offsets, with alpha.\n                        for (let i = 0; i < vertexCount; i++) {\n                            let prev = prevVertices[i];\n                            deform[i] += (prev + (nextVertices[i] - prev) * percent) * alpha;\n                        }\n                    }\n            }\n        }\n    }\n}\n/** Fires an {@link Event} when specific animation times are reached. */\nexport class EventTimeline extends Timeline {\n    static propertyIds = [\"\" + Property.event];\n    /** The event for each key frame. */\n    events;\n    constructor(frameCount) {\n        super(frameCount, EventTimeline.propertyIds);\n        this.events = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the event for the specified key frame. */\n    setFrame(frame, event) {\n        this.frames[frame] = event.time;\n        this.events[frame] = event;\n    }\n    /** Fires events for frames > `lastTime` and <= `time`. */\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (!firedEvents)\n            return;\n        let frames = this.frames;\n        let frameCount = this.frames.length;\n        if (lastTime > time) { // Apply after lastTime for looped animations.\n            this.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha, blend, direction);\n            lastTime = -1;\n        }\n        else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n            return;\n        if (time < frames[0])\n            return;\n        let i = 0;\n        if (lastTime < frames[0])\n            i = 0;\n        else {\n            i = Timeline.search1(frames, lastTime) + 1;\n            let frameTime = frames[i];\n            while (i > 0) { // Fire multiple events with the same frame.\n                if (frames[i - 1] != frameTime)\n                    break;\n                i--;\n            }\n        }\n        for (; i < frameCount && time >= frames[i]; i++)\n            firedEvents.push(this.events[i]);\n    }\n}\n/** Changes a skeleton's {@link Skeleton#drawOrder}. */\nexport class DrawOrderTimeline extends Timeline {\n    static propertyIds = [\"\" + Property.drawOrder];\n    /** The draw order for each key frame. See {@link #setFrame(int, float, int[])}. */\n    drawOrders;\n    constructor(frameCount) {\n        super(frameCount, DrawOrderTimeline.propertyIds);\n        this.drawOrders = new Array(frameCount);\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time in seconds and the draw order for the specified key frame.\n     * @param drawOrder For each slot in {@link Skeleton#slots}, the index of the new draw order. May be null to use setup pose\n     *           draw order. */\n    setFrame(frame, time, drawOrder) {\n        this.frames[frame] = time;\n        this.drawOrders[frame] = drawOrder;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        if (direction == MixDirection.mixOut) {\n            if (blend == MixBlend.setup)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        if (time < this.frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n            return;\n        }\n        let idx = Timeline.search1(this.frames, time);\n        let drawOrderToSetupIndex = this.drawOrders[idx];\n        if (!drawOrderToSetupIndex)\n            Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n        else {\n            let drawOrder = skeleton.drawOrder;\n            let slots = skeleton.slots;\n            for (let i = 0, n = drawOrderToSetupIndex.length; i < n; i++)\n                drawOrder[i] = slots[drawOrderToSetupIndex[i]];\n        }\n    }\n}\n/** Changes an IK constraint's {@link IkConstraint#mix}, {@link IkConstraint#softness},\n * {@link IkConstraint#bendDirection}, {@link IkConstraint#stretch}, and {@link IkConstraint#compress}. */\nexport class IkConstraintTimeline extends CurveTimeline {\n    /** The index of the IK constraint in {@link Skeleton#getIkConstraints()} that will be changed when this timeline is applied */\n    constraintIndex = 0;\n    constructor(frameCount, bezierCount, ikConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.ikConstraint + \"|\" + ikConstraintIndex\n        ]);\n        this.constraintIndex = ikConstraintIndex;\n    }\n    getFrameEntries() {\n        return 6 /*ENTRIES*/;\n    }\n    /** Sets the time in seconds, mix, softness, bend direction, compress, and stretch for the specified key frame. */\n    setFrame(frame, time, mix, softness, bendDirection, compress, stretch) {\n        frame *= 6 /*ENTRIES*/;\n        this.frames[frame] = time;\n        this.frames[frame + 1 /*MIX*/] = mix;\n        this.frames[frame + 2 /*SOFTNESS*/] = softness;\n        this.frames[frame + 3 /*BEND_DIRECTION*/] = bendDirection;\n        this.frames[frame + 4 /*COMPRESS*/] = compress ? 1 : 0;\n        this.frames[frame + 5 /*STRETCH*/] = stretch ? 1 : 0;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.ikConstraints[this.constraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mix = constraint.data.mix;\n                    constraint.softness = constraint.data.softness;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n                    return;\n                case MixBlend.first:\n                    constraint.mix += (constraint.data.mix - constraint.mix) * alpha;\n                    constraint.softness += (constraint.data.softness - constraint.softness) * alpha;\n                    constraint.bendDirection = constraint.data.bendDirection;\n                    constraint.compress = constraint.data.compress;\n                    constraint.stretch = constraint.data.stretch;\n            }\n            return;\n        }\n        let mix = 0, softness = 0;\n        let i = Timeline.search(frames, time, 6 /*ENTRIES*/);\n        let curveType = this.curves[i / 6 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                let t = (time - before) / (frames[i + 6 /*ENTRIES*/] - before);\n                mix += (frames[i + 6 /*ENTRIES*/ + 1 /*MIX*/] - mix) * t;\n                softness += (frames[i + 6 /*ENTRIES*/ + 2 /*SOFTNESS*/] - softness) * t;\n                break;\n            case 1 /*STEPPED*/:\n                mix = frames[i + 1 /*MIX*/];\n                softness = frames[i + 2 /*SOFTNESS*/];\n                break;\n            default:\n                mix = this.getBezierValue(time, i, 1 /*MIX*/, curveType - 2 /*BEZIER*/);\n                softness = this.getBezierValue(time, i, 2 /*SOFTNESS*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            constraint.mix = constraint.data.mix + (mix - constraint.data.mix) * alpha;\n            constraint.softness = constraint.data.softness + (softness - constraint.data.softness) * alpha;\n            if (direction == MixDirection.mixOut) {\n                constraint.bendDirection = constraint.data.bendDirection;\n                constraint.compress = constraint.data.compress;\n                constraint.stretch = constraint.data.stretch;\n            }\n            else {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n        else {\n            constraint.mix += (mix - constraint.mix) * alpha;\n            constraint.softness += (softness - constraint.softness) * alpha;\n            if (direction == MixDirection.mixIn) {\n                constraint.bendDirection = frames[i + 3 /*BEND_DIRECTION*/];\n                constraint.compress = frames[i + 4 /*COMPRESS*/] != 0;\n                constraint.stretch = frames[i + 5 /*STRETCH*/] != 0;\n            }\n        }\n    }\n}\n/** Changes a transform constraint's {@link TransformConstraint#rotateMix}, {@link TransformConstraint#translateMix},\n * {@link TransformConstraint#scaleMix}, and {@link TransformConstraint#shearMix}. */\nexport class TransformConstraintTimeline extends CurveTimeline {\n    /** The index of the transform constraint slot in {@link Skeleton#transformConstraints} that will be changed. */\n    constraintIndex = 0;\n    constructor(frameCount, bezierCount, transformConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.transformConstraint + \"|\" + transformConstraintIndex\n        ]);\n        this.constraintIndex = transformConstraintIndex;\n    }\n    getFrameEntries() {\n        return 7 /*ENTRIES*/;\n    }\n    /** The time in seconds, rotate mix, translate mix, scale mix, and shear mix for the specified key frame. */\n    setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY) {\n        let frames = this.frames;\n        frame *= 7 /*ENTRIES*/;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n        frames[frame + 4 /*SCALEX*/] = mixScaleX;\n        frames[frame + 5 /*SCALEY*/] = mixScaleY;\n        frames[frame + 6 /*SHEARY*/] = mixShearY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.transformConstraints[this.constraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            let data = constraint.data;\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = data.mixRotate;\n                    constraint.mixX = data.mixX;\n                    constraint.mixY = data.mixY;\n                    constraint.mixScaleX = data.mixScaleX;\n                    constraint.mixScaleY = data.mixScaleY;\n                    constraint.mixShearY = data.mixShearY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (data.mixY - constraint.mixY) * alpha;\n                    constraint.mixScaleX += (data.mixScaleX - constraint.mixScaleX) * alpha;\n                    constraint.mixScaleY += (data.mixScaleY - constraint.mixScaleY) * alpha;\n                    constraint.mixShearY += (data.mixShearY - constraint.mixShearY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y, scaleX, scaleY, shearY;\n        let i = Timeline.search(frames, time, 7 /*ENTRIES*/);\n        let curveType = this.curves[i / 7 /*ENTRIES*/];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                let t = (time - before) / (frames[i + 7 /*ENTRIES*/] - before);\n                rotate += (frames[i + 7 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 7 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 7 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                scaleX += (frames[i + 7 /*ENTRIES*/ + 4 /*SCALEX*/] - scaleX) * t;\n                scaleY += (frames[i + 7 /*ENTRIES*/ + 5 /*SCALEY*/] - scaleY) * t;\n                shearY += (frames[i + 7 /*ENTRIES*/ + 6 /*SHEARY*/] - shearY) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                scaleX = frames[i + 4 /*SCALEX*/];\n                scaleY = frames[i + 5 /*SCALEY*/];\n                shearY = frames[i + 6 /*SHEARY*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n                scaleX = this.getBezierValue(time, i, 4 /*SCALEX*/, curveType + 18 /*BEZIER_SIZE*/ * 3 - 2 /*BEZIER*/);\n                scaleY = this.getBezierValue(time, i, 5 /*SCALEY*/, curveType + 18 /*BEZIER_SIZE*/ * 4 - 2 /*BEZIER*/);\n                shearY = this.getBezierValue(time, i, 6 /*SHEARY*/, curveType + 18 /*BEZIER_SIZE*/ * 5 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n            constraint.mixScaleX = data.mixScaleX + (scaleX - data.mixScaleX) * alpha;\n            constraint.mixScaleY = data.mixScaleY + (scaleY - data.mixScaleY) * alpha;\n            constraint.mixShearY = data.mixShearY + (shearY - data.mixShearY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n            constraint.mixScaleX += (scaleX - constraint.mixScaleX) * alpha;\n            constraint.mixScaleY += (scaleY - constraint.mixScaleY) * alpha;\n            constraint.mixShearY += (shearY - constraint.mixShearY) * alpha;\n        }\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#position}. */\nexport class PathConstraintPositionTimeline extends CurveTimeline1 {\n    /** The index of the path constraint in {@link Skeleton#getPathConstraints()} that will be changed when this timeline is\n     * applied. */\n    constraintIndex = 0;\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintPosition + \"|\" + pathConstraintIndex);\n        this.constraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.constraintIndex];\n        if (constraint.active)\n            constraint.position = this.getAbsoluteValue(time, alpha, blend, constraint.position, constraint.data.position);\n    }\n}\n/** Changes a path constraint's {@link PathConstraint#spacing}. */\nexport class PathConstraintSpacingTimeline extends CurveTimeline1 {\n    /** The index of the path constraint in {@link Skeleton#getPathConstraints()} that will be changed when this timeline is\n     * applied. */\n    constraintIndex = 0;\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, Property.pathConstraintSpacing + \"|\" + pathConstraintIndex);\n        this.constraintIndex = pathConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.constraintIndex];\n        if (constraint.active)\n            constraint.spacing = this.getAbsoluteValue(time, alpha, blend, constraint.spacing, constraint.data.spacing);\n    }\n}\n/** Changes a transform constraint's {@link PathConstraint#getMixRotate()}, {@link PathConstraint#getMixX()}, and\n * {@link PathConstraint#getMixY()}. */\nexport class PathConstraintMixTimeline extends CurveTimeline {\n    /** The index of the path constraint in {@link Skeleton#getPathConstraints()} that will be changed when this timeline is\n     * applied. */\n    constraintIndex = 0;\n    constructor(frameCount, bezierCount, pathConstraintIndex) {\n        super(frameCount, bezierCount, [\n            Property.pathConstraintMix + \"|\" + pathConstraintIndex\n        ]);\n        this.constraintIndex = pathConstraintIndex;\n    }\n    getFrameEntries() {\n        return 4 /*ENTRIES*/;\n    }\n    setFrame(frame, time, mixRotate, mixX, mixY) {\n        let frames = this.frames;\n        frame <<= 2;\n        frames[frame] = time;\n        frames[frame + 1 /*ROTATE*/] = mixRotate;\n        frames[frame + 2 /*X*/] = mixX;\n        frames[frame + 3 /*Y*/] = mixY;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint = skeleton.pathConstraints[this.constraintIndex];\n        if (!constraint.active)\n            return;\n        let frames = this.frames;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    constraint.mixRotate = constraint.data.mixRotate;\n                    constraint.mixX = constraint.data.mixX;\n                    constraint.mixY = constraint.data.mixY;\n                    return;\n                case MixBlend.first:\n                    constraint.mixRotate += (constraint.data.mixRotate - constraint.mixRotate) * alpha;\n                    constraint.mixX += (constraint.data.mixX - constraint.mixX) * alpha;\n                    constraint.mixY += (constraint.data.mixY - constraint.mixY) * alpha;\n            }\n            return;\n        }\n        let rotate, x, y;\n        let i = Timeline.search(frames, time, 4 /*ENTRIES*/);\n        let curveType = this.curves[i >> 2];\n        switch (curveType) {\n            case 0 /*LINEAR*/:\n                let before = frames[i];\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                let t = (time - before) / (frames[i + 4 /*ENTRIES*/] - before);\n                rotate += (frames[i + 4 /*ENTRIES*/ + 1 /*ROTATE*/] - rotate) * t;\n                x += (frames[i + 4 /*ENTRIES*/ + 2 /*X*/] - x) * t;\n                y += (frames[i + 4 /*ENTRIES*/ + 3 /*Y*/] - y) * t;\n                break;\n            case 1 /*STEPPED*/:\n                rotate = frames[i + 1 /*ROTATE*/];\n                x = frames[i + 2 /*X*/];\n                y = frames[i + 3 /*Y*/];\n                break;\n            default:\n                rotate = this.getBezierValue(time, i, 1 /*ROTATE*/, curveType - 2 /*BEZIER*/);\n                x = this.getBezierValue(time, i, 2 /*X*/, curveType + 18 /*BEZIER_SIZE*/ - 2 /*BEZIER*/);\n                y = this.getBezierValue(time, i, 3 /*Y*/, curveType + 18 /*BEZIER_SIZE*/ * 2 - 2 /*BEZIER*/);\n        }\n        if (blend == MixBlend.setup) {\n            let data = constraint.data;\n            constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n            constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n            constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n        }\n        else {\n            constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n            constraint.mixX += (x - constraint.mixX) * alpha;\n            constraint.mixY += (y - constraint.mixY) * alpha;\n        }\n    }\n}\n/** The base class for most {@link PhysicsConstraint} timelines. */\nexport class PhysicsConstraintTimeline extends CurveTimeline1 {\n    /** The index of the physics constraint in {@link Skeleton#getPhysicsConstraints()} that will be changed when this timeline\n     * is applied, or -1 if all physics constraints in the skeleton will be changed. */\n    constraintIndex = 0;\n    /** @param physicsConstraintIndex -1 for all physics constraints in the skeleton. */\n    constructor(frameCount, bezierCount, physicsConstraintIndex, property) {\n        super(frameCount, bezierCount, property + \"|\" + physicsConstraintIndex);\n        this.constraintIndex = physicsConstraintIndex;\n    }\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint;\n        if (this.constraintIndex == -1) {\n            const value = time >= this.frames[0] ? this.getCurveValue(time) : 0;\n            for (const constraint of skeleton.physicsConstraints) {\n                if (constraint.active && this.global(constraint.data))\n                    this.set(constraint, this.getAbsoluteValue2(time, alpha, blend, this.get(constraint), this.setup(constraint), value));\n            }\n        }\n        else {\n            constraint = skeleton.physicsConstraints[this.constraintIndex];\n            if (constraint.active)\n                this.set(constraint, this.getAbsoluteValue(time, alpha, blend, this.get(constraint), this.setup(constraint)));\n        }\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getInertia()}. */\nexport class PhysicsConstraintInertiaTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintInertia);\n    }\n    setup(constraint) {\n        return constraint.data.inertia;\n    }\n    get(constraint) {\n        return constraint.inertia;\n    }\n    set(constraint, value) {\n        constraint.inertia = value;\n    }\n    global(constraint) {\n        return constraint.inertiaGlobal;\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getStrength()}. */\nexport class PhysicsConstraintStrengthTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintStrength);\n    }\n    setup(constraint) {\n        return constraint.data.strength;\n    }\n    get(constraint) {\n        return constraint.strength;\n    }\n    set(constraint, value) {\n        constraint.strength = value;\n    }\n    global(constraint) {\n        return constraint.strengthGlobal;\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getDamping()}. */\nexport class PhysicsConstraintDampingTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintDamping);\n    }\n    setup(constraint) {\n        return constraint.data.damping;\n    }\n    get(constraint) {\n        return constraint.damping;\n    }\n    set(constraint, value) {\n        constraint.damping = value;\n    }\n    global(constraint) {\n        return constraint.dampingGlobal;\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getMassInverse()}. The timeline values are not inverted. */\nexport class PhysicsConstraintMassTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintMass);\n    }\n    setup(constraint) {\n        return 1 / constraint.data.massInverse;\n    }\n    get(constraint) {\n        return 1 / constraint.massInverse;\n    }\n    set(constraint, value) {\n        constraint.massInverse = 1 / value;\n    }\n    global(constraint) {\n        return constraint.massGlobal;\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getWind()}. */\nexport class PhysicsConstraintWindTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintWind);\n    }\n    setup(constraint) {\n        return constraint.data.wind;\n    }\n    get(constraint) {\n        return constraint.wind;\n    }\n    set(constraint, value) {\n        constraint.wind = value;\n    }\n    global(constraint) {\n        return constraint.windGlobal;\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getGravity()}. */\nexport class PhysicsConstraintGravityTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintGravity);\n    }\n    setup(constraint) {\n        return constraint.data.gravity;\n    }\n    get(constraint) {\n        return constraint.gravity;\n    }\n    set(constraint, value) {\n        constraint.gravity = value;\n    }\n    global(constraint) {\n        return constraint.gravityGlobal;\n    }\n}\n/** Changes a physics constraint's {@link PhysicsConstraint#getMix()}. */\nexport class PhysicsConstraintMixTimeline extends PhysicsConstraintTimeline {\n    constructor(frameCount, bezierCount, physicsConstraintIndex) {\n        super(frameCount, bezierCount, physicsConstraintIndex, Property.physicsConstraintMix);\n    }\n    setup(constraint) {\n        return constraint.data.mix;\n    }\n    get(constraint) {\n        return constraint.mix;\n    }\n    set(constraint, value) {\n        constraint.mix = value;\n    }\n    global(constraint) {\n        return constraint.mixGlobal;\n    }\n}\n/** Resets a physics constraint when specific animation times are reached. */\nexport class PhysicsConstraintResetTimeline extends Timeline {\n    static propertyIds = [Property.physicsConstraintReset.toString()];\n    /** The index of the physics constraint in {@link Skeleton#getPhysicsConstraints()} that will be reset when this timeline is\n    * applied, or -1 if all physics constraints in the skeleton will be reset. */\n    constraintIndex;\n    /** @param physicsConstraintIndex -1 for all physics constraints in the skeleton. */\n    constructor(frameCount, physicsConstraintIndex) {\n        super(frameCount, PhysicsConstraintResetTimeline.propertyIds);\n        this.constraintIndex = physicsConstraintIndex;\n    }\n    getFrameCount() {\n        return this.frames.length;\n    }\n    /** Sets the time for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive. */\n    setFrame(frame, time) {\n        this.frames[frame] = time;\n    }\n    /** Resets the physics constraint when frames > <code>lastTime</code> and <= <code>time</code>. */\n    apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n        let constraint;\n        if (this.constraintIndex != -1) {\n            constraint = skeleton.physicsConstraints[this.constraintIndex];\n            if (!constraint.active)\n                return;\n        }\n        const frames = this.frames;\n        if (lastTime > time) { // Apply after lastTime for looped animations.\n            this.apply(skeleton, lastTime, Number.MAX_VALUE, [], alpha, blend, direction);\n            lastTime = -1;\n        }\n        else if (lastTime >= frames[frames.length - 1]) // Last time is after last frame.\n            return;\n        if (time < frames[0])\n            return;\n        if (lastTime < frames[0] || time >= frames[Timeline.search1(frames, lastTime) + 1]) {\n            if (constraint != null)\n                constraint.reset();\n            else {\n                for (const constraint of skeleton.physicsConstraints) {\n                    if (constraint.active)\n                        constraint.reset();\n                }\n            }\n        }\n    }\n}\n/** Changes a slot's {@link Slot#getSequenceIndex()} for an attachment's {@link Sequence}. */\nexport class SequenceTimeline extends Timeline {\n    static ENTRIES = 3;\n    static MODE = 1;\n    static DELAY = 2;\n    slotIndex;\n    attachment;\n    constructor(frameCount, slotIndex, attachment) {\n        super(frameCount, [\n            Property.sequence + \"|\" + slotIndex + \"|\" + attachment.sequence.id\n        ]);\n        this.slotIndex = slotIndex;\n        this.attachment = attachment;\n    }\n    getFrameEntries() {\n        return SequenceTimeline.ENTRIES;\n    }\n    getSlotIndex() {\n        return this.slotIndex;\n    }\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the time, mode, index, and frame time for the specified frame.\n     * @param frame Between 0 and <code>frameCount</code>, inclusive.\n     * @param time Seconds between frames. */\n    setFrame(frame, time, mode, index, delay) {\n        let frames = this.frames;\n        frame *= SequenceTimeline.ENTRIES;\n        frames[frame] = time;\n        frames[frame + SequenceTimeline.MODE] = mode | (index << 4);\n        frames[frame + SequenceTimeline.DELAY] = delay;\n    }\n    apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n        let slot = skeleton.slots[this.slotIndex];\n        if (!slot.bone.active)\n            return;\n        let slotAttachment = slot.attachment;\n        let attachment = this.attachment;\n        if (slotAttachment != attachment) {\n            if (!(slotAttachment instanceof VertexAttachment)\n                || slotAttachment.timelineAttachment != attachment)\n                return;\n        }\n        let frames = this.frames;\n        if (time < frames[0]) {\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                slot.sequenceIndex = -1;\n            return;\n        }\n        let i = Timeline.search(frames, time, SequenceTimeline.ENTRIES);\n        let before = frames[i];\n        let modeAndIndex = frames[i + SequenceTimeline.MODE];\n        let delay = frames[i + SequenceTimeline.DELAY];\n        if (!this.attachment.sequence)\n            return;\n        let index = modeAndIndex >> 4, count = this.attachment.sequence.regions.length;\n        let mode = SequenceModeValues[modeAndIndex & 0xf];\n        if (mode != SequenceMode.hold) {\n            index += (((time - before) / delay + 0.00001) | 0);\n            switch (mode) {\n                case SequenceMode.once:\n                    index = Math.min(count - 1, index);\n                    break;\n                case SequenceMode.loop:\n                    index %= count;\n                    break;\n                case SequenceMode.pingpong: {\n                    let n = (count << 1) - 2;\n                    index = n == 0 ? 0 : index % n;\n                    if (index >= count)\n                        index = n - index;\n                    break;\n                }\n                case SequenceMode.onceReverse:\n                    index = Math.max(count - 1 - index, 0);\n                    break;\n                case SequenceMode.loopReverse:\n                    index = count - 1 - (index % count);\n                    break;\n                case SequenceMode.pingpongReverse: {\n                    let n = (count << 1) - 2;\n                    index = n == 0 ? 0 : (index + count - 1) % n;\n                    if (index >= count)\n                        index = n - index;\n                }\n            }\n        }\n        slot.sequenceIndex = index;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, MixBlend, AttachmentTimeline, MixDirection, RotateTimeline, DrawOrderTimeline, Timeline, EventTimeline } from \"./Animation.js\";\nimport { StringSet, Pool, Utils, MathUtils } from \"./Utils.js\";\n/** Applies animations over time, queues animations for later playback, mixes (crossfading) between animations, and applies\n * multiple animations on top of each other (layering).\n *\n * See [Applying Animations](http://esotericsoftware.com/spine-applying-animations/) in the Spine Runtimes Guide. */\nexport class AnimationState {\n    static _emptyAnimation = new Animation(\"<empty>\", [], 0);\n    static emptyAnimation() {\n        return AnimationState._emptyAnimation;\n    }\n    /** The AnimationStateData to look up mix durations. */\n    data;\n    /** The list of tracks that currently have animations, which may contain null entries. */\n    tracks = new Array();\n    /** Multiplier for the delta time when the animation state is updated, causing time for all animations and mixes to play slower\n     * or faster. Defaults to 1.\n     *\n     * See TrackEntry {@link TrackEntry#timeScale} for affecting a single animation. */\n    timeScale = 1;\n    unkeyedState = 0;\n    events = new Array();\n    listeners = new Array();\n    queue = new EventQueue(this);\n    propertyIDs = new StringSet();\n    animationsChanged = false;\n    trackEntryPool = new Pool(() => new TrackEntry());\n    constructor(data) {\n        this.data = data;\n    }\n    /** Increments each track entry {@link TrackEntry#trackTime()}, setting queued animations as current if needed. */\n    update(delta) {\n        delta *= this.timeScale;\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current)\n                continue;\n            current.animationLast = current.nextAnimationLast;\n            current.trackLast = current.nextTrackLast;\n            let currentDelta = delta * current.timeScale;\n            if (current.delay > 0) {\n                current.delay -= currentDelta;\n                if (current.delay > 0)\n                    continue;\n                currentDelta = -current.delay;\n                current.delay = 0;\n            }\n            let next = current.next;\n            if (next) {\n                // When the next entry's delay is passed, change to the next entry, preserving leftover time.\n                let nextTime = current.trackLast - next.delay;\n                if (nextTime >= 0) {\n                    next.delay = 0;\n                    next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta) * next.timeScale;\n                    current.trackTime += currentDelta;\n                    this.setCurrent(i, next, true);\n                    while (next.mixingFrom) {\n                        next.mixTime += delta;\n                        next = next.mixingFrom;\n                    }\n                    continue;\n                }\n            }\n            else if (current.trackLast >= current.trackEnd && !current.mixingFrom) {\n                tracks[i] = null;\n                this.queue.end(current);\n                this.clearNext(current);\n                continue;\n            }\n            if (current.mixingFrom && this.updateMixingFrom(current, delta)) {\n                // End mixing from entries once all have completed.\n                let from = current.mixingFrom;\n                current.mixingFrom = null;\n                if (from)\n                    from.mixingTo = null;\n                while (from) {\n                    this.queue.end(from);\n                    from = from.mixingFrom;\n                }\n            }\n            current.trackTime += currentDelta;\n        }\n        this.queue.drain();\n    }\n    /** Returns true when all mixing from entries are complete. */\n    updateMixingFrom(to, delta) {\n        let from = to.mixingFrom;\n        if (!from)\n            return true;\n        let finished = this.updateMixingFrom(from, delta);\n        from.animationLast = from.nextAnimationLast;\n        from.trackLast = from.nextTrackLast;\n        // Require mixTime > 0 to ensure the mixing from entry was applied at least once.\n        if (to.mixTime > 0 && to.mixTime >= to.mixDuration) {\n            // Require totalAlpha == 0 to ensure mixing is complete, unless mixDuration == 0 (the transition is a single frame).\n            if (from.totalAlpha == 0 || to.mixDuration == 0) {\n                to.mixingFrom = from.mixingFrom;\n                if (from.mixingFrom)\n                    from.mixingFrom.mixingTo = to;\n                to.interruptAlpha = from.interruptAlpha;\n                this.queue.end(from);\n            }\n            return finished;\n        }\n        from.trackTime += delta * from.timeScale;\n        to.mixTime += delta;\n        return false;\n    }\n    /** Poses the skeleton using the track entry animations. There are no side effects other than invoking listeners, so the\n     * animation state can be applied to multiple skeletons to pose them identically.\n     * @returns True if any animations were applied. */\n    apply(skeleton) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        if (this.animationsChanged)\n            this._animationsChanged();\n        let events = this.events;\n        let tracks = this.tracks;\n        let applied = false;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let current = tracks[i];\n            if (!current || current.delay > 0)\n                continue;\n            applied = true;\n            let blend = i == 0 ? MixBlend.first : current.mixBlend;\n            // Apply mixing from entries first.\n            let alpha = current.alpha;\n            if (current.mixingFrom)\n                alpha *= this.applyMixingFrom(current, skeleton, blend);\n            else if (current.trackTime >= current.trackEnd && !current.next)\n                alpha = 0;\n            let attachments = alpha >= current.alphaAttachmentThreshold;\n            // Apply current entry.\n            let animationLast = current.animationLast, animationTime = current.getAnimationTime(), applyTime = animationTime;\n            let applyEvents = events;\n            if (current.reverse) {\n                applyTime = current.animation.duration - applyTime;\n                applyEvents = null;\n            }\n            let timelines = current.animation.timelines;\n            let timelineCount = timelines.length;\n            if ((i == 0 && alpha == 1) || blend == MixBlend.add) {\n                if (i == 0)\n                    attachments = true;\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    // Fixes issue #302 on IOS9 where mix, blend sometimes became undefined and caused assets\n                    // to sometimes stop rendering when using color correction, as their RGBA values become NaN.\n                    // (https://github.com/pixijs/pixi-spine/issues/302)\n                    Utils.webkit602BugfixHelper(alpha, blend);\n                    var timeline = timelines[ii];\n                    if (timeline instanceof AttachmentTimeline)\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, attachments);\n                    else\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, alpha, blend, MixDirection.mixIn);\n                }\n            }\n            else {\n                let timelineMode = current.timelineMode;\n                let shortestRotation = current.shortestRotation;\n                let firstFrame = !shortestRotation && current.timelinesRotation.length != timelineCount << 1;\n                if (firstFrame)\n                    current.timelinesRotation.length = timelineCount << 1;\n                for (let ii = 0; ii < timelineCount; ii++) {\n                    let timeline = timelines[ii];\n                    let timelineBlend = timelineMode[ii] == SUBSEQUENT ? blend : MixBlend.setup;\n                    if (!shortestRotation && timeline instanceof RotateTimeline) {\n                        this.applyRotateTimeline(timeline, skeleton, applyTime, alpha, timelineBlend, current.timelinesRotation, ii << 1, firstFrame);\n                    }\n                    else if (timeline instanceof AttachmentTimeline) {\n                        this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, attachments);\n                    }\n                    else {\n                        // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                        Utils.webkit602BugfixHelper(alpha, blend);\n                        timeline.apply(skeleton, animationLast, applyTime, applyEvents, alpha, timelineBlend, MixDirection.mixIn);\n                    }\n                }\n            }\n            this.queueEvents(current, animationTime);\n            events.length = 0;\n            current.nextAnimationLast = animationTime;\n            current.nextTrackLast = current.trackTime;\n        }\n        // Set slots attachments to the setup pose, if needed. This occurs if an animation that is mixing out sets attachments so\n        // subsequent timelines see any deform, but the subsequent timelines don't set an attachment (eg they are also mixing out or\n        // the time is before the first key).\n        var setupState = this.unkeyedState + SETUP;\n        var slots = skeleton.slots;\n        for (var i = 0, n = skeleton.slots.length; i < n; i++) {\n            var slot = slots[i];\n            if (slot.attachmentState == setupState) {\n                var attachmentName = slot.data.attachmentName;\n                slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n            }\n        }\n        this.unkeyedState += 2; // Increasing after each use avoids the need to reset attachmentState for every slot.\n        this.queue.drain();\n        return applied;\n    }\n    applyMixingFrom(to, skeleton, blend) {\n        let from = to.mixingFrom;\n        if (from.mixingFrom)\n            this.applyMixingFrom(from, skeleton, blend);\n        let mix = 0;\n        if (to.mixDuration == 0) { // Single frame mix to undo mixingFrom changes.\n            mix = 1;\n            if (blend == MixBlend.first)\n                blend = MixBlend.setup;\n        }\n        else {\n            mix = to.mixTime / to.mixDuration;\n            if (mix > 1)\n                mix = 1;\n            if (blend != MixBlend.first)\n                blend = from.mixBlend;\n        }\n        let attachments = mix < from.mixAttachmentThreshold, drawOrder = mix < from.mixDrawOrderThreshold;\n        let timelines = from.animation.timelines;\n        let timelineCount = timelines.length;\n        let alphaHold = from.alpha * to.interruptAlpha, alphaMix = alphaHold * (1 - mix);\n        let animationLast = from.animationLast, animationTime = from.getAnimationTime(), applyTime = animationTime;\n        let events = null;\n        if (from.reverse)\n            applyTime = from.animation.duration - applyTime;\n        else if (mix < from.eventThreshold)\n            events = this.events;\n        if (blend == MixBlend.add) {\n            for (let i = 0; i < timelineCount; i++)\n                timelines[i].apply(skeleton, animationLast, applyTime, events, alphaMix, blend, MixDirection.mixOut);\n        }\n        else {\n            let timelineMode = from.timelineMode;\n            let timelineHoldMix = from.timelineHoldMix;\n            let shortestRotation = from.shortestRotation;\n            let firstFrame = !shortestRotation && from.timelinesRotation.length != timelineCount << 1;\n            if (firstFrame)\n                from.timelinesRotation.length = timelineCount << 1;\n            from.totalAlpha = 0;\n            for (let i = 0; i < timelineCount; i++) {\n                let timeline = timelines[i];\n                let direction = MixDirection.mixOut;\n                let timelineBlend;\n                let alpha = 0;\n                switch (timelineMode[i]) {\n                    case SUBSEQUENT:\n                        if (!drawOrder && timeline instanceof DrawOrderTimeline)\n                            continue;\n                        timelineBlend = blend;\n                        alpha = alphaMix;\n                        break;\n                    case FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaMix;\n                        break;\n                    case HOLD_SUBSEQUENT:\n                        timelineBlend = blend;\n                        alpha = alphaHold;\n                        break;\n                    case HOLD_FIRST:\n                        timelineBlend = MixBlend.setup;\n                        alpha = alphaHold;\n                        break;\n                    default:\n                        timelineBlend = MixBlend.setup;\n                        let holdMix = timelineHoldMix[i];\n                        alpha = alphaHold * Math.max(0, 1 - holdMix.mixTime / holdMix.mixDuration);\n                        break;\n                }\n                from.totalAlpha += alpha;\n                if (!shortestRotation && timeline instanceof RotateTimeline)\n                    this.applyRotateTimeline(timeline, skeleton, applyTime, alpha, timelineBlend, from.timelinesRotation, i << 1, firstFrame);\n                else if (timeline instanceof AttachmentTimeline)\n                    this.applyAttachmentTimeline(timeline, skeleton, applyTime, timelineBlend, attachments && alpha >= from.alphaAttachmentThreshold);\n                else {\n                    // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n                    Utils.webkit602BugfixHelper(alpha, blend);\n                    if (drawOrder && timeline instanceof DrawOrderTimeline && timelineBlend == MixBlend.setup)\n                        direction = MixDirection.mixIn;\n                    timeline.apply(skeleton, animationLast, applyTime, events, alpha, timelineBlend, direction);\n                }\n            }\n        }\n        if (to.mixDuration > 0)\n            this.queueEvents(from, animationTime);\n        this.events.length = 0;\n        from.nextAnimationLast = animationTime;\n        from.nextTrackLast = from.trackTime;\n        return mix;\n    }\n    applyAttachmentTimeline(timeline, skeleton, time, blend, attachments) {\n        var slot = skeleton.slots[timeline.slotIndex];\n        if (!slot.bone.active)\n            return;\n        if (time < timeline.frames[0]) { // Time is before first frame.\n            if (blend == MixBlend.setup || blend == MixBlend.first)\n                this.setAttachment(skeleton, slot, slot.data.attachmentName, attachments);\n        }\n        else\n            this.setAttachment(skeleton, slot, timeline.attachmentNames[Timeline.search1(timeline.frames, time)], attachments);\n        // If an attachment wasn't set (ie before the first frame or attachments is false), set the setup attachment later.\n        if (slot.attachmentState <= this.unkeyedState)\n            slot.attachmentState = this.unkeyedState + SETUP;\n    }\n    setAttachment(skeleton, slot, attachmentName, attachments) {\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n        if (attachments)\n            slot.attachmentState = this.unkeyedState + CURRENT;\n    }\n    applyRotateTimeline(timeline, skeleton, time, alpha, blend, timelinesRotation, i, firstFrame) {\n        if (firstFrame)\n            timelinesRotation[i] = 0;\n        if (alpha == 1) {\n            timeline.apply(skeleton, 0, time, null, 1, blend, MixDirection.mixIn);\n            return;\n        }\n        let bone = skeleton.bones[timeline.boneIndex];\n        if (!bone.active)\n            return;\n        let frames = timeline.frames;\n        let r1 = 0, r2 = 0;\n        if (time < frames[0]) {\n            switch (blend) {\n                case MixBlend.setup:\n                    bone.rotation = bone.data.rotation;\n                default:\n                    return;\n                case MixBlend.first:\n                    r1 = bone.rotation;\n                    r2 = bone.data.rotation;\n            }\n        }\n        else {\n            r1 = blend == MixBlend.setup ? bone.data.rotation : bone.rotation;\n            r2 = bone.data.rotation + timeline.getCurveValue(time);\n        }\n        // Mix between rotations using the direction of the shortest route on the first frame while detecting crosses.\n        let total = 0, diff = r2 - r1;\n        diff -= Math.ceil(diff / 360 - 0.5) * 360;\n        if (diff == 0) {\n            total = timelinesRotation[i];\n        }\n        else {\n            let lastTotal = 0, lastDiff = 0;\n            if (firstFrame) {\n                lastTotal = 0;\n                lastDiff = diff;\n            }\n            else {\n                lastTotal = timelinesRotation[i];\n                lastDiff = timelinesRotation[i + 1];\n            }\n            let loops = lastTotal - lastTotal % 360;\n            total = diff + loops;\n            let current = diff >= 0, dir = lastTotal >= 0;\n            if (Math.abs(lastDiff) <= 90 && MathUtils.signum(lastDiff) != MathUtils.signum(diff)) {\n                if (Math.abs(lastTotal - loops) > 180) {\n                    total += 360 * MathUtils.signum(lastTotal);\n                    dir = current;\n                }\n                else if (loops != 0)\n                    total -= 360 * MathUtils.signum(lastTotal);\n                else\n                    dir = current;\n            }\n            if (dir != current)\n                total += 360 * MathUtils.signum(lastTotal);\n            timelinesRotation[i] = total;\n        }\n        timelinesRotation[i + 1] = diff;\n        bone.rotation = r1 + total * alpha;\n    }\n    queueEvents(entry, animationTime) {\n        let animationStart = entry.animationStart, animationEnd = entry.animationEnd;\n        let duration = animationEnd - animationStart;\n        let trackLastWrapped = entry.trackLast % duration;\n        // Queue events before complete.\n        let events = this.events;\n        let i = 0, n = events.length;\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < trackLastWrapped)\n                break;\n            if (event.time > animationEnd)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n        // Queue complete if completed a loop iteration or the animation.\n        let complete = false;\n        if (entry.loop) {\n            if (duration == 0)\n                complete = true;\n            else {\n                const cycles = Math.floor(entry.trackTime / duration);\n                complete = cycles > 0 && cycles > Math.floor(entry.trackLast / duration);\n            }\n        }\n        else\n            complete = animationTime >= animationEnd && entry.animationLast < animationEnd;\n        if (complete)\n            this.queue.complete(entry);\n        // Queue events after complete.\n        for (; i < n; i++) {\n            let event = events[i];\n            if (event.time < animationStart)\n                continue; // Discard events outside animation start/end.\n            this.queue.event(entry, event);\n        }\n    }\n    /** Removes all animations from all tracks, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTracks() {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++)\n            this.clearTrack(i);\n        this.tracks.length = 0;\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    /** Removes all animations from the track, leaving skeletons in their current pose.\n     *\n     * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\n     * rather than leaving them in their current pose. */\n    clearTrack(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return;\n        let current = this.tracks[trackIndex];\n        if (!current)\n            return;\n        this.queue.end(current);\n        this.clearNext(current);\n        let entry = current;\n        while (true) {\n            let from = entry.mixingFrom;\n            if (!from)\n                break;\n            this.queue.end(from);\n            entry.mixingFrom = null;\n            entry.mixingTo = null;\n            entry = from;\n        }\n        this.tracks[current.trackIndex] = null;\n        this.queue.drain();\n    }\n    setCurrent(index, current, interrupt) {\n        let from = this.expandToIndex(index);\n        this.tracks[index] = current;\n        current.previous = null;\n        if (from) {\n            if (interrupt)\n                this.queue.interrupt(from);\n            current.mixingFrom = from;\n            from.mixingTo = current;\n            current.mixTime = 0;\n            // Store the interrupted mix percentage.\n            if (from.mixingFrom && from.mixDuration > 0)\n                current.interruptAlpha *= Math.min(1, from.mixTime / from.mixDuration);\n            from.timelinesRotation.length = 0; // Reset rotation for mixing out, in case entry was mixed in.\n        }\n        this.queue.start(current);\n    }\n    /** Sets an animation by name.\n      *\n      * See {@link #setAnimationWith()}. */\n    setAnimation(trackIndex, animationName, loop = false) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.setAnimationWith(trackIndex, animation, loop);\n    }\n    /** Sets the current animation for a track, discarding any queued animations. If the formerly current track entry was never\n     * applied to a skeleton, it is replaced (not mixed from).\n     * @param loop If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n     *           duration. In either case {@link TrackEntry#trackEnd} determines when the track is cleared.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    setAnimationWith(trackIndex, animation, loop = false) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let interrupt = true;\n        let current = this.expandToIndex(trackIndex);\n        if (current) {\n            if (current.nextTrackLast == -1) {\n                // Don't mix from an entry that was never applied.\n                this.tracks[trackIndex] = current.mixingFrom;\n                this.queue.interrupt(current);\n                this.queue.end(current);\n                this.clearNext(current);\n                current = current.mixingFrom;\n                interrupt = false;\n            }\n            else\n                this.clearNext(current);\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, current);\n        this.setCurrent(trackIndex, entry, interrupt);\n        this.queue.drain();\n        return entry;\n    }\n    /** Queues an animation by name.\n     *\n     * See {@link #addAnimationWith()}. */\n    addAnimation(trackIndex, animationName, loop = false, delay = 0) {\n        let animation = this.data.skeletonData.findAnimation(animationName);\n        if (!animation)\n            throw new Error(\"Animation not found: \" + animationName);\n        return this.addAnimationWith(trackIndex, animation, loop, delay);\n    }\n    /** Adds an animation to be played after the current or last queued animation for a track. If the track is empty, it is\n     * equivalent to calling {@link #setAnimationWith()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration (from the {@link AnimationStateData}) plus the specified `delay` (ie the mix\n     *           ends at (`delay` = 0) or before (`delay` < 0) the previous track entry duration). If the\n     *           previous entry is looping, its next loop completion is used instead of its duration.\n     * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addAnimationWith(trackIndex, animation, loop = false, delay = 0) {\n        if (!animation)\n            throw new Error(\"animation cannot be null.\");\n        let last = this.expandToIndex(trackIndex);\n        if (last) {\n            while (last.next)\n                last = last.next;\n        }\n        let entry = this.trackEntry(trackIndex, animation, loop, last);\n        if (!last) {\n            this.setCurrent(trackIndex, entry, true);\n            this.queue.drain();\n        }\n        else {\n            last.next = entry;\n            entry.previous = last;\n            if (delay <= 0)\n                delay += last.getTrackComplete() - entry.mixDuration;\n        }\n        entry.delay = delay;\n        return entry;\n    }\n    /** Sets an empty animation for a track, discarding any queued animations, and sets the track entry's\n     * {@link TrackEntry#mixduration}. An empty animation has no timelines and serves as a placeholder for mixing in or out.\n     *\n     * Mixing out is done by setting an empty animation with a mix duration using either {@link #setEmptyAnimation()},\n     * {@link #setEmptyAnimations()}, or {@link #addEmptyAnimation()}. Mixing to an empty animation causes\n     * the previous animation to be applied less and less over the mix duration. Properties keyed in the previous animation\n     * transition to the value from lower tracks or to the setup pose value if no lower tracks key the property. A mix duration of\n     * 0 still mixes out over one frame.\n     *\n     * Mixing in is done by first setting an empty animation, then adding an animation using\n     * {@link #addAnimation()} and on the returned track entry, set the\n     * {@link TrackEntry#setMixDuration()}. Mixing from an empty animation causes the new animation to be applied more and\n     * more over the mix duration. Properties keyed in the new animation transition from the value from lower tracks or from the\n     * setup pose value if no lower tracks key the property to the value keyed in the new animation. */\n    setEmptyAnimation(trackIndex, mixDuration = 0) {\n        let entry = this.setAnimationWith(trackIndex, AnimationState.emptyAnimation(), false);\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Adds an empty animation to be played after the current or last queued animation for a track, and sets the track entry's\n     * {@link TrackEntry#mixDuration}. If the track is empty, it is equivalent to calling\n     * {@link #setEmptyAnimation()}.\n     *\n     * See {@link #setEmptyAnimation()}.\n     * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\n     *           minus any mix duration plus the specified `delay` (ie the mix ends at (`delay` = 0) or\n     *           before (`delay` < 0) the previous track entry duration). If the previous entry is looping, its next\n     *           loop completion is used instead of its duration.\n     * @return A track entry to allow further customization of animation playback. References to the track entry must not be kept\n     *         after the {@link AnimationStateListener#dispose()} event occurs. */\n    addEmptyAnimation(trackIndex, mixDuration = 0, delay = 0) {\n        let entry = this.addAnimationWith(trackIndex, AnimationState.emptyAnimation(), false, delay);\n        if (delay <= 0)\n            entry.delay += entry.mixDuration - mixDuration;\n        entry.mixDuration = mixDuration;\n        entry.trackEnd = mixDuration;\n        return entry;\n    }\n    /** Sets an empty animation for every track, discarding any queued animations, and mixes to it over the specified mix\n      * duration. */\n    setEmptyAnimations(mixDuration = 0) {\n        let oldDrainDisabled = this.queue.drainDisabled;\n        this.queue.drainDisabled = true;\n        for (let i = 0, n = this.tracks.length; i < n; i++) {\n            let current = this.tracks[i];\n            if (current)\n                this.setEmptyAnimation(current.trackIndex, mixDuration);\n        }\n        this.queue.drainDisabled = oldDrainDisabled;\n        this.queue.drain();\n    }\n    expandToIndex(index) {\n        if (index < this.tracks.length)\n            return this.tracks[index];\n        Utils.ensureArrayCapacity(this.tracks, index + 1, null);\n        this.tracks.length = index + 1;\n        return null;\n    }\n    /** @param last May be null. */\n    trackEntry(trackIndex, animation, loop, last) {\n        let entry = this.trackEntryPool.obtain();\n        entry.reset();\n        entry.trackIndex = trackIndex;\n        entry.animation = animation;\n        entry.loop = loop;\n        entry.holdPrevious = false;\n        entry.reverse = false;\n        entry.shortestRotation = false;\n        entry.eventThreshold = 0;\n        entry.alphaAttachmentThreshold = 0;\n        entry.mixAttachmentThreshold = 0;\n        entry.mixDrawOrderThreshold = 0;\n        entry.animationStart = 0;\n        entry.animationEnd = animation.duration;\n        entry.animationLast = -1;\n        entry.nextAnimationLast = -1;\n        entry.delay = 0;\n        entry.trackTime = 0;\n        entry.trackLast = -1;\n        entry.nextTrackLast = -1;\n        entry.trackEnd = Number.MAX_VALUE;\n        entry.timeScale = 1;\n        entry.alpha = 1;\n        entry.mixTime = 0;\n        entry.mixDuration = !last ? 0 : this.data.getMix(last.animation, animation);\n        entry.interruptAlpha = 1;\n        entry.totalAlpha = 0;\n        entry.mixBlend = MixBlend.replace;\n        return entry;\n    }\n    /** Removes the {@link TrackEntry#getNext() next entry} and all entries after it for the specified entry. */\n    clearNext(entry) {\n        let next = entry.next;\n        while (next) {\n            this.queue.dispose(next);\n            next = next.next;\n        }\n        entry.next = null;\n    }\n    _animationsChanged() {\n        this.animationsChanged = false;\n        this.propertyIDs.clear();\n        let tracks = this.tracks;\n        for (let i = 0, n = tracks.length; i < n; i++) {\n            let entry = tracks[i];\n            if (!entry)\n                continue;\n            while (entry.mixingFrom)\n                entry = entry.mixingFrom;\n            do {\n                if (!entry.mixingTo || entry.mixBlend != MixBlend.add)\n                    this.computeHold(entry);\n                entry = entry.mixingTo;\n            } while (entry);\n        }\n    }\n    computeHold(entry) {\n        let to = entry.mixingTo;\n        let timelines = entry.animation.timelines;\n        let timelinesCount = entry.animation.timelines.length;\n        let timelineMode = entry.timelineMode;\n        timelineMode.length = timelinesCount;\n        let timelineHoldMix = entry.timelineHoldMix;\n        timelineHoldMix.length = 0;\n        let propertyIDs = this.propertyIDs;\n        if (to && to.holdPrevious) {\n            for (let i = 0; i < timelinesCount; i++)\n                timelineMode[i] = propertyIDs.addAll(timelines[i].getPropertyIds()) ? HOLD_FIRST : HOLD_SUBSEQUENT;\n            return;\n        }\n        outer: for (let i = 0; i < timelinesCount; i++) {\n            let timeline = timelines[i];\n            let ids = timeline.getPropertyIds();\n            if (!propertyIDs.addAll(ids))\n                timelineMode[i] = SUBSEQUENT;\n            else if (!to || timeline instanceof AttachmentTimeline || timeline instanceof DrawOrderTimeline\n                || timeline instanceof EventTimeline || !to.animation.hasTimeline(ids)) {\n                timelineMode[i] = FIRST;\n            }\n            else {\n                for (let next = to.mixingTo; next; next = next.mixingTo) {\n                    if (next.animation.hasTimeline(ids))\n                        continue;\n                    if (entry.mixDuration > 0) {\n                        timelineMode[i] = HOLD_MIX;\n                        timelineHoldMix[i] = next;\n                        continue outer;\n                    }\n                    break;\n                }\n                timelineMode[i] = HOLD_FIRST;\n            }\n        }\n    }\n    /** Returns the track entry for the animation currently playing on the track, or null if no animation is currently playing. */\n    getCurrent(trackIndex) {\n        if (trackIndex >= this.tracks.length)\n            return null;\n        return this.tracks[trackIndex];\n    }\n    /** Adds a listener to receive events for all track entries. */\n    addListener(listener) {\n        if (!listener)\n            throw new Error(\"listener cannot be null.\");\n        this.listeners.push(listener);\n    }\n    /** Removes the listener added with {@link #addListener()}. */\n    removeListener(listener) {\n        let index = this.listeners.indexOf(listener);\n        if (index >= 0)\n            this.listeners.splice(index, 1);\n    }\n    /** Removes all listeners added with {@link #addListener()}. */\n    clearListeners() {\n        this.listeners.length = 0;\n    }\n    /** Discards all listener notifications that have not yet been delivered. This can be useful to call from an\n     * {@link AnimationStateListener} when it is known that further notifications that may have been already queued for delivery\n     * are not wanted because new animations are being set. */\n    clearListenerNotifications() {\n        this.queue.clear();\n    }\n}\n/** Stores settings and other state for the playback of an animation on an {@link AnimationState} track.\n *\n * References to a track entry must not be kept after the {@link AnimationStateListener#dispose()} event occurs. */\nexport class TrackEntry {\n    /** The animation to apply for this track entry. */\n    animation = null;\n    previous = null;\n    /** The animation queued to start after this animation, or null. `next` makes up a linked list. */\n    next = null;\n    /** The track entry for the previous animation when mixing from the previous animation to this animation, or null if no\n     * mixing is currently occuring. When mixing from multiple animations, `mixingFrom` makes up a linked list. */\n    mixingFrom = null;\n    /** The track entry for the next animation when mixing from this animation to the next animation, or null if no mixing is\n     * currently occuring. When mixing to multiple animations, `mixingTo` makes up a linked list. */\n    mixingTo = null;\n    /** The listener for events generated by this track entry, or null.\n     *\n     * A track entry returned from {@link AnimationState#setAnimation()} is already the current animation\n     * for the track, so the track entry listener {@link AnimationStateListener#start()} will not be called. */\n    listener = null;\n    /** The index of the track where this track entry is either current or queued.\n     *\n     * See {@link AnimationState#getCurrent()}. */\n    trackIndex = 0;\n    /** If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\n     * duration. */\n    loop = false;\n    /** If true, when mixing from the previous animation to this animation, the previous animation is applied as normal instead\n     * of being mixed out.\n     *\n     * When mixing between animations that key the same property, if a lower track also keys that property then the value will\n     * briefly dip toward the lower track value during the mix. This happens because the first animation mixes from 100% to 0%\n     * while the second animation mixes from 0% to 100%. Setting `holdPrevious` to true applies the first animation\n     * at 100% during the mix so the lower track value is overwritten. Such dipping does not occur on the lowest track which\n     * keys the property, only when a higher track also keys the property.\n     *\n     * Snapping will occur if `holdPrevious` is true and this animation does not key all the same properties as the\n     * previous animation. */\n    holdPrevious = false;\n    reverse = false;\n    shortestRotation = false;\n    /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\n     * `eventThreshold`, event timelines are applied while this animation is being mixed out. Defaults to 0, so event\n     * timelines are not applied while this animation is being mixed out. */\n    eventThreshold = 0;\n    /** When the mix percentage ({@link #mixtime} / {@link #mixDuration}) is less than the\n     * `attachmentThreshold`, attachment timelines are applied while this animation is being mixed out. Defaults to\n     * 0, so attachment timelines are not applied while this animation is being mixed out. */\n    mixAttachmentThreshold = 0;\n    /** When {@link #getAlpha()} is greater than <code>alphaAttachmentThreshold</code>, attachment timelines are applied.\n     * Defaults to 0, so attachment timelines are always applied. */\n    alphaAttachmentThreshold = 0;\n    /** When the mix percentage ({@link #getMixTime()} / {@link #getMixDuration()}) is less than the\n     * <code>mixDrawOrderThreshold</code>, draw order timelines are applied while this animation is being mixed out. Defaults to\n     * 0, so draw order timelines are not applied while this animation is being mixed out. */\n    mixDrawOrderThreshold = 0;\n    /** Seconds when this animation starts, both initially and after looping. Defaults to 0.\n     *\n     * When changing the `animationStart` time, it often makes sense to set {@link #animationLast} to the same\n     * value to prevent timeline keys before the start time from triggering. */\n    animationStart = 0;\n    /** Seconds for the last frame of this animation. Non-looping animations won't play past this time. Looping animations will\n     * loop back to {@link #animationStart} at this time. Defaults to the animation {@link Animation#duration}. */\n    animationEnd = 0;\n    /** The time in seconds this animation was last applied. Some timelines use this for one-time triggers. Eg, when this\n     * animation is applied, event timelines will fire all events between the `animationLast` time (exclusive) and\n     * `animationTime` (inclusive). Defaults to -1 to ensure triggers on frame 0 happen the first time this animation\n     * is applied. */\n    animationLast = 0;\n    nextAnimationLast = 0;\n    /** Seconds to postpone playing the animation. When this track entry is the current track entry, `delay`\n     * postpones incrementing the {@link #trackTime}. When this track entry is queued, `delay` is the time from\n     * the start of the previous animation to when this track entry will become the current track entry (ie when the previous\n     * track entry {@link TrackEntry#trackTime} >= this track entry's `delay`).\n     *\n     * {@link #timeScale} affects the delay. */\n    delay = 0;\n    /** Current time in seconds this track entry has been the current track entry. The track time determines\n     * {@link #animationTime}. The track time can be set to start the animation at a time other than 0, without affecting\n     * looping. */\n    trackTime = 0;\n    trackLast = 0;\n    nextTrackLast = 0;\n    /** The track time in seconds when this animation will be removed from the track. Defaults to the highest possible float\n     * value, meaning the animation will be applied until a new animation is set or the track is cleared. If the track end time\n     * is reached, no other animations are queued for playback, and mixing from any previous animations is complete, then the\n     * properties keyed by the animation are set to the setup pose and the track is cleared.\n     *\n     * It may be desired to use {@link AnimationState#addEmptyAnimation()} rather than have the animation\n     * abruptly cease being applied. */\n    trackEnd = 0;\n    /** Multiplier for the delta time when this track entry is updated, causing time for this animation to pass slower or\n     * faster. Defaults to 1.\n     *\n     * {@link #mixTime} is not affected by track entry time scale, so {@link #mixDuration} may need to be adjusted to\n     * match the animation speed.\n     *\n     * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n     * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, assuming time scale to be 1. If\n     * the time scale is not 1, the delay may need to be adjusted.\n     *\n     * See AnimationState {@link AnimationState#timeScale} for affecting all animations. */\n    timeScale = 0;\n    /** Values < 1 mix this animation with the skeleton's current pose (usually the pose resulting from lower tracks). Defaults\n     * to 1, which overwrites the skeleton's current pose with this animation.\n     *\n     * Typically track 0 is used to completely pose the skeleton, then alpha is used on higher tracks. It doesn't make sense to\n     * use alpha on track 0 if the skeleton pose is from the last frame render. */\n    alpha = 0;\n    /** Seconds from 0 to the {@link #getMixDuration()} when mixing from the previous animation to this animation. May be\n     * slightly more than `mixDuration` when the mix is complete. */\n    mixTime = 0;\n    /** Seconds for mixing from the previous animation to this animation. Defaults to the value provided by AnimationStateData\n     * {@link AnimationStateData#getMix()} based on the animation before this animation (if any).\n     *\n     * A mix duration of 0 still mixes out over one frame to provide the track entry being mixed out a chance to revert the\n     * properties it was animating.\n     *\n     * The `mixDuration` can be set manually rather than use the value from\n     * {@link AnimationStateData#getMix()}. In that case, the `mixDuration` can be set for a new\n     * track entry only before {@link AnimationState#update(float)} is first called.\n     *\n     * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\n     * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, not a mix duration set\n     * afterward. */\n    _mixDuration = 0;\n    interruptAlpha = 0;\n    totalAlpha = 0;\n    get mixDuration() {\n        return this._mixDuration;\n    }\n    set mixDuration(mixDuration) {\n        this._mixDuration = mixDuration;\n    }\n    setMixDurationWithDelay(mixDuration, delay) {\n        this._mixDuration = mixDuration;\n        if (this.previous != null && delay <= 0)\n            delay += this.previous.getTrackComplete() - mixDuration;\n        this.delay = delay;\n    }\n    /** Controls how properties keyed in the animation are mixed with lower tracks. Defaults to {@link MixBlend#replace}, which\n     * replaces the values from the lower tracks with the animation values. {@link MixBlend#add} adds the animation values to\n     * the values from the lower tracks.\n     *\n     * The `mixBlend` can be set for a new track entry only before {@link AnimationState#apply()} is first\n     * called. */\n    mixBlend = MixBlend.replace;\n    timelineMode = new Array();\n    timelineHoldMix = new Array();\n    timelinesRotation = new Array();\n    reset() {\n        this.next = null;\n        this.previous = null;\n        this.mixingFrom = null;\n        this.mixingTo = null;\n        this.animation = null;\n        this.listener = null;\n        this.timelineMode.length = 0;\n        this.timelineHoldMix.length = 0;\n        this.timelinesRotation.length = 0;\n    }\n    /** Uses {@link #trackTime} to compute the `animationTime`, which is between {@link #animationStart}\n     * and {@link #animationEnd}. When the `trackTime` is 0, the `animationTime` is equal to the\n     * `animationStart` time. */\n    getAnimationTime() {\n        if (this.loop) {\n            let duration = this.animationEnd - this.animationStart;\n            if (duration == 0)\n                return this.animationStart;\n            return (this.trackTime % duration) + this.animationStart;\n        }\n        return Math.min(this.trackTime + this.animationStart, this.animationEnd);\n    }\n    setAnimationLast(animationLast) {\n        this.animationLast = animationLast;\n        this.nextAnimationLast = animationLast;\n    }\n    /** Returns true if at least one loop has been completed.\n     *\n     * See {@link AnimationStateListener#complete()}. */\n    isComplete() {\n        return this.trackTime >= this.animationEnd - this.animationStart;\n    }\n    /** Resets the rotation directions for mixing this entry's rotate timelines. This can be useful to avoid bones rotating the\n     * long way around when using {@link #alpha} and starting animations on other tracks.\n     *\n     * Mixing with {@link MixBlend#replace} involves finding a rotation between two others, which has two possible solutions:\n     * the short way or the long way around. The two rotations likely change over time, so which direction is the short or long\n     * way also changes. If the short way was always chosen, bones would flip to the other side when that direction became the\n     * long way. TrackEntry chooses the short way the first time it is applied and remembers that direction. */\n    resetRotationDirections() {\n        this.timelinesRotation.length = 0;\n    }\n    getTrackComplete() {\n        let duration = this.animationEnd - this.animationStart;\n        if (duration != 0) {\n            if (this.loop)\n                return duration * (1 + ((this.trackTime / duration) | 0)); // Completion of next loop.\n            if (this.trackTime < duration)\n                return duration; // Before duration.\n        }\n        return this.trackTime; // Next update.\n    }\n    /** Returns true if this track entry has been applied at least once.\n     * <p>\n     * See {@link AnimationState#apply(Skeleton)}. */\n    wasApplied() {\n        return this.nextTrackLast != -1;\n    }\n    /** Returns true if there is a {@link #getNext()} track entry and it will become the current track entry during the next\n     * {@link AnimationState#update(float)}. */\n    isNextReady() {\n        return this.next != null && this.nextTrackLast - this.next.delay >= 0;\n    }\n}\nexport class EventQueue {\n    objects = [];\n    drainDisabled = false;\n    animState;\n    constructor(animState) {\n        this.animState = animState;\n    }\n    start(entry) {\n        this.objects.push(EventType.start);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    interrupt(entry) {\n        this.objects.push(EventType.interrupt);\n        this.objects.push(entry);\n    }\n    end(entry) {\n        this.objects.push(EventType.end);\n        this.objects.push(entry);\n        this.animState.animationsChanged = true;\n    }\n    dispose(entry) {\n        this.objects.push(EventType.dispose);\n        this.objects.push(entry);\n    }\n    complete(entry) {\n        this.objects.push(EventType.complete);\n        this.objects.push(entry);\n    }\n    event(entry, event) {\n        this.objects.push(EventType.event);\n        this.objects.push(entry);\n        this.objects.push(event);\n    }\n    drain() {\n        if (this.drainDisabled)\n            return;\n        this.drainDisabled = true;\n        let objects = this.objects;\n        let listeners = this.animState.listeners;\n        for (let i = 0; i < objects.length; i += 2) {\n            let type = objects[i];\n            let entry = objects[i + 1];\n            switch (type) {\n                case EventType.start:\n                    if (entry.listener && entry.listener.start)\n                        entry.listener.start(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.start)\n                            listener.start(entry);\n                    }\n                    break;\n                case EventType.interrupt:\n                    if (entry.listener && entry.listener.interrupt)\n                        entry.listener.interrupt(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.interrupt)\n                            listener.interrupt(entry);\n                    }\n                    break;\n                case EventType.end:\n                    if (entry.listener && entry.listener.end)\n                        entry.listener.end(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.end)\n                            listener.end(entry);\n                    }\n                // Fall through.\n                case EventType.dispose:\n                    if (entry.listener && entry.listener.dispose)\n                        entry.listener.dispose(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.dispose)\n                            listener.dispose(entry);\n                    }\n                    this.animState.trackEntryPool.free(entry);\n                    break;\n                case EventType.complete:\n                    if (entry.listener && entry.listener.complete)\n                        entry.listener.complete(entry);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.complete)\n                            listener.complete(entry);\n                    }\n                    break;\n                case EventType.event:\n                    let event = objects[i++ + 2];\n                    if (entry.listener && entry.listener.event)\n                        entry.listener.event(entry, event);\n                    for (let ii = 0; ii < listeners.length; ii++) {\n                        let listener = listeners[ii];\n                        if (listener.event)\n                            listener.event(entry, event);\n                    }\n                    break;\n            }\n        }\n        this.clear();\n        this.drainDisabled = false;\n    }\n    clear() {\n        this.objects.length = 0;\n    }\n}\nexport var EventType;\n(function (EventType) {\n    EventType[EventType[\"start\"] = 0] = \"start\";\n    EventType[EventType[\"interrupt\"] = 1] = \"interrupt\";\n    EventType[EventType[\"end\"] = 2] = \"end\";\n    EventType[EventType[\"dispose\"] = 3] = \"dispose\";\n    EventType[EventType[\"complete\"] = 4] = \"complete\";\n    EventType[EventType[\"event\"] = 5] = \"event\";\n})(EventType || (EventType = {}));\nexport class AnimationStateAdapter {\n    start(entry) {\n    }\n    interrupt(entry) {\n    }\n    end(entry) {\n    }\n    dispose(entry) {\n    }\n    complete(entry) {\n    }\n    event(entry, event) {\n    }\n}\n/** 1. A previously applied timeline has set this property.\n *\n * Result: Mix from the current pose to the timeline pose. */\nexport const SUBSEQUENT = 0;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry applied after this one does not have a timeline to set this property.\n *\n * Result: Mix from the setup pose to the timeline pose. */\nexport const FIRST = 1;\n/** 1) A previously applied timeline has set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the current pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading\n * animations that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_SUBSEQUENT = 2;\n/** 1) This is the first timeline to set this property.<br>\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\n * Result: Mix from the setup pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading animations\n * that key the same property. A subsequent timeline will set this property using a mix. */\nexport const HOLD_FIRST = 3;\n/** 1. This is the first timeline to set this property.\n * 2. The next track entry to be applied does have a timeline to set this property.\n * 3. The next track entry after that one does have a timeline to set this property.\n * 4. timelineHoldMix stores the first subsequent track entry that does not have a timeline to set this property.\n *\n * Result: The same as HOLD except the mix percentage from the timelineHoldMix track entry is used. This handles when more than\n * 2 track entries in a row have a timeline that sets the same property.\n *\n * Eg, A -> B -> C -> D where A, B, and C have a timeline setting same property, but D does not. When A is applied, to avoid\n * \"dipping\" A is not mixed out, however D (the first entry that doesn't set the property) mixing in is used to mix out A\n * (which affects B and C). Without using D to mix out, A would be applied fully until mixing completes, then snap into\n * place. */\nexport const HOLD_MIX = 4;\nexport const SETUP = 1;\nexport const CURRENT = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores mix (crossfade) durations to be applied when {@link AnimationState} animations are changed. */\nexport class AnimationStateData {\n    /** The SkeletonData to look up animations when they are specified by name. */\n    skeletonData;\n    animationToMixTime = {};\n    /** The mix duration to use when no mix duration has been defined between two animations. */\n    defaultMix = 0;\n    constructor(skeletonData) {\n        if (!skeletonData)\n            throw new Error(\"skeletonData cannot be null.\");\n        this.skeletonData = skeletonData;\n    }\n    /** Sets a mix duration by animation name.\n     *\n     * See {@link #setMixWith()}. */\n    setMix(fromName, toName, duration) {\n        let from = this.skeletonData.findAnimation(fromName);\n        if (!from)\n            throw new Error(\"Animation not found: \" + fromName);\n        let to = this.skeletonData.findAnimation(toName);\n        if (!to)\n            throw new Error(\"Animation not found: \" + toName);\n        this.setMixWith(from, to, duration);\n    }\n    /** Sets the mix duration when changing from the specified animation to the other.\n     *\n     * See {@link TrackEntry#mixDuration}. */\n    setMixWith(from, to, duration) {\n        if (!from)\n            throw new Error(\"from cannot be null.\");\n        if (!to)\n            throw new Error(\"to cannot be null.\");\n        let key = from.name + \".\" + to.name;\n        this.animationToMixTime[key] = duration;\n    }\n    /** Returns the mix duration to use when changing from the specified animation to the other, or the {@link #defaultMix} if\n      * no mix duration has been set. */\n    getMix(from, to) {\n        let key = from.name + \".\" + to.name;\n        let value = this.animationToMixTime[key];\n        return value === undefined ? this.defaultMix : value;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5pbWF0aW9uU3RhdGVEYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuaW1hdGlvblN0YXRlRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFPL0UseUdBQXlHO0FBQ3pHLE1BQU0sT0FBTyxrQkFBa0I7SUFDOUIsOEVBQThFO0lBQzlFLFlBQVksQ0FBZTtJQUUzQixrQkFBa0IsR0FBc0IsRUFBRSxDQUFDO0lBRTNDLDRGQUE0RjtJQUM1RixVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBRWYsWUFBYSxZQUEwQjtRQUN0QyxJQUFJLENBQUMsWUFBWTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztJQUNsQyxDQUFDO0lBRUQ7O29DQUVnQztJQUNoQyxNQUFNLENBQUUsUUFBZ0IsRUFBRSxNQUFjLEVBQUUsUUFBZ0I7UUFDekQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBQy9ELElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxFQUFFO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsR0FBRyxNQUFNLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVEOzs2Q0FFeUM7SUFDekMsVUFBVSxDQUFFLElBQWUsRUFBRSxFQUFhLEVBQUUsUUFBZ0I7UUFDM0QsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEVBQUU7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDL0MsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDO0lBQ3pDLENBQUM7SUFFRDt3Q0FDb0M7SUFDcEMsTUFBTSxDQUFFLElBQWUsRUFBRSxFQUFhO1FBQ3JDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7UUFDcEMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment with vertices that make up a polygon. Can be used for hit detection, creating physics bodies, spawning particle\n * effects, and more.\n *\n * See {@link SkeletonBounds} and [Bounding Boxes](http://esotericsoftware.com/spine-bounding-boxes) in the Spine User\n * Guide. */\nexport class BoundingBoxAttachment extends VertexAttachment {\n    color = new Color(1, 1, 1, 1);\n    constructor(name) {\n        super(name);\n    }\n    copy() {\n        let copy = new BoundingBoxAttachment(this.name);\n        this.copyTo(copy);\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm91bmRpbmdCb3hBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0JvdW5kaW5nQm94QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQztBQUUvRDs7OztZQUlZO0FBQ1osTUFBTSxPQUFPLHFCQUFzQixTQUFRLGdCQUFnQjtJQUMxRCxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFOUIsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxJQUFJO1FBQ0gsSUFBSSxJQUFJLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment with vertices that make up a polygon used for clipping the rendering of other attachments. */\nexport class ClippingAttachment extends VertexAttachment {\n    /** Clipping is performed between the clipping polygon's slot and the end slot. Returns null if clipping is done until the end of\n     * the skeleton's rendering. */\n    endSlot = null;\n    // Nonessential.\n    /** The color of the clipping polygon as it was in Spine. Available only when nonessential data was exported. Clipping polygons\n     * are not usually rendered at runtime. */\n    color = new Color(0.2275, 0.2275, 0.8078, 1); // ce3a3aff\n    constructor(name) {\n        super(name);\n    }\n    copy() {\n        let copy = new ClippingAttachment(this.name);\n        this.copyTo(copy);\n        copy.endSlot = this.endSlot;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpcHBpbmdBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL0NsaXBwaW5nQXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQztBQUUvRCwrR0FBK0c7QUFDL0csTUFBTSxPQUFPLGtCQUFtQixTQUFRLGdCQUFnQjtJQUN2RDttQ0FDK0I7SUFDL0IsT0FBTyxHQUFvQixJQUFJLENBQUM7SUFFaEMsZ0JBQWdCO0lBQ2hCOzhDQUMwQztJQUMxQyxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXO0lBRXpELFlBQWEsSUFBWTtRQUN4QixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDYixDQUFDO0lBRUQsSUFBSTtRQUNILElBQUksSUFBSSxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nexport class Texture {\n    _image;\n    constructor(image) {\n        this._image = image;\n    }\n    getImage() {\n        return this._image;\n    }\n}\nexport var TextureFilter;\n(function (TextureFilter) {\n    TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\n    TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\n    TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\n    TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\n    TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\n    TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\n    TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\n})(TextureFilter || (TextureFilter = {}));\nexport var TextureWrap;\n(function (TextureWrap) {\n    TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n    TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n    TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\n})(TextureWrap || (TextureWrap = {}));\nexport class TextureRegion {\n    texture;\n    u = 0;\n    v = 0;\n    u2 = 0;\n    v2 = 0;\n    width = 0;\n    height = 0;\n    degrees = 0;\n    offsetX = 0;\n    offsetY = 0;\n    originalWidth = 0;\n    originalHeight = 0;\n}\nexport class FakeTexture extends Texture {\n    setFilters(minFilter, magFilter) { }\n    setWraps(uWrap, vWrap) { }\n    dispose() { }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9UZXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxNQUFNLE9BQWdCLE9BQU87SUFDbEIsTUFBTSxDQUF1QztJQUV2RCxZQUFhLEtBQTJDO1FBQ3ZELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxRQUFRO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3BCLENBQUM7Q0FLRDtBQUVELE1BQU0sQ0FBTixJQUFZLGFBUVg7QUFSRCxXQUFZLGFBQWE7SUFDeEIsMERBQWMsQ0FBQTtJQUNkLHdEQUFhLENBQUE7SUFDYix3REFBYSxDQUFBO0lBQ2Isb0ZBQTJCLENBQUE7SUFDM0Isa0ZBQTBCLENBQUE7SUFDMUIsa0ZBQTBCLENBQUE7SUFDMUIsZ0ZBQXlCLENBQUEsQ0FBQyw2Q0FBNkM7QUFDeEUsQ0FBQyxFQVJXLGFBQWEsS0FBYixhQUFhLFFBUXhCO0FBRUQsTUFBTSxDQUFOLElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUN0QixxRUFBc0IsQ0FBQTtJQUN0QiwrREFBbUIsQ0FBQTtJQUNuQixxREFBYyxDQUFBLENBQUMsK0JBQStCO0FBQy9DLENBQUMsRUFKVyxXQUFXLEtBQVgsV0FBVyxRQUl0QjtBQUVELE1BQU0sT0FBTyxhQUFhO0lBQ3pCLE9BQU8sQ0FBTTtJQUNiLENBQUMsR0FBRyxDQUFDLENBQUM7SUFBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDZixLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUN0QixPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ1osT0FBTyxHQUFHLENBQUMsQ0FBQztJQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDekIsYUFBYSxHQUFHLENBQUMsQ0FBQztJQUFDLGNBQWMsR0FBRyxDQUFDLENBQUM7Q0FDdEM7QUFFRCxNQUFNLE9BQU8sV0FBWSxTQUFRLE9BQU87SUFDdkMsVUFBVSxDQUFFLFNBQXdCLEVBQUUsU0FBd0IsSUFBSSxDQUFDO0lBQ25FLFFBQVEsQ0FBRSxLQUFrQixFQUFFLEtBQWtCLElBQUksQ0FBQztJQUNyRCxPQUFPLEtBQU0sQ0FBQztDQUNkIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils.js\";\n/** Stores the setup pose for a {@link Bone}. */\nexport class BoneData {\n    /** The index of the bone in {@link Skeleton#getBones()}. */\n    index = 0;\n    /** The name of the bone, which is unique across all bones in the skeleton. */\n    name;\n    /** @returns May be null. */\n    parent = null;\n    /** The bone's length. */\n    length = 0;\n    /** The local x translation. */\n    x = 0;\n    /** The local y translation. */\n    y = 0;\n    /** The local rotation in degrees, counter clockwise. */\n    rotation = 0;\n    /** The local scaleX. */\n    scaleX = 1;\n    /** The local scaleY. */\n    scaleY = 1;\n    /** The local shearX. */\n    shearX = 0;\n    /** The local shearX. */\n    shearY = 0;\n    /** The transform mode for how parent world transforms affect this bone. */\n    inherit = Inherit.Normal;\n    /** When true, {@link Skeleton#updateWorldTransform()} only updates this bone if the {@link Skeleton#skin} contains this\n      * bone.\n      * @see Skin#bones */\n    skinRequired = false;\n    /** The color of the bone as it was in Spine. Available only when nonessential data was exported. Bones are not usually\n     * rendered at runtime. */\n    color = new Color();\n    /** The bone icon as it was in Spine, or null if nonessential data was not exported. */\n    icon;\n    /** False if the bone was hidden in Spine and nonessential data was exported. Does not affect runtime rendering. */\n    visible = false;\n    constructor(index, name, parent) {\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.parent = parent;\n    }\n}\n/** Determines how a bone inherits world transforms from parent bones. */\nexport var Inherit;\n(function (Inherit) {\n    Inherit[Inherit[\"Normal\"] = 0] = \"Normal\";\n    Inherit[Inherit[\"OnlyTranslation\"] = 1] = \"OnlyTranslation\";\n    Inherit[Inherit[\"NoRotationOrReflection\"] = 2] = \"NoRotationOrReflection\";\n    Inherit[Inherit[\"NoScale\"] = 3] = \"NoScale\";\n    Inherit[Inherit[\"NoScaleOrReflection\"] = 4] = \"NoScaleOrReflection\";\n})(Inherit || (Inherit = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQm9uZURhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQm9uZURhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFbkMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBQ3BCLDREQUE0RDtJQUM1RCxLQUFLLEdBQVcsQ0FBQyxDQUFDO0lBRWxCLDhFQUE4RTtJQUM5RSxJQUFJLENBQVM7SUFFYiw0QkFBNEI7SUFDNUIsTUFBTSxHQUFvQixJQUFJLENBQUM7SUFFL0IseUJBQXlCO0lBQ3pCLE1BQU0sR0FBVyxDQUFDLENBQUM7SUFFbkIsK0JBQStCO0lBQy9CLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFTiwrQkFBK0I7SUFDL0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVOLHdEQUF3RDtJQUN4RCxRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBRWIsd0JBQXdCO0lBQ3hCLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFWCx3QkFBd0I7SUFDeEIsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUVYLHdCQUF3QjtJQUN4QixNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBRVgsd0JBQXdCO0lBQ3hCLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFWCwyRUFBMkU7SUFDM0UsT0FBTyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFFekI7OzBCQUVzQjtJQUN0QixZQUFZLEdBQUcsS0FBSyxDQUFDO0lBRXJCOzhCQUMwQjtJQUMxQixLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUVwQix1RkFBdUY7SUFDdkYsSUFBSSxDQUFVO0lBRWQsbUhBQW1IO0lBQ25ILE9BQU8sR0FBRyxLQUFLLENBQUM7SUFFaEIsWUFBYSxLQUFhLEVBQUUsSUFBWSxFQUFFLE1BQXVCO1FBQ2hFLElBQUksS0FBSyxHQUFHLENBQUM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdEIsQ0FBQztDQUNEO0FBRUQseUVBQXlFO0FBQ3pFLE1BQU0sQ0FBTixJQUFZLE9BQXlGO0FBQXJHLFdBQVksT0FBTztJQUFHLHlDQUFNLENBQUE7SUFBRSwyREFBZSxDQUFBO0lBQUUseUVBQXNCLENBQUE7SUFBRSwyQ0FBTyxDQUFBO0lBQUUsbUVBQW1CLENBQUE7QUFBQyxDQUFDLEVBQXpGLE9BQU8sS0FBUCxPQUFPLFFBQWtGIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for a {@link PathConstraint}.\n *\n * See [path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraintData extends ConstraintData {\n    /** The bones that will be modified by this path constraint. */\n    bones = new Array();\n    /** The slot whose path attachment will be used to constrained the bones. */\n    _target = null;\n    set target(slotData) { this._target = slotData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"SlotData not set.\");\n        else\n            return this._target;\n    }\n    /** The mode for positioning the first bone on the path. */\n    positionMode = PositionMode.Fixed;\n    /** The mode for positioning the bones after the first bone on the path. */\n    spacingMode = SpacingMode.Fixed;\n    /** The mode for adjusting the rotation of the bones. */\n    rotateMode = RotateMode.Chain;\n    /** An offset added to the constrained bone rotation. */\n    offsetRotation = 0;\n    /** The position along the path. */\n    position = 0;\n    /** The spacing between bones. */\n    spacing = 0;\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n/** Controls how the first bone is positioned along the path.\n *\n * See [position](http://esotericsoftware.com/spine-path-constraints#Position) in the Spine User Guide. */\nexport var PositionMode;\n(function (PositionMode) {\n    PositionMode[PositionMode[\"Fixed\"] = 0] = \"Fixed\";\n    PositionMode[PositionMode[\"Percent\"] = 1] = \"Percent\";\n})(PositionMode || (PositionMode = {}));\n/** Controls how bones after the first bone are positioned along the path.\n *\n * See [spacing](http://esotericsoftware.com/spine-path-constraints#Spacing) in the Spine User Guide. */\nexport var SpacingMode;\n(function (SpacingMode) {\n    SpacingMode[SpacingMode[\"Length\"] = 0] = \"Length\";\n    SpacingMode[SpacingMode[\"Fixed\"] = 1] = \"Fixed\";\n    SpacingMode[SpacingMode[\"Percent\"] = 2] = \"Percent\";\n    SpacingMode[SpacingMode[\"Proportional\"] = 3] = \"Proportional\";\n})(SpacingMode || (SpacingMode = {}));\n/** Controls how bones are rotated, translated, and scaled to match the path.\n *\n * See [rotate mix](http://esotericsoftware.com/spine-path-constraints#Rotate-mix) in the Spine User Guide. */\nexport var RotateMode;\n(function (RotateMode) {\n    RotateMode[RotateMode[\"Tangent\"] = 0] = \"Tangent\";\n    RotateMode[RotateMode[\"Chain\"] = 1] = \"Chain\";\n    RotateMode[RotateMode[\"ChainScale\"] = 2] = \"ChainScale\";\n})(RotateMode || (RotateMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aENvbnN0cmFpbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1BhdGhDb25zdHJhaW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSXJEOzt5R0FFeUc7QUFDekcsTUFBTSxPQUFPLGtCQUFtQixTQUFRLGNBQWM7SUFFckQsK0RBQStEO0lBQy9ELEtBQUssR0FBRyxJQUFJLEtBQUssRUFBWSxDQUFDO0lBRTlCLDRFQUE0RTtJQUNwRSxPQUFPLEdBQW9CLElBQUksQ0FBQztJQUN4QyxJQUFXLE1BQU0sQ0FBRSxRQUFrQixJQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNuRSxJQUFXLE1BQU07UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBOztZQUNsRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDMUIsQ0FBQztJQUVELDJEQUEyRDtJQUMzRCxZQUFZLEdBQWlCLFlBQVksQ0FBQyxLQUFLLENBQUM7SUFFaEQsMkVBQTJFO0lBQzNFLFdBQVcsR0FBZ0IsV0FBVyxDQUFDLEtBQUssQ0FBQztJQUU3Qyx3REFBd0Q7SUFDeEQsVUFBVSxHQUFlLFVBQVUsQ0FBQyxLQUFLLENBQUM7SUFFMUMsd0RBQXdEO0lBQ3hELGNBQWMsR0FBVyxDQUFDLENBQUM7SUFFM0IsbUNBQW1DO0lBQ25DLFFBQVEsR0FBVyxDQUFDLENBQUM7SUFFckIsaUNBQWlDO0lBQ2pDLE9BQU8sR0FBVyxDQUFDLENBQUM7SUFFcEIsU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNkLElBQUksR0FBRyxDQUFDLENBQUM7SUFDVCxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBRVQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDRDtBQUVEOzswR0FFMEc7QUFDMUcsTUFBTSxDQUFOLElBQVksWUFBK0I7QUFBM0MsV0FBWSxZQUFZO0lBQUcsaURBQUssQ0FBQTtJQUFFLHFEQUFPLENBQUE7QUFBQyxDQUFDLEVBQS9CLFlBQVksS0FBWixZQUFZLFFBQW1CO0FBRTNDOzt3R0FFd0c7QUFDeEcsTUFBTSxDQUFOLElBQVksV0FBb0Q7QUFBaEUsV0FBWSxXQUFXO0lBQUcsaURBQU0sQ0FBQTtJQUFFLCtDQUFLLENBQUE7SUFBRSxtREFBTyxDQUFBO0lBQUUsNkRBQVksQ0FBQTtBQUFDLENBQUMsRUFBcEQsV0FBVyxLQUFYLFdBQVcsUUFBeUM7QUFFaEU7OzhHQUU4RztBQUM5RyxNQUFNLENBQU4sSUFBWSxVQUF5QztBQUFyRCxXQUFZLFVBQVU7SUFBRyxpREFBTyxDQUFBO0lBQUUsNkNBQUssQ0FBQTtJQUFFLHVEQUFVLENBQUE7QUFBQyxDQUFDLEVBQXpDLFVBQVUsS0FBVixVQUFVLFFBQStCIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ClippingAttachment } from \"./attachments/ClippingAttachment.js\";\nimport { MeshAttachment } from \"./attachments/MeshAttachment.js\";\nimport { PathAttachment } from \"./attachments/PathAttachment.js\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment.js\";\nimport { Bone } from \"./Bone.js\";\nimport { IkConstraint } from \"./IkConstraint.js\";\nimport { PathConstraint } from \"./PathConstraint.js\";\nimport { PhysicsConstraint } from \"./PhysicsConstraint.js\";\nimport { Slot } from \"./Slot.js\";\nimport { TransformConstraint } from \"./TransformConstraint.js\";\nimport { Color, Utils, MathUtils, Vector2 } from \"./Utils.js\";\n/** Stores the current pose for a skeleton.\n *\n * See [Instance objects](http://esotericsoftware.com/spine-runtime-architecture#Instance-objects) in the Spine Runtimes Guide. */\nexport class Skeleton {\n    static quadTriangles = [0, 1, 2, 2, 3, 0];\n    static yDown = false;\n    /** The skeleton's setup pose data. */\n    data;\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n    bones;\n    /** The skeleton's slots in the setup pose draw order. */\n    slots;\n    /** The skeleton's slots in the order they should be drawn. The returned array may be modified to change the draw order. */\n    drawOrder;\n    /** The skeleton's IK constraints. */\n    ikConstraints;\n    /** The skeleton's transform constraints. */\n    transformConstraints;\n    /** The skeleton's path constraints. */\n    pathConstraints;\n    /** The skeleton's physics constraints. */\n    physicsConstraints;\n    /** The list of bones and constraints, sorted in the order they should be updated, as computed by {@link #updateCache()}. */\n    _updateCache = new Array();\n    /** The skeleton's current skin. May be null. */\n    skin = null;\n    /** The color to tint all the skeleton's attachments. */\n    color;\n    /** Scales the entire skeleton on the X axis. This affects all bones, even if the bone's transform mode disallows scale\n      * inheritance. */\n    scaleX = 1;\n    /** Scales the entire skeleton on the Y axis. This affects all bones, even if the bone's transform mode disallows scale\n      * inheritance. */\n    _scaleY = 1;\n    get scaleY() {\n        return Skeleton.yDown ? -this._scaleY : this._scaleY;\n    }\n    set scaleY(scaleY) {\n        this._scaleY = scaleY;\n    }\n    /** Sets the skeleton X position, which is added to the root bone worldX position. */\n    x = 0;\n    /** Sets the skeleton Y position, which is added to the root bone worldY position. */\n    y = 0;\n    /** Returns the skeleton's time. This is used for time-based manipulations, such as {@link PhysicsConstraint}.\n     * <p>\n     * See {@link #update(float)}. */\n    time = 0;\n    constructor(data) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let boneData = data.bones[i];\n            let bone;\n            if (!boneData.parent)\n                bone = new Bone(boneData, this, null);\n            else {\n                let parent = this.bones[boneData.parent.index];\n                bone = new Bone(boneData, this, parent);\n                parent.children.push(bone);\n            }\n            this.bones.push(bone);\n        }\n        this.slots = new Array();\n        this.drawOrder = new Array();\n        for (let i = 0; i < data.slots.length; i++) {\n            let slotData = data.slots[i];\n            let bone = this.bones[slotData.boneData.index];\n            let slot = new Slot(slotData, bone);\n            this.slots.push(slot);\n            this.drawOrder.push(slot);\n        }\n        this.ikConstraints = new Array();\n        for (let i = 0; i < data.ikConstraints.length; i++) {\n            let ikConstraintData = data.ikConstraints[i];\n            this.ikConstraints.push(new IkConstraint(ikConstraintData, this));\n        }\n        this.transformConstraints = new Array();\n        for (let i = 0; i < data.transformConstraints.length; i++) {\n            let transformConstraintData = data.transformConstraints[i];\n            this.transformConstraints.push(new TransformConstraint(transformConstraintData, this));\n        }\n        this.pathConstraints = new Array();\n        for (let i = 0; i < data.pathConstraints.length; i++) {\n            let pathConstraintData = data.pathConstraints[i];\n            this.pathConstraints.push(new PathConstraint(pathConstraintData, this));\n        }\n        this.physicsConstraints = new Array();\n        for (let i = 0; i < data.physicsConstraints.length; i++) {\n            let physicsConstraintData = data.physicsConstraints[i];\n            this.physicsConstraints.push(new PhysicsConstraint(physicsConstraintData, this));\n        }\n        this.color = new Color(1, 1, 1, 1);\n        this.updateCache();\n    }\n    /** Caches information about bones and constraints. Must be called if the {@link #getSkin()} is modified or if bones,\n     * constraints, or weighted path attachments are added or removed. */\n    updateCache() {\n        let updateCache = this._updateCache;\n        updateCache.length = 0;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.sorted = bone.data.skinRequired;\n            bone.active = !bone.sorted;\n        }\n        if (this.skin) {\n            let skinBones = this.skin.bones;\n            for (let i = 0, n = this.skin.bones.length; i < n; i++) {\n                let bone = this.bones[skinBones[i].index];\n                do {\n                    bone.sorted = false;\n                    bone.active = true;\n                    bone = bone.parent;\n                } while (bone);\n            }\n        }\n        // IK first, lowest hierarchy depth first.\n        let ikConstraints = this.ikConstraints;\n        let transformConstraints = this.transformConstraints;\n        let pathConstraints = this.pathConstraints;\n        let physicsConstraints = this.physicsConstraints;\n        let ikCount = ikConstraints.length, transformCount = transformConstraints.length, pathCount = pathConstraints.length, physicsCount = this.physicsConstraints.length;\n        let constraintCount = ikCount + transformCount + pathCount + physicsCount;\n        outer: for (let i = 0; i < constraintCount; i++) {\n            for (let ii = 0; ii < ikCount; ii++) {\n                let constraint = ikConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortIkConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < transformCount; ii++) {\n                let constraint = transformConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortTransformConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < pathCount; ii++) {\n                let constraint = pathConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortPathConstraint(constraint);\n                    continue outer;\n                }\n            }\n            for (let ii = 0; ii < physicsCount; ii++) {\n                const constraint = physicsConstraints[ii];\n                if (constraint.data.order == i) {\n                    this.sortPhysicsConstraint(constraint);\n                    continue outer;\n                }\n            }\n        }\n        for (let i = 0, n = bones.length; i < n; i++)\n            this.sortBone(bones[i]);\n    }\n    sortIkConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let target = constraint.target;\n        this.sortBone(target);\n        let constrained = constraint.bones;\n        let parent = constrained[0];\n        this.sortBone(parent);\n        if (constrained.length == 1) {\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n        }\n        else {\n            let child = constrained[constrained.length - 1];\n            this.sortBone(child);\n            this._updateCache.push(constraint);\n            this.sortReset(parent.children);\n            child.sorted = true;\n        }\n    }\n    sortPathConstraint(constraint) {\n        constraint.active = constraint.target.bone.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        let slot = constraint.target;\n        let slotIndex = slot.data.index;\n        let slotBone = slot.bone;\n        if (this.skin)\n            this.sortPathConstraintAttachment(this.skin, slotIndex, slotBone);\n        if (this.data.defaultSkin && this.data.defaultSkin != this.skin)\n            this.sortPathConstraintAttachment(this.data.defaultSkin, slotIndex, slotBone);\n        for (let i = 0, n = this.data.skins.length; i < n; i++)\n            this.sortPathConstraintAttachment(this.data.skins[i], slotIndex, slotBone);\n        let attachment = slot.getAttachment();\n        if (attachment instanceof PathAttachment)\n            this.sortPathConstraintAttachmentWith(attachment, slotBone);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        for (let i = 0; i < boneCount; i++)\n            this.sortBone(constrained[i]);\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortTransformConstraint(constraint) {\n        constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || (this.skin && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        this.sortBone(constraint.target);\n        let constrained = constraint.bones;\n        let boneCount = constrained.length;\n        if (constraint.data.local) {\n            for (let i = 0; i < boneCount; i++) {\n                let child = constrained[i];\n                this.sortBone(child.parent);\n                this.sortBone(child);\n            }\n        }\n        else {\n            for (let i = 0; i < boneCount; i++) {\n                this.sortBone(constrained[i]);\n            }\n        }\n        this._updateCache.push(constraint);\n        for (let i = 0; i < boneCount; i++)\n            this.sortReset(constrained[i].children);\n        for (let i = 0; i < boneCount; i++)\n            constrained[i].sorted = true;\n    }\n    sortPathConstraintAttachment(skin, slotIndex, slotBone) {\n        let attachments = skin.attachments[slotIndex];\n        if (!attachments)\n            return;\n        for (let key in attachments) {\n            this.sortPathConstraintAttachmentWith(attachments[key], slotBone);\n        }\n    }\n    sortPathConstraintAttachmentWith(attachment, slotBone) {\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let pathBones = attachment.bones;\n        if (!pathBones)\n            this.sortBone(slotBone);\n        else {\n            let bones = this.bones;\n            for (let i = 0, n = pathBones.length; i < n;) {\n                let nn = pathBones[i++];\n                nn += i;\n                while (i < nn)\n                    this.sortBone(bones[pathBones[i++]]);\n            }\n        }\n    }\n    sortPhysicsConstraint(constraint) {\n        const bone = constraint.bone;\n        constraint.active = bone.active && (!constraint.data.skinRequired || (this.skin != null && Utils.contains(this.skin.constraints, constraint.data, true)));\n        if (!constraint.active)\n            return;\n        this.sortBone(bone);\n        this._updateCache.push(constraint);\n        this.sortReset(bone.children);\n        bone.sorted = true;\n    }\n    sortBone(bone) {\n        if (!bone)\n            return;\n        if (bone.sorted)\n            return;\n        let parent = bone.parent;\n        if (parent)\n            this.sortBone(parent);\n        bone.sorted = true;\n        this._updateCache.push(bone);\n    }\n    sortReset(bones) {\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (!bone.active)\n                continue;\n            if (bone.sorted)\n                this.sortReset(bone.children);\n            bone.sorted = false;\n        }\n    }\n    /** Updates the world transform for each bone and applies all constraints.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransform(physics) {\n        if (physics === undefined || physics === null)\n            throw new Error(\"physics is undefined\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            bone.ax = bone.x;\n            bone.ay = bone.y;\n            bone.arotation = bone.rotation;\n            bone.ascaleX = bone.scaleX;\n            bone.ascaleY = bone.scaleY;\n            bone.ashearX = bone.shearX;\n            bone.ashearY = bone.shearY;\n        }\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++)\n            updateCache[i].update(physics);\n    }\n    updateWorldTransformWith(physics, parent) {\n        // Apply the parent bone transform to the root bone. The root bone always inherits scale, rotation and reflection.\n        let rootBone = this.getRootBone();\n        if (!rootBone)\n            throw new Error(\"Root bone must not be null.\");\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        rootBone.worldX = pa * this.x + pb * this.y + parent.worldX;\n        rootBone.worldY = pc * this.x + pd * this.y + parent.worldY;\n        const rx = (rootBone.rotation + rootBone.shearX) * MathUtils.degRad;\n        const ry = (rootBone.rotation + 90 + rootBone.shearY) * MathUtils.degRad;\n        const la = Math.cos(rx) * rootBone.scaleX;\n        const lb = Math.cos(ry) * rootBone.scaleY;\n        const lc = Math.sin(rx) * rootBone.scaleX;\n        const ld = Math.sin(ry) * rootBone.scaleY;\n        rootBone.a = (pa * la + pb * lc) * this.scaleX;\n        rootBone.b = (pa * lb + pb * ld) * this.scaleX;\n        rootBone.c = (pc * la + pd * lc) * this.scaleY;\n        rootBone.d = (pc * lb + pd * ld) * this.scaleY;\n        // Update everything except root bone.\n        let updateCache = this._updateCache;\n        for (let i = 0, n = updateCache.length; i < n; i++) {\n            let updatable = updateCache[i];\n            if (updatable != rootBone)\n                updatable.update(physics);\n        }\n    }\n    /** Sets the bones, constraints, and slots to their setup pose values. */\n    setToSetupPose() {\n        this.setBonesToSetupPose();\n        this.setSlotsToSetupPose();\n    }\n    /** Sets the bones and constraints to their setup pose values. */\n    setBonesToSetupPose() {\n        for (const bone of this.bones)\n            bone.setToSetupPose();\n        for (const constraint of this.ikConstraints)\n            constraint.setToSetupPose();\n        for (const constraint of this.transformConstraints)\n            constraint.setToSetupPose();\n        for (const constraint of this.pathConstraints)\n            constraint.setToSetupPose();\n        for (const constraint of this.physicsConstraints)\n            constraint.setToSetupPose();\n    }\n    /** Sets the slots and draw order to their setup pose values. */\n    setSlotsToSetupPose() {\n        let slots = this.slots;\n        Utils.arrayCopy(slots, 0, this.drawOrder, 0, slots.length);\n        for (let i = 0, n = slots.length; i < n; i++)\n            slots[i].setToSetupPose();\n    }\n    /** @returns May return null. */\n    getRootBone() {\n        if (this.bones.length == 0)\n            return null;\n        return this.bones[0];\n    }\n    /** @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.data.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * repeatedly.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Sets a skin by name.\n     *\n     * See {@link #setSkin()}. */\n    setSkinByName(skinName) {\n        let skin = this.data.findSkin(skinName);\n        if (!skin)\n            throw new Error(\"Skin not found: \" + skinName);\n        this.setSkin(skin);\n    }\n    /** Sets the skin used to look up attachments before looking in the {@link SkeletonData#defaultSkin default skin}. If the\n     * skin is changed, {@link #updateCache()} is called.\n     *\n     * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was no\n     * old skin, each slot's setup mode attachment is attached from the new skin.\n     *\n     * After changing the skin, the visible attachments can be reset to those attached in the setup pose by calling\n     * {@link #setSlotsToSetupPose()}. Also, often {@link AnimationState#apply()} is called before the next time the\n     * skeleton is rendered to allow any attachment keys in the current animation(s) to hide or show attachments from the new skin.\n     * @param newSkin May be null. */\n    setSkin(newSkin) {\n        if (newSkin == this.skin)\n            return;\n        if (newSkin) {\n            if (this.skin)\n                newSkin.attachAll(this, this.skin);\n            else {\n                let slots = this.slots;\n                for (let i = 0, n = slots.length; i < n; i++) {\n                    let slot = slots[i];\n                    let name = slot.data.attachmentName;\n                    if (name) {\n                        let attachment = newSkin.getAttachment(i, name);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                    }\n                }\n            }\n        }\n        this.skin = newSkin;\n        this.updateCache();\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot name and attachment\n     * name.\n     *\n     * See {@link #getAttachment()}.\n     * @returns May be null. */\n    getAttachmentByName(slotName, attachmentName) {\n        let slot = this.data.findSlot(slotName);\n        if (!slot)\n            throw new Error(`Can't find slot with name ${slotName}`);\n        return this.getAttachment(slot.index, attachmentName);\n    }\n    /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot index and\n     * attachment name. First the skin is checked and if the attachment was not found, the default skin is checked.\n     *\n     * See [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide.\n     * @returns May be null. */\n    getAttachment(slotIndex, attachmentName) {\n        if (!attachmentName)\n            throw new Error(\"attachmentName cannot be null.\");\n        if (this.skin) {\n            let attachment = this.skin.getAttachment(slotIndex, attachmentName);\n            if (attachment)\n                return attachment;\n        }\n        if (this.data.defaultSkin)\n            return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n        return null;\n    }\n    /** A convenience method to set an attachment by finding the slot with {@link #findSlot()}, finding the attachment with\n     * {@link #getAttachment()}, then setting the slot's {@link Slot#attachment}.\n     * @param attachmentName May be null to clear the slot's attachment. */\n    setAttachment(slotName, attachmentName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.data.name == slotName) {\n                let attachment = null;\n                if (attachmentName) {\n                    attachment = this.getAttachment(i, attachmentName);\n                    if (!attachment)\n                        throw new Error(\"Attachment not found: \" + attachmentName + \", for slot: \" + slotName);\n                }\n                slot.setAttachment(attachment);\n                return;\n            }\n        }\n        throw new Error(\"Slot not found: \" + slotName);\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        return this.ikConstraints.find((constraint) => constraint.data.name == constraintName) ?? null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it repeatedly.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        return this.transformConstraints.find((constraint) => constraint.data.name == constraintName) ?? null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it repeatedly.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        return this.pathConstraints.find((constraint) => constraint.data.name == constraintName) ?? null;\n    }\n    /** Finds a physics constraint by comparing each physics constraint's name. It is more efficient to cache the results of this\n     * method than to call it repeatedly. */\n    findPhysicsConstraint(constraintName) {\n        if (constraintName == null)\n            throw new Error(\"constraintName cannot be null.\");\n        return this.physicsConstraints.find((constraint) => constraint.data.name == constraintName) ?? null;\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose as `{ x: number, y: number, width: number, height: number }`.\n     * Note that this method will create temporary objects which can add to garbage collection pressure. Use `getBounds()` if garbage collection is a concern. */\n    getBoundsRect() {\n        let offset = new Vector2();\n        let size = new Vector2();\n        this.getBounds(offset, size);\n        return { x: offset.x, y: offset.y, width: size.x, height: size.y };\n    }\n    /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose.\n     * @param offset An output value, the distance from the skeleton origin to the bottom left corner of the AABB.\n     * @param size An output value, the width and height of the AABB.\n     * @param temp Working memory to temporarily store attachments' computed world vertices.\n     * @param clipper {@link SkeletonClipping} to use. If <code>null</code>, no clipping is applied. */\n    getBounds(offset, size, temp = new Array(2), clipper = null) {\n        if (!offset)\n            throw new Error(\"offset cannot be null.\");\n        if (!size)\n            throw new Error(\"size cannot be null.\");\n        let drawOrder = this.drawOrder;\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        for (let i = 0, n = drawOrder.length; i < n; i++) {\n            let slot = drawOrder[i];\n            if (!slot.bone.active)\n                continue;\n            let verticesLength = 0;\n            let vertices = null;\n            let triangles = null;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof RegionAttachment) {\n                verticesLength = 8;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                attachment.computeWorldVertices(slot, vertices, 0, 2);\n                triangles = Skeleton.quadTriangles;\n            }\n            else if (attachment instanceof MeshAttachment) {\n                let mesh = attachment;\n                verticesLength = mesh.worldVerticesLength;\n                vertices = Utils.setArraySize(temp, verticesLength, 0);\n                mesh.computeWorldVertices(slot, 0, verticesLength, vertices, 0, 2);\n                triangles = mesh.triangles;\n            }\n            else if (attachment instanceof ClippingAttachment && clipper != null) {\n                clipper.clipStart(slot, attachment);\n                continue;\n            }\n            if (vertices && triangles) {\n                if (clipper != null && clipper.isClipping()) {\n                    clipper.clipTriangles(vertices, triangles, triangles.length);\n                    vertices = clipper.clippedVertices;\n                    verticesLength = clipper.clippedVertices.length;\n                }\n                for (let ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n                    let x = vertices[ii], y = vertices[ii + 1];\n                    minX = Math.min(minX, x);\n                    minY = Math.min(minY, y);\n                    maxX = Math.max(maxX, x);\n                    maxY = Math.max(maxY, y);\n                }\n            }\n            if (clipper != null)\n                clipper.clipEndWithSlot(slot);\n        }\n        if (clipper != null)\n            clipper.clipEnd();\n        offset.set(minX, minY);\n        size.set(maxX - minX, maxY - minY);\n    }\n    /** Increments the skeleton's {@link #time}. */\n    update(delta) {\n        this.time += delta;\n    }\n    physicsTranslate(x, y) {\n        const physicsConstraints = this.physicsConstraints;\n        for (let i = 0, n = physicsConstraints.length; i < n; i++)\n            physicsConstraints[i].translate(x, y);\n    }\n    /** Calls {@link PhysicsConstraint#rotate(float, float, float)} for each physics constraint. */\n    physicsRotate(x, y, degrees) {\n        const physicsConstraints = this.physicsConstraints;\n        for (let i = 0, n = physicsConstraints.length; i < n; i++)\n            physicsConstraints[i].rotate(x, y, degrees);\n    }\n}\n/** Determines how physics and other non-deterministic updates are applied. */\nexport var Physics;\n(function (Physics) {\n    /** Physics are not updated or applied. */\n    Physics[Physics[\"none\"] = 0] = \"none\";\n    /** Physics are reset to the current pose. */\n    Physics[Physics[\"reset\"] = 1] = \"reset\";\n    /** Physics are updated and the pose from physics is applied. */\n    Physics[Physics[\"update\"] = 2] = \"update\";\n    /** Physics are not updated but the pose from physics is applied. */\n    Physics[Physics[\"pose\"] = 3] = \"pose\";\n})(Physics || (Physics = {}));\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"./Utils.js\";\n/** Stores the setup pose for a {@link Slot}. */\nexport class SlotData {\n    /** The index of the slot in {@link Skeleton#getSlots()}. */\n    index = 0;\n    /** The name of the slot, which is unique across all slots in the skeleton. */\n    name;\n    /** The bone this slot belongs to. */\n    boneData;\n    /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n     * color tinting. */\n    color = new Color(1, 1, 1, 1);\n    /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n     * color's alpha is not used. */\n    darkColor = null;\n    /** The name of the attachment that is visible for this slot in the setup pose, or null if no attachment is visible. */\n    attachmentName = null;\n    /** The blend mode for drawing the slot's attachment. */\n    blendMode = BlendMode.Normal;\n    /** False if the slot was hidden in Spine and nonessential data was exported. Does not affect runtime rendering. */\n    visible = true;\n    constructor(index, name, boneData) {\n        if (index < 0)\n            throw new Error(\"index must be >= 0.\");\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        if (!boneData)\n            throw new Error(\"boneData cannot be null.\");\n        this.index = index;\n        this.name = name;\n        this.boneData = boneData;\n    }\n}\n/** Determines how images are blended with existing pixels when drawn. */\nexport var BlendMode;\n(function (BlendMode) {\n    BlendMode[BlendMode[\"Normal\"] = 0] = \"Normal\";\n    BlendMode[BlendMode[\"Additive\"] = 1] = \"Additive\";\n    BlendMode[BlendMode[\"Multiply\"] = 2] = \"Multiply\";\n    BlendMode[BlendMode[\"Screen\"] = 3] = \"Screen\";\n})(BlendMode || (BlendMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2xvdERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRy9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFbkMsZ0RBQWdEO0FBQ2hELE1BQU0sT0FBTyxRQUFRO0lBQ3BCLDREQUE0RDtJQUM1RCxLQUFLLEdBQVcsQ0FBQyxDQUFDO0lBRWxCLDhFQUE4RTtJQUM5RSxJQUFJLENBQVM7SUFFYixxQ0FBcUM7SUFDckMsUUFBUSxDQUFXO0lBRW5CO3dCQUNvQjtJQUNwQixLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFOUI7b0NBQ2dDO0lBQ2hDLFNBQVMsR0FBaUIsSUFBSSxDQUFDO0lBRS9CLHVIQUF1SDtJQUN2SCxjQUFjLEdBQWtCLElBQUksQ0FBQztJQUVyQyx3REFBd0Q7SUFDeEQsU0FBUyxHQUFjLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFFeEMsbUhBQW1IO0lBQ25ILE9BQU8sR0FBRyxJQUFJLENBQUM7SUFFZixZQUFhLEtBQWEsRUFBRSxJQUFZLEVBQUUsUUFBa0I7UUFDM0QsSUFBSSxLQUFLLEdBQUcsQ0FBQztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsSUFBSTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsUUFBUTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMxQixDQUFDO0NBQ0Q7QUFFRCx5RUFBeUU7QUFDekUsTUFBTSxDQUFOLElBQVksU0FBZ0Q7QUFBNUQsV0FBWSxTQUFTO0lBQUcsNkNBQU0sQ0FBQTtJQUFFLGlEQUFRLENBQUE7SUFBRSxpREFBUSxDQUFBO0lBQUUsNkNBQU0sQ0FBQTtBQUFDLENBQUMsRUFBaEQsU0FBUyxLQUFULFNBQVMsUUFBdUMifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, InheritTimeline, AttachmentTimeline, RGBATimeline, RGBTimeline, RGBA2Timeline, RGB2Timeline, AlphaTimeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline, SequenceTimeline, PhysicsConstraintResetTimeline, PhysicsConstraintInertiaTimeline, PhysicsConstraintStrengthTimeline, PhysicsConstraintDampingTimeline, PhysicsConstraintMassTimeline, PhysicsConstraintWindTimeline, PhysicsConstraintGravityTimeline, PhysicsConstraintMixTimeline } from \"./Animation.js\";\nimport { Sequence, SequenceModeValues } from \"./attachments/Sequence.js\";\nimport { BoneData } from \"./BoneData.js\";\nimport { Event } from \"./Event.js\";\nimport { EventData } from \"./EventData.js\";\nimport { IkConstraintData } from \"./IkConstraintData.js\";\nimport { PathConstraintData, PositionMode, SpacingMode } from \"./PathConstraintData.js\";\nimport { PhysicsConstraintData } from \"./PhysicsConstraintData.js\";\nimport { SkeletonData } from \"./SkeletonData.js\";\nimport { Skin } from \"./Skin.js\";\nimport { SlotData } from \"./SlotData.js\";\nimport { TransformConstraintData } from \"./TransformConstraintData.js\";\nimport { Color, Utils } from \"./Utils.js\";\n/** Loads skeleton data in the Spine binary format.\n *\n * See [Spine binary format](http://esotericsoftware.com/spine-binary-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonBinary {\n    /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n     * runtime than were used in Spine.\n     *\n     * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n    scale = 1;\n    attachmentLoader;\n    linkedMeshes = new Array();\n    constructor(attachmentLoader) {\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(binary) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        skeletonData.name = \"\"; // BOZO\n        let input = new BinaryInput(binary);\n        let lowHash = input.readInt32();\n        let highHash = input.readInt32();\n        skeletonData.hash = highHash == 0 && lowHash == 0 ? null : highHash.toString(16) + lowHash.toString(16);\n        skeletonData.version = input.readString();\n        skeletonData.x = input.readFloat();\n        skeletonData.y = input.readFloat();\n        skeletonData.width = input.readFloat();\n        skeletonData.height = input.readFloat();\n        skeletonData.referenceScale = input.readFloat() * scale;\n        let nonessential = input.readBoolean();\n        if (nonessential) {\n            skeletonData.fps = input.readFloat();\n            skeletonData.imagesPath = input.readString();\n            skeletonData.audioPath = input.readString();\n        }\n        let n = 0;\n        // Strings.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let str = input.readString();\n            if (!str)\n                throw new Error(\"String in string table must not be null.\");\n            input.strings.push(str);\n        }\n        // Bones.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Bone name must not be null.\");\n            let parent = i == 0 ? null : skeletonData.bones[input.readInt(true)];\n            let data = new BoneData(i, name, parent);\n            data.rotation = input.readFloat();\n            data.x = input.readFloat() * scale;\n            data.y = input.readFloat() * scale;\n            data.scaleX = input.readFloat();\n            data.scaleY = input.readFloat();\n            data.shearX = input.readFloat();\n            data.shearY = input.readFloat();\n            data.length = input.readFloat() * scale;\n            data.inherit = input.readByte();\n            data.skinRequired = input.readBoolean();\n            if (nonessential) {\n                Color.rgba8888ToColor(data.color, input.readInt32());\n                data.icon = input.readString() ?? undefined;\n                data.visible = input.readBoolean();\n            }\n            skeletonData.bones.push(data);\n        }\n        // Slots.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let slotName = input.readString();\n            if (!slotName)\n                throw new Error(\"Slot name must not be null.\");\n            let boneData = skeletonData.bones[input.readInt(true)];\n            let data = new SlotData(i, slotName, boneData);\n            Color.rgba8888ToColor(data.color, input.readInt32());\n            let darkColor = input.readInt32();\n            if (darkColor != -1)\n                Color.rgb888ToColor(data.darkColor = new Color(), darkColor);\n            data.attachmentName = input.readStringRef();\n            data.blendMode = input.readInt(true);\n            if (nonessential)\n                data.visible = input.readBoolean();\n            skeletonData.slots.push(data);\n        }\n        // IK constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"IK constraint data name must not be null.\");\n            let data = new IkConstraintData(name);\n            data.order = input.readInt(true);\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            let flags = input.readByte();\n            data.skinRequired = (flags & 1) != 0;\n            data.bendDirection = (flags & 2) != 0 ? 1 : -1;\n            data.compress = (flags & 4) != 0;\n            data.stretch = (flags & 8) != 0;\n            data.uniform = (flags & 16) != 0;\n            if ((flags & 32) != 0)\n                data.mix = (flags & 64) != 0 ? input.readFloat() : 1;\n            if ((flags & 128) != 0)\n                data.softness = input.readFloat() * scale;\n            skeletonData.ikConstraints.push(data);\n        }\n        // Transform constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Transform constraint data name must not be null.\");\n            let data = new TransformConstraintData(name);\n            data.order = input.readInt(true);\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.bones[input.readInt(true)];\n            let flags = input.readByte();\n            data.skinRequired = (flags & 1) != 0;\n            data.local = (flags & 2) != 0;\n            data.relative = (flags & 4) != 0;\n            if ((flags & 8) != 0)\n                data.offsetRotation = input.readFloat();\n            if ((flags & 16) != 0)\n                data.offsetX = input.readFloat() * scale;\n            if ((flags & 32) != 0)\n                data.offsetY = input.readFloat() * scale;\n            if ((flags & 64) != 0)\n                data.offsetScaleX = input.readFloat();\n            if ((flags & 128) != 0)\n                data.offsetScaleY = input.readFloat();\n            flags = input.readByte();\n            if ((flags & 1) != 0)\n                data.offsetShearY = input.readFloat();\n            if ((flags & 2) != 0)\n                data.mixRotate = input.readFloat();\n            if ((flags & 4) != 0)\n                data.mixX = input.readFloat();\n            if ((flags & 8) != 0)\n                data.mixY = input.readFloat();\n            if ((flags & 16) != 0)\n                data.mixScaleX = input.readFloat();\n            if ((flags & 32) != 0)\n                data.mixScaleY = input.readFloat();\n            if ((flags & 64) != 0)\n                data.mixShearY = input.readFloat();\n            skeletonData.transformConstraints.push(data);\n        }\n        // Path constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            let name = input.readString();\n            if (!name)\n                throw new Error(\"Path constraint data name must not be null.\");\n            let data = new PathConstraintData(name);\n            data.order = input.readInt(true);\n            data.skinRequired = input.readBoolean();\n            nn = input.readInt(true);\n            for (let ii = 0; ii < nn; ii++)\n                data.bones.push(skeletonData.bones[input.readInt(true)]);\n            data.target = skeletonData.slots[input.readInt(true)];\n            const flags = input.readByte();\n            data.positionMode = flags & 1;\n            data.spacingMode = (flags >> 1) & 3;\n            data.rotateMode = (flags >> 3) & 3;\n            if ((flags & 128) != 0)\n                data.offsetRotation = input.readFloat();\n            data.position = input.readFloat();\n            if (data.positionMode == PositionMode.Fixed)\n                data.position *= scale;\n            data.spacing = input.readFloat();\n            if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                data.spacing *= scale;\n            data.mixRotate = input.readFloat();\n            data.mixX = input.readFloat();\n            data.mixY = input.readFloat();\n            skeletonData.pathConstraints.push(data);\n        }\n        // Physics constraints.\n        n = input.readInt(true);\n        for (let i = 0, nn; i < n; i++) {\n            const name = input.readString();\n            if (!name)\n                throw new Error(\"Physics constraint data name must not be null.\");\n            const data = new PhysicsConstraintData(name);\n            data.order = input.readInt(true);\n            data.bone = skeletonData.bones[input.readInt(true)];\n            let flags = input.readByte();\n            data.skinRequired = (flags & 1) != 0;\n            if ((flags & 2) != 0)\n                data.x = input.readFloat();\n            if ((flags & 4) != 0)\n                data.y = input.readFloat();\n            if ((flags & 8) != 0)\n                data.rotate = input.readFloat();\n            if ((flags & 16) != 0)\n                data.scaleX = input.readFloat();\n            if ((flags & 32) != 0)\n                data.shearX = input.readFloat();\n            data.limit = ((flags & 64) != 0 ? input.readFloat() : 5000) * scale;\n            data.step = 1 / input.readUnsignedByte();\n            data.inertia = input.readFloat();\n            data.strength = input.readFloat();\n            data.damping = input.readFloat();\n            data.massInverse = (flags & 128) != 0 ? input.readFloat() : 1;\n            data.wind = input.readFloat();\n            data.gravity = input.readFloat();\n            flags = input.readByte();\n            if ((flags & 1) != 0)\n                data.inertiaGlobal = true;\n            if ((flags & 2) != 0)\n                data.strengthGlobal = true;\n            if ((flags & 4) != 0)\n                data.dampingGlobal = true;\n            if ((flags & 8) != 0)\n                data.massGlobal = true;\n            if ((flags & 16) != 0)\n                data.windGlobal = true;\n            if ((flags & 32) != 0)\n                data.gravityGlobal = true;\n            if ((flags & 64) != 0)\n                data.mixGlobal = true;\n            data.mix = (flags & 128) != 0 ? input.readFloat() : 1;\n            skeletonData.physicsConstraints.push(data);\n        }\n        // Default skin.\n        let defaultSkin = this.readSkin(input, skeletonData, true, nonessential);\n        if (defaultSkin) {\n            skeletonData.defaultSkin = defaultSkin;\n            skeletonData.skins.push(defaultSkin);\n        }\n        // Skins.\n        {\n            let i = skeletonData.skins.length;\n            Utils.setArraySize(skeletonData.skins, n = i + input.readInt(true));\n            for (; i < n; i++) {\n                let skin = this.readSkin(input, skeletonData, false, nonessential);\n                if (!skin)\n                    throw new Error(\"readSkin() should not have returned null.\");\n                skeletonData.skins[i] = skin;\n            }\n        }\n        // Linked meshes.\n        n = this.linkedMeshes.length;\n        for (let i = 0; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            const skin = skeletonData.skins[linkedMesh.skinIndex];\n            if (!linkedMesh.parent)\n                throw new Error(\"Linked mesh parent must not be null\");\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            if (!parent)\n                throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n            linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            if (linkedMesh.mesh.region != null)\n                linkedMesh.mesh.updateRegion();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let eventName = input.readString();\n            if (!eventName)\n                throw new Error(\"Event data name must not be null\");\n            let data = new EventData(eventName);\n            data.intValue = input.readInt(false);\n            data.floatValue = input.readFloat();\n            data.stringValue = input.readString();\n            data.audioPath = input.readString();\n            if (data.audioPath) {\n                data.volume = input.readFloat();\n                data.balance = input.readFloat();\n            }\n            skeletonData.events.push(data);\n        }\n        // Animations.\n        n = input.readInt(true);\n        for (let i = 0; i < n; i++) {\n            let animationName = input.readString();\n            if (!animationName)\n                throw new Error(\"Animatio name must not be null.\");\n            skeletonData.animations.push(this.readAnimation(input, animationName, skeletonData));\n        }\n        return skeletonData;\n    }\n    readSkin(input, skeletonData, defaultSkin, nonessential) {\n        let skin = null;\n        let slotCount = 0;\n        if (defaultSkin) {\n            slotCount = input.readInt(true);\n            if (slotCount == 0)\n                return null;\n            skin = new Skin(\"default\");\n        }\n        else {\n            let skinName = input.readString();\n            if (!skinName)\n                throw new Error(\"Skin name must not be null.\");\n            skin = new Skin(skinName);\n            if (nonessential)\n                Color.rgba8888ToColor(skin.color, input.readInt32());\n            skin.bones.length = input.readInt(true);\n            for (let i = 0, n = skin.bones.length; i < n; i++)\n                skin.bones[i] = skeletonData.bones[input.readInt(true)];\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.ikConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.transformConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.pathConstraints[input.readInt(true)]);\n            for (let i = 0, n = input.readInt(true); i < n; i++)\n                skin.constraints.push(skeletonData.physicsConstraints[input.readInt(true)]);\n            slotCount = input.readInt(true);\n        }\n        for (let i = 0; i < slotCount; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let name = input.readStringRef();\n                if (!name)\n                    throw new Error(\"Attachment name must not be null\");\n                let attachment = this.readAttachment(input, skeletonData, skin, slotIndex, name, nonessential);\n                if (attachment)\n                    skin.setAttachment(slotIndex, name, attachment);\n            }\n        }\n        return skin;\n    }\n    readAttachment(input, skeletonData, skin, slotIndex, attachmentName, nonessential) {\n        let scale = this.scale;\n        let flags = input.readByte();\n        const name = (flags & 8) != 0 ? input.readStringRef() : attachmentName;\n        if (!name)\n            throw new Error(\"Attachment name must not be null\");\n        switch ((flags & 0b111)) { // BUG?\n            case AttachmentType.Region: {\n                let path = (flags & 16) != 0 ? input.readStringRef() : null;\n                const color = (flags & 32) != 0 ? input.readInt32() : 0xffffffff;\n                const sequence = (flags & 64) != 0 ? this.readSequence(input) : null;\n                let rotation = (flags & 128) != 0 ? input.readFloat() : 0;\n                let x = input.readFloat();\n                let y = input.readFloat();\n                let scaleX = input.readFloat();\n                let scaleY = input.readFloat();\n                let width = input.readFloat();\n                let height = input.readFloat();\n                if (!path)\n                    path = name;\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = x * scale;\n                region.y = y * scale;\n                region.scaleX = scaleX;\n                region.scaleY = scaleY;\n                region.rotation = rotation;\n                region.width = width * scale;\n                region.height = height * scale;\n                Color.rgba8888ToColor(region.color, color);\n                region.sequence = sequence;\n                if (sequence == null)\n                    region.updateRegion();\n                return region;\n            }\n            case AttachmentType.BoundingBox: {\n                let vertices = this.readVertices(input, (flags & 16) != 0);\n                let color = nonessential ? input.readInt32() : 0;\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                box.worldVerticesLength = vertices.length;\n                box.vertices = vertices.vertices;\n                box.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(box.color, color);\n                return box;\n            }\n            case AttachmentType.Mesh: {\n                let path = (flags & 16) != 0 ? input.readStringRef() : name;\n                const color = (flags & 32) != 0 ? input.readInt32() : 0xffffffff;\n                const sequence = (flags & 64) != 0 ? this.readSequence(input) : null;\n                const hullLength = input.readInt(true);\n                const vertices = this.readVertices(input, (flags & 128) != 0);\n                const uvs = this.readFloatArray(input, vertices.length, 1);\n                const triangles = this.readShortArray(input, (vertices.length - hullLength - 2) * 3);\n                let edges = [];\n                let width = 0, height = 0;\n                if (nonessential) {\n                    edges = this.readShortArray(input, input.readInt(true));\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                if (!path)\n                    path = name;\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.bones = vertices.bones;\n                mesh.vertices = vertices.vertices;\n                mesh.worldVerticesLength = vertices.length;\n                mesh.triangles = triangles;\n                mesh.regionUVs = uvs;\n                if (sequence == null)\n                    mesh.updateRegion();\n                mesh.hullLength = hullLength << 1;\n                mesh.sequence = sequence;\n                if (nonessential) {\n                    mesh.edges = edges;\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                return mesh;\n            }\n            case AttachmentType.LinkedMesh: {\n                const path = (flags & 16) != 0 ? input.readStringRef() : name;\n                if (path == null)\n                    throw new Error(\"Path of linked mesh must not be null\");\n                const color = (flags & 32) != 0 ? input.readInt32() : 0xffffffff;\n                const sequence = (flags & 64) != 0 ? this.readSequence(input) : null;\n                const inheritTimelines = (flags & 128) != 0;\n                const skinIndex = input.readInt(true);\n                const parent = input.readStringRef();\n                let width = 0, height = 0;\n                if (nonessential) {\n                    width = input.readFloat();\n                    height = input.readFloat();\n                }\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                Color.rgba8888ToColor(mesh.color, color);\n                mesh.sequence = sequence;\n                if (nonessential) {\n                    mesh.width = width * scale;\n                    mesh.height = height * scale;\n                }\n                this.linkedMeshes.push(new LinkedMesh(mesh, skinIndex, slotIndex, parent, inheritTimelines));\n                return mesh;\n            }\n            case AttachmentType.Path: {\n                const closed = (flags & 16) != 0;\n                const constantSpeed = (flags & 32) != 0;\n                const vertices = this.readVertices(input, (flags & 64) != 0);\n                const lengths = Utils.newArray(vertices.length / 6, 0);\n                for (let i = 0, n = lengths.length; i < n; i++)\n                    lengths[i] = input.readFloat() * scale;\n                const color = nonessential ? input.readInt32() : 0;\n                const path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = closed;\n                path.constantSpeed = constantSpeed;\n                path.worldVerticesLength = vertices.length;\n                path.vertices = vertices.vertices;\n                path.bones = vertices.bones;\n                path.lengths = lengths;\n                if (nonessential)\n                    Color.rgba8888ToColor(path.color, color);\n                return path;\n            }\n            case AttachmentType.Point: {\n                const rotation = input.readFloat();\n                const x = input.readFloat();\n                const y = input.readFloat();\n                const color = nonessential ? input.readInt32() : 0;\n                const point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = x * scale;\n                point.y = y * scale;\n                point.rotation = rotation;\n                if (nonessential)\n                    Color.rgba8888ToColor(point.color, color);\n                return point;\n            }\n            case AttachmentType.Clipping: {\n                const endSlotIndex = input.readInt(true);\n                const vertices = this.readVertices(input, (flags & 16) != 0);\n                let color = nonessential ? input.readInt32() : 0;\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                clip.endSlot = skeletonData.slots[endSlotIndex];\n                clip.worldVerticesLength = vertices.length;\n                clip.vertices = vertices.vertices;\n                clip.bones = vertices.bones;\n                if (nonessential)\n                    Color.rgba8888ToColor(clip.color, color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readSequence(input) {\n        let sequence = new Sequence(input.readInt(true));\n        sequence.start = input.readInt(true);\n        sequence.digits = input.readInt(true);\n        sequence.setupIndex = input.readInt(true);\n        return sequence;\n    }\n    readVertices(input, weighted) {\n        const scale = this.scale;\n        const vertexCount = input.readInt(true);\n        const vertices = new Vertices();\n        vertices.length = vertexCount << 1;\n        if (!weighted) {\n            vertices.vertices = this.readFloatArray(input, vertices.length, scale);\n            return vertices;\n        }\n        let weights = new Array();\n        let bonesArray = new Array();\n        for (let i = 0; i < vertexCount; i++) {\n            let boneCount = input.readInt(true);\n            bonesArray.push(boneCount);\n            for (let ii = 0; ii < boneCount; ii++) {\n                bonesArray.push(input.readInt(true));\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat() * scale);\n                weights.push(input.readFloat());\n            }\n        }\n        vertices.vertices = Utils.toFloatArray(weights);\n        vertices.bones = bonesArray;\n        return vertices;\n    }\n    readFloatArray(input, n, scale) {\n        let array = new Array(n);\n        if (scale == 1) {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat();\n        }\n        else {\n            for (let i = 0; i < n; i++)\n                array[i] = input.readFloat() * scale;\n        }\n        return array;\n    }\n    readShortArray(input, n) {\n        let array = new Array(n);\n        for (let i = 0; i < n; i++)\n            array[i] = input.readInt(true);\n        return array;\n    }\n    readAnimation(input, name, skeletonData) {\n        input.readInt(true); // Number of timelines.\n        let timelines = new Array();\n        let scale = this.scale;\n        // Slot timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let slotIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let timelineType = input.readByte();\n                let frameCount = input.readInt(true);\n                let frameLast = frameCount - 1;\n                switch (timelineType) {\n                    case SLOT_ATTACHMENT: {\n                        let timeline = new AttachmentTimeline(frameCount, slotIndex);\n                        for (let frame = 0; frame < frameCount; frame++)\n                            timeline.setFrame(frame, input.readFloat(), input.readStringRef());\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBATimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            let a2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBTimeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let r2 = input.readUnsignedByte() / 255.0;\n                            let g2 = input.readUnsignedByte() / 255.0;\n                            let b2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                            }\n                            time = time2;\n                            r = r2;\n                            g = g2;\n                            b = b2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGBA2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGBA2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let a = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, a, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let na = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, na, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 6, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            a = na;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_RGB2: {\n                        let bezierCount = input.readInt(true);\n                        let timeline = new RGB2Timeline(frameCount, bezierCount, slotIndex);\n                        let time = input.readFloat();\n                        let r = input.readUnsignedByte() / 255.0;\n                        let g = input.readUnsignedByte() / 255.0;\n                        let b = input.readUnsignedByte() / 255.0;\n                        let r2 = input.readUnsignedByte() / 255.0;\n                        let g2 = input.readUnsignedByte() / 255.0;\n                        let b2 = input.readUnsignedByte() / 255.0;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, r, g, b, r2, g2, b2);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let nr = input.readUnsignedByte() / 255.0;\n                            let ng = input.readUnsignedByte() / 255.0;\n                            let nb = input.readUnsignedByte() / 255.0;\n                            let nr2 = input.readUnsignedByte() / 255.0;\n                            let ng2 = input.readUnsignedByte() / 255.0;\n                            let nb2 = input.readUnsignedByte() / 255.0;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                                    setBezier(input, timeline, bezier++, frame, 3, time, time2, r2, nr2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 4, time, time2, g2, ng2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 5, time, time2, b2, nb2, 1);\n                            }\n                            time = time2;\n                            r = nr;\n                            g = ng;\n                            b = nb;\n                            r2 = nr2;\n                            g2 = ng2;\n                            b2 = nb2;\n                        }\n                        timelines.push(timeline);\n                        break;\n                    }\n                    case SLOT_ALPHA: {\n                        let timeline = new AlphaTimeline(frameCount, input.readInt(true), slotIndex);\n                        let time = input.readFloat(), a = input.readUnsignedByte() / 255;\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, a);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat();\n                            let a2 = input.readUnsignedByte() / 255;\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, a, a2, 1);\n                            }\n                            time = time2;\n                            a = a2;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let boneIndex = input.readInt(true);\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let type = input.readByte(), frameCount = input.readInt(true);\n                if (type == BONE_INHERIT) {\n                    let timeline = new InheritTimeline(frameCount, boneIndex);\n                    for (let frame = 0; frame < frameCount; frame++) {\n                        timeline.setFrame(frame, input.readFloat(), input.readByte());\n                    }\n                    timelines.push(timeline);\n                    continue;\n                }\n                let bezierCount = input.readInt(true);\n                switch (type) {\n                    case BONE_ROTATE:\n                        timelines.push(readTimeline1(input, new RotateTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_TRANSLATE:\n                        timelines.push(readTimeline2(input, new TranslateTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEX:\n                        timelines.push(readTimeline1(input, new TranslateXTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_TRANSLATEY:\n                        timelines.push(readTimeline1(input, new TranslateYTimeline(frameCount, bezierCount, boneIndex), scale));\n                        break;\n                    case BONE_SCALE:\n                        timelines.push(readTimeline2(input, new ScaleTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEX:\n                        timelines.push(readTimeline1(input, new ScaleXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SCALEY:\n                        timelines.push(readTimeline1(input, new ScaleYTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEAR:\n                        timelines.push(readTimeline2(input, new ShearTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARX:\n                        timelines.push(readTimeline1(input, new ShearXTimeline(frameCount, bezierCount, boneIndex), 1));\n                        break;\n                    case BONE_SHEARY:\n                        timelines.push(readTimeline1(input, new ShearYTimeline(frameCount, bezierCount, boneIndex), 1));\n                }\n            }\n        }\n        // IK constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new IkConstraintTimeline(frameCount, input.readInt(true), index);\n            let flags = input.readByte();\n            let time = input.readFloat(), mix = (flags & 1) != 0 ? ((flags & 2) != 0 ? input.readFloat() : 1) : 0;\n            let softness = (flags & 4) != 0 ? input.readFloat() * scale : 0;\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mix, softness, (flags & 8) != 0 ? 1 : -1, (flags & 16) != 0, (flags & 32) != 0);\n                if (frame == frameLast)\n                    break;\n                flags = input.readByte();\n                const time2 = input.readFloat(), mix2 = (flags & 1) != 0 ? ((flags & 2) != 0 ? input.readFloat() : 1) : 0;\n                const softness2 = (flags & 4) != 0 ? input.readFloat() * scale : 0;\n                if ((flags & 64) != 0) {\n                    timeline.setStepped(frame);\n                }\n                else if ((flags & 128) != 0) {\n                    setBezier(input, timeline, bezier++, frame, 0, time, time2, mix, mix2, 1);\n                    setBezier(input, timeline, bezier++, frame, 1, time, time2, softness, softness2, scale);\n                }\n                time = time2;\n                mix = mix2;\n                softness = softness2;\n            }\n            timelines.push(timeline);\n        }\n        // Transform constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true), frameCount = input.readInt(true), frameLast = frameCount - 1;\n            let timeline = new TransformConstraintTimeline(frameCount, input.readInt(true), index);\n            let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat(), mixScaleX = input.readFloat(), mixScaleY = input.readFloat(), mixShearY = input.readFloat();\n            for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                if (frame == frameLast)\n                    break;\n                let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat(), mixScaleX2 = input.readFloat(), mixScaleY2 = input.readFloat(), mixShearY2 = input.readFloat();\n                switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                        timeline.setStepped(frame);\n                        break;\n                    case CURVE_BEZIER:\n                        setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        setBezier(input, timeline, bezier++, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        setBezier(input, timeline, bezier++, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                }\n                time = time2;\n                mixRotate = mixRotate2;\n                mixX = mixX2;\n                mixY = mixY2;\n                mixScaleX = mixScaleX2;\n                mixScaleY = mixScaleY2;\n                mixShearY = mixShearY2;\n            }\n            timelines.push(timeline);\n        }\n        // Path constraint timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let index = input.readInt(true);\n            let data = skeletonData.pathConstraints[index];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                const type = input.readByte(), frameCount = input.readInt(true), bezierCount = input.readInt(true);\n                switch (type) {\n                    case PATH_POSITION:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintPositionTimeline(frameCount, bezierCount, index), data.positionMode == PositionMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_SPACING:\n                        timelines\n                            .push(readTimeline1(input, new PathConstraintSpacingTimeline(frameCount, bezierCount, index), data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed ? scale : 1));\n                        break;\n                    case PATH_MIX:\n                        let timeline = new PathConstraintMixTimeline(frameCount, bezierCount, index);\n                        let time = input.readFloat(), mixRotate = input.readFloat(), mixX = input.readFloat(), mixY = input.readFloat();\n                        for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            if (frame == frameLast)\n                                break;\n                            let time2 = input.readFloat(), mixRotate2 = input.readFloat(), mixX2 = input.readFloat(), mixY2 = input.readFloat();\n                            switch (input.readByte()) {\n                                case CURVE_STEPPED:\n                                    timeline.setStepped(frame);\n                                    break;\n                                case CURVE_BEZIER:\n                                    setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                                    setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                        }\n                        timelines.push(timeline);\n                }\n            }\n        }\n        // Physics timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            const index = input.readInt(true) - 1;\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                const type = input.readByte(), frameCount = input.readInt(true);\n                if (type == PHYSICS_RESET) {\n                    const timeline = new PhysicsConstraintResetTimeline(frameCount, index);\n                    for (let frame = 0; frame < frameCount; frame++)\n                        timeline.setFrame(frame, input.readFloat());\n                    timelines.push(timeline);\n                    continue;\n                }\n                const bezierCount = input.readInt(true);\n                switch (type) {\n                    case PHYSICS_INERTIA:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintInertiaTimeline(frameCount, bezierCount, index), 1));\n                        break;\n                    case PHYSICS_STRENGTH:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintStrengthTimeline(frameCount, bezierCount, index), 1));\n                        break;\n                    case PHYSICS_DAMPING:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintDampingTimeline(frameCount, bezierCount, index), 1));\n                        break;\n                    case PHYSICS_MASS:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintMassTimeline(frameCount, bezierCount, index), 1));\n                        break;\n                    case PHYSICS_WIND:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintWindTimeline(frameCount, bezierCount, index), 1));\n                        break;\n                    case PHYSICS_GRAVITY:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintGravityTimeline(frameCount, bezierCount, index), 1));\n                        break;\n                    case PHYSICS_MIX:\n                        timelines.push(readTimeline1(input, new PhysicsConstraintMixTimeline(frameCount, bezierCount, index), 1));\n                }\n            }\n        }\n        // Deform timelines.\n        for (let i = 0, n = input.readInt(true); i < n; i++) {\n            let skin = skeletonData.skins[input.readInt(true)];\n            for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n                let slotIndex = input.readInt(true);\n                for (let iii = 0, nnn = input.readInt(true); iii < nnn; iii++) {\n                    let attachmentName = input.readStringRef();\n                    if (!attachmentName)\n                        throw new Error(\"attachmentName must not be null.\");\n                    let attachment = skin.getAttachment(slotIndex, attachmentName);\n                    let timelineType = input.readByte();\n                    let frameCount = input.readInt(true);\n                    let frameLast = frameCount - 1;\n                    switch (timelineType) {\n                        case ATTACHMENT_DEFORM: {\n                            let vertexAttachment = attachment;\n                            let weighted = vertexAttachment.bones;\n                            let vertices = vertexAttachment.vertices;\n                            let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                            let bezierCount = input.readInt(true);\n                            let timeline = new DeformTimeline(frameCount, bezierCount, slotIndex, vertexAttachment);\n                            let time = input.readFloat();\n                            for (let frame = 0, bezier = 0;; frame++) {\n                                let deform;\n                                let end = input.readInt(true);\n                                if (end == 0)\n                                    deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                                else {\n                                    deform = Utils.newFloatArray(deformLength);\n                                    let start = input.readInt(true);\n                                    end += start;\n                                    if (scale == 1) {\n                                        for (let v = start; v < end; v++)\n                                            deform[v] = input.readFloat();\n                                    }\n                                    else {\n                                        for (let v = start; v < end; v++)\n                                            deform[v] = input.readFloat() * scale;\n                                    }\n                                    if (!weighted) {\n                                        for (let v = 0, vn = deform.length; v < vn; v++)\n                                            deform[v] += vertices[v];\n                                    }\n                                }\n                                timeline.setFrame(frame, time, deform);\n                                if (frame == frameLast)\n                                    break;\n                                let time2 = input.readFloat();\n                                switch (input.readByte()) {\n                                    case CURVE_STEPPED:\n                                        timeline.setStepped(frame);\n                                        break;\n                                    case CURVE_BEZIER:\n                                        setBezier(input, timeline, bezier++, frame, 0, time, time2, 0, 1, 1);\n                                }\n                                time = time2;\n                            }\n                            timelines.push(timeline);\n                            break;\n                        }\n                        case ATTACHMENT_SEQUENCE: {\n                            let timeline = new SequenceTimeline(frameCount, slotIndex, attachment);\n                            for (let frame = 0; frame < frameCount; frame++) {\n                                let time = input.readFloat();\n                                let modeAndIndex = input.readInt32();\n                                timeline.setFrame(frame, time, SequenceModeValues[modeAndIndex & 0xf], modeAndIndex >> 4, input.readFloat());\n                            }\n                            timelines.push(timeline);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // Draw order timeline.\n        let drawOrderCount = input.readInt(true);\n        if (drawOrderCount > 0) {\n            let timeline = new DrawOrderTimeline(drawOrderCount);\n            let slotCount = skeletonData.slots.length;\n            for (let i = 0; i < drawOrderCount; i++) {\n                let time = input.readFloat();\n                let offsetCount = input.readInt(true);\n                let drawOrder = Utils.newArray(slotCount, 0);\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    drawOrder[ii] = -1;\n                let unchanged = Utils.newArray(slotCount - offsetCount, 0);\n                let originalIndex = 0, unchangedIndex = 0;\n                for (let ii = 0; ii < offsetCount; ii++) {\n                    let slotIndex = input.readInt(true);\n                    // Collect unchanged items.\n                    while (originalIndex != slotIndex)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Set changed items.\n                    drawOrder[originalIndex + input.readInt(true)] = originalIndex++;\n                }\n                // Collect remaining unchanged items.\n                while (originalIndex < slotCount)\n                    unchanged[unchangedIndex++] = originalIndex++;\n                // Fill in unchanged items.\n                for (let ii = slotCount - 1; ii >= 0; ii--)\n                    if (drawOrder[ii] == -1)\n                        drawOrder[ii] = unchanged[--unchangedIndex];\n                timeline.setFrame(i, time, drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timeline.\n        let eventCount = input.readInt(true);\n        if (eventCount > 0) {\n            let timeline = new EventTimeline(eventCount);\n            for (let i = 0; i < eventCount; i++) {\n                let time = input.readFloat();\n                let eventData = skeletonData.events[input.readInt(true)];\n                let event = new Event(time, eventData);\n                event.intValue = input.readInt(false);\n                event.floatValue = input.readFloat();\n                event.stringValue = input.readString();\n                if (event.stringValue == null)\n                    event.stringValue = eventData.stringValue;\n                if (event.data.audioPath) {\n                    event.volume = input.readFloat();\n                    event.balance = input.readFloat();\n                }\n                timeline.setFrame(i, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        return new Animation(name, timelines, duration);\n    }\n}\nexport class BinaryInput {\n    strings;\n    index;\n    buffer;\n    constructor(data, strings = new Array(), index = 0, buffer = new DataView(data instanceof ArrayBuffer ? data : data.buffer)) {\n        this.strings = strings;\n        this.index = index;\n        this.buffer = buffer;\n    }\n    readByte() {\n        return this.buffer.getInt8(this.index++);\n    }\n    readUnsignedByte() {\n        return this.buffer.getUint8(this.index++);\n    }\n    readShort() {\n        let value = this.buffer.getInt16(this.index);\n        this.index += 2;\n        return value;\n    }\n    readInt32() {\n        let value = this.buffer.getInt32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readInt(optimizePositive) {\n        let b = this.readByte();\n        let result = b & 0x7F;\n        if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7F) << 7;\n            if ((b & 0x80) != 0) {\n                b = this.readByte();\n                result |= (b & 0x7F) << 14;\n                if ((b & 0x80) != 0) {\n                    b = this.readByte();\n                    result |= (b & 0x7F) << 21;\n                    if ((b & 0x80) != 0) {\n                        b = this.readByte();\n                        result |= (b & 0x7F) << 28;\n                    }\n                }\n            }\n        }\n        return optimizePositive ? result : ((result >>> 1) ^ -(result & 1));\n    }\n    readStringRef() {\n        let index = this.readInt(true);\n        return index == 0 ? null : this.strings[index - 1];\n    }\n    readString() {\n        let byteCount = this.readInt(true);\n        switch (byteCount) {\n            case 0:\n                return null;\n            case 1:\n                return \"\";\n        }\n        byteCount--;\n        let chars = \"\";\n        let charCount = 0;\n        for (let i = 0; i < byteCount;) {\n            let b = this.readUnsignedByte();\n            switch (b >> 4) {\n                case 12:\n                case 13:\n                    chars += String.fromCharCode(((b & 0x1F) << 6 | this.readByte() & 0x3F));\n                    i += 2;\n                    break;\n                case 14:\n                    chars += String.fromCharCode(((b & 0x0F) << 12 | (this.readByte() & 0x3F) << 6 | this.readByte() & 0x3F));\n                    i += 3;\n                    break;\n                default:\n                    chars += String.fromCharCode(b);\n                    i++;\n            }\n        }\n        return chars;\n    }\n    readFloat() {\n        let value = this.buffer.getFloat32(this.index);\n        this.index += 4;\n        return value;\n    }\n    readBoolean() {\n        return this.readByte() != 0;\n    }\n}\nclass LinkedMesh {\n    parent;\n    skinIndex;\n    slotIndex;\n    mesh;\n    inheritTimeline;\n    constructor(mesh, skinIndex, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skinIndex = skinIndex;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritTimeline = inheritDeform;\n    }\n}\nclass Vertices {\n    bones;\n    vertices;\n    length;\n    constructor(bones = null, vertices = null, length = 0) {\n        this.bones = bones;\n        this.vertices = vertices;\n        this.length = length;\n    }\n}\nvar AttachmentType;\n(function (AttachmentType) {\n    AttachmentType[AttachmentType[\"Region\"] = 0] = \"Region\";\n    AttachmentType[AttachmentType[\"BoundingBox\"] = 1] = \"BoundingBox\";\n    AttachmentType[AttachmentType[\"Mesh\"] = 2] = \"Mesh\";\n    AttachmentType[AttachmentType[\"LinkedMesh\"] = 3] = \"LinkedMesh\";\n    AttachmentType[AttachmentType[\"Path\"] = 4] = \"Path\";\n    AttachmentType[AttachmentType[\"Point\"] = 5] = \"Point\";\n    AttachmentType[AttachmentType[\"Clipping\"] = 6] = \"Clipping\";\n})(AttachmentType || (AttachmentType = {}));\nfunction readTimeline1(input, timeline, scale) {\n    let time = input.readFloat(), value = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), value2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value, value2, scale);\n        }\n        time = time2;\n        value = value2;\n    }\n    return timeline;\n}\nfunction readTimeline2(input, timeline, scale) {\n    let time = input.readFloat(), value1 = input.readFloat() * scale, value2 = input.readFloat() * scale;\n    for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        if (frame == frameLast)\n            break;\n        let time2 = input.readFloat(), nvalue1 = input.readFloat() * scale, nvalue2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n            case CURVE_STEPPED:\n                timeline.setStepped(frame);\n                break;\n            case CURVE_BEZIER:\n                setBezier(input, timeline, bezier++, frame, 0, time, time2, value1, nvalue1, scale);\n                setBezier(input, timeline, bezier++, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n    }\n    return timeline;\n}\nfunction setBezier(input, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    timeline.setBezier(bezier, frame, value, time1, value1, input.readFloat(), input.readFloat() * scale, input.readFloat(), input.readFloat() * scale, time2, value2);\n}\nconst BONE_ROTATE = 0;\nconst BONE_TRANSLATE = 1;\nconst BONE_TRANSLATEX = 2;\nconst BONE_TRANSLATEY = 3;\nconst BONE_SCALE = 4;\nconst BONE_SCALEX = 5;\nconst BONE_SCALEY = 6;\nconst BONE_SHEAR = 7;\nconst BONE_SHEARX = 8;\nconst BONE_SHEARY = 9;\nconst BONE_INHERIT = 10;\nconst SLOT_ATTACHMENT = 0;\nconst SLOT_RGBA = 1;\nconst SLOT_RGB = 2;\nconst SLOT_RGBA2 = 3;\nconst SLOT_RGB2 = 4;\nconst SLOT_ALPHA = 5;\nconst ATTACHMENT_DEFORM = 0;\nconst ATTACHMENT_SEQUENCE = 1;\nconst PATH_POSITION = 0;\nconst PATH_SPACING = 1;\nconst PATH_MIX = 2;\nconst PHYSICS_INERTIA = 0;\nconst PHYSICS_STRENGTH = 1;\nconst PHYSICS_DAMPING = 2;\nconst PHYSICS_MASS = 4;\nconst PHYSICS_WIND = 5;\nconst PHYSICS_GRAVITY = 6;\nconst PHYSICS_MIX = 7;\nconst PHYSICS_RESET = 8;\nconst CURVE_LINEAR = 0;\nconst CURVE_STEPPED = 1;\nconst CURVE_BEZIER = 2;\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureFilter, TextureWrap, TextureRegion } from \"./Texture.js\";\nimport { Utils } from \"./Utils.js\";\nexport class TextureAtlas {\n    pages = new Array();\n    regions = new Array();\n    constructor(atlasText) {\n        let reader = new TextureAtlasReader(atlasText);\n        let entry = new Array(4);\n        let pageFields = {};\n        pageFields[\"size\"] = (page) => {\n            page.width = parseInt(entry[1]);\n            page.height = parseInt(entry[2]);\n        };\n        pageFields[\"format\"] = () => {\n            // page.format = Format[tuple[0]]; we don't need format in WebGL\n        };\n        pageFields[\"filter\"] = (page) => {\n            page.minFilter = Utils.enumValue(TextureFilter, entry[1]);\n            page.magFilter = Utils.enumValue(TextureFilter, entry[2]);\n        };\n        pageFields[\"repeat\"] = (page) => {\n            if (entry[1].indexOf('x') != -1)\n                page.uWrap = TextureWrap.Repeat;\n            if (entry[1].indexOf('y') != -1)\n                page.vWrap = TextureWrap.Repeat;\n        };\n        pageFields[\"pma\"] = (page) => {\n            page.pma = entry[1] == \"true\";\n        };\n        var regionFields = {};\n        regionFields[\"xy\"] = (region) => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n        };\n        regionFields[\"size\"] = (region) => {\n            region.width = parseInt(entry[1]);\n            region.height = parseInt(entry[2]);\n        };\n        regionFields[\"bounds\"] = (region) => {\n            region.x = parseInt(entry[1]);\n            region.y = parseInt(entry[2]);\n            region.width = parseInt(entry[3]);\n            region.height = parseInt(entry[4]);\n        };\n        regionFields[\"offset\"] = (region) => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n        };\n        regionFields[\"orig\"] = (region) => {\n            region.originalWidth = parseInt(entry[1]);\n            region.originalHeight = parseInt(entry[2]);\n        };\n        regionFields[\"offsets\"] = (region) => {\n            region.offsetX = parseInt(entry[1]);\n            region.offsetY = parseInt(entry[2]);\n            region.originalWidth = parseInt(entry[3]);\n            region.originalHeight = parseInt(entry[4]);\n        };\n        regionFields[\"rotate\"] = (region) => {\n            let value = entry[1];\n            if (value == \"true\")\n                region.degrees = 90;\n            else if (value != \"false\")\n                region.degrees = parseInt(value);\n        };\n        regionFields[\"index\"] = (region) => {\n            region.index = parseInt(entry[1]);\n        };\n        let line = reader.readLine();\n        // Ignore empty lines before first entry.\n        while (line && line.trim().length == 0)\n            line = reader.readLine();\n        // Header entries.\n        while (true) {\n            if (!line || line.trim().length == 0)\n                break;\n            if (reader.readEntry(entry, line) == 0)\n                break; // Silently ignore all header fields.\n            line = reader.readLine();\n        }\n        // Page and region entries.\n        let page = null;\n        let names = null;\n        let values = null;\n        while (true) {\n            if (line === null)\n                break;\n            if (line.trim().length == 0) {\n                page = null;\n                line = reader.readLine();\n            }\n            else if (!page) {\n                page = new TextureAtlasPage(line.trim());\n                while (true) {\n                    if (reader.readEntry(entry, line = reader.readLine()) == 0)\n                        break;\n                    let field = pageFields[entry[0]];\n                    if (field)\n                        field(page);\n                }\n                this.pages.push(page);\n            }\n            else {\n                let region = new TextureAtlasRegion(page, line);\n                while (true) {\n                    let count = reader.readEntry(entry, line = reader.readLine());\n                    if (count == 0)\n                        break;\n                    let field = regionFields[entry[0]];\n                    if (field)\n                        field(region);\n                    else {\n                        if (!names)\n                            names = [];\n                        if (!values)\n                            values = [];\n                        names.push(entry[0]);\n                        let entryValues = [];\n                        for (let i = 0; i < count; i++)\n                            entryValues.push(parseInt(entry[i + 1]));\n                        values.push(entryValues);\n                    }\n                }\n                if (region.originalWidth == 0 && region.originalHeight == 0) {\n                    region.originalWidth = region.width;\n                    region.originalHeight = region.height;\n                }\n                if (names && names.length > 0 && values && values.length > 0) {\n                    region.names = names;\n                    region.values = values;\n                    names = null;\n                    values = null;\n                }\n                region.u = region.x / page.width;\n                region.v = region.y / page.height;\n                if (region.degrees == 90) {\n                    region.u2 = (region.x + region.height) / page.width;\n                    region.v2 = (region.y + region.width) / page.height;\n                }\n                else {\n                    region.u2 = (region.x + region.width) / page.width;\n                    region.v2 = (region.y + region.height) / page.height;\n                }\n                this.regions.push(region);\n            }\n        }\n    }\n    findRegion(name) {\n        for (let i = 0; i < this.regions.length; i++) {\n            if (this.regions[i].name == name) {\n                return this.regions[i];\n            }\n        }\n        return null;\n    }\n    setTextures(assetManager, pathPrefix = \"\") {\n        for (let page of this.pages)\n            page.setTexture(assetManager.get(pathPrefix + page.name));\n    }\n    dispose() {\n        for (let i = 0; i < this.pages.length; i++) {\n            this.pages[i].texture?.dispose();\n        }\n    }\n}\nclass TextureAtlasReader {\n    lines;\n    index = 0;\n    constructor(text) {\n        this.lines = text.split(/\\r\\n|\\r|\\n/);\n    }\n    readLine() {\n        if (this.index >= this.lines.length)\n            return null;\n        return this.lines[this.index++];\n    }\n    readEntry(entry, line) {\n        if (!line)\n            return 0;\n        line = line.trim();\n        if (line.length == 0)\n            return 0;\n        let colon = line.indexOf(':');\n        if (colon == -1)\n            return 0;\n        entry[0] = line.substr(0, colon).trim();\n        for (let i = 1, lastMatch = colon + 1;; i++) {\n            let comma = line.indexOf(',', lastMatch);\n            if (comma == -1) {\n                entry[i] = line.substr(lastMatch).trim();\n                return i;\n            }\n            entry[i] = line.substr(lastMatch, comma - lastMatch).trim();\n            lastMatch = comma + 1;\n            if (i == 4)\n                return 4;\n        }\n    }\n}\nexport class TextureAtlasPage {\n    name;\n    minFilter = TextureFilter.Nearest;\n    magFilter = TextureFilter.Nearest;\n    uWrap = TextureWrap.ClampToEdge;\n    vWrap = TextureWrap.ClampToEdge;\n    texture = null;\n    width = 0;\n    height = 0;\n    pma = false;\n    regions = new Array();\n    constructor(name) {\n        this.name = name;\n    }\n    setTexture(texture) {\n        this.texture = texture;\n        texture.setFilters(this.minFilter, this.magFilter);\n        texture.setWraps(this.uWrap, this.vWrap);\n        for (let region of this.regions)\n            region.texture = texture;\n    }\n}\nexport class TextureAtlasRegion extends TextureRegion {\n    page;\n    name;\n    x = 0;\n    y = 0;\n    offsetX = 0;\n    offsetY = 0;\n    originalWidth = 0;\n    originalHeight = 0;\n    index = 0;\n    degrees = 0;\n    names = null;\n    values = null;\n    constructor(page, name) {\n        super();\n        this.page = page;\n        this.name = name;\n        page.regions.push(this);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dHVyZUF0bGFzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1RleHR1cmVBdGxhcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQVcsYUFBYSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ2xGLE9BQU8sRUFBYyxLQUFLLEVBQWEsTUFBTSxZQUFZLENBQUM7QUFFMUQsTUFBTSxPQUFPLFlBQVk7SUFDeEIsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFvQixDQUFDO0lBQ3RDLE9BQU8sR0FBRyxJQUFJLEtBQUssRUFBc0IsQ0FBQztJQUUxQyxZQUFhLFNBQWlCO1FBQzdCLElBQUksTUFBTSxHQUFHLElBQUksa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDL0MsSUFBSSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQVMsQ0FBQyxDQUFDLENBQUM7UUFFakMsSUFBSSxVQUFVLEdBQWdELEVBQUUsQ0FBQztRQUNqRSxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFzQixFQUFFLEVBQUU7WUFDL0MsSUFBSyxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakMsSUFBSyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkMsQ0FBQyxDQUFDO1FBQ0YsVUFBVSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEdBQUcsRUFBRTtZQUMzQixnRUFBZ0U7UUFDakUsQ0FBQyxDQUFDO1FBQ0YsVUFBVSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBc0IsRUFBRSxFQUFFO1lBQ2pELElBQUssQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0QsSUFBSyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1RCxDQUFDLENBQUM7UUFDRixVQUFVLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFzQixFQUFFLEVBQUU7WUFDakQsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFBRSxJQUFLLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUM7WUFDbEUsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFBRSxJQUFLLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUM7UUFDbkUsQ0FBQyxDQUFDO1FBQ0YsVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBc0IsRUFBRSxFQUFFO1lBQzlDLElBQUssQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQztRQUNoQyxDQUFDLENBQUM7UUFFRixJQUFJLFlBQVksR0FBb0QsRUFBRSxDQUFDO1FBQ3ZFLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQTBCLEVBQUUsRUFBRTtZQUNuRCxNQUFNLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QixNQUFNLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQUM7UUFDRixZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUEwQixFQUFFLEVBQUU7WUFDckQsTUFBTSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEMsTUFBTSxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEMsQ0FBQyxDQUFDO1FBQ0YsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBMEIsRUFBRSxFQUFFO1lBQ3ZELE1BQU0sQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLE1BQU0sQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLENBQUMsQ0FBQztRQUNGLFlBQVksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQTBCLEVBQUUsRUFBRTtZQUN2RCxNQUFNLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQyxNQUFNLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUM7UUFDRixZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUEwQixFQUFFLEVBQUU7WUFDckQsTUFBTSxDQUFDLGFBQWEsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUMsTUFBTSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUMsQ0FBQyxDQUFDO1FBQ0YsWUFBWSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBMEIsRUFBRSxFQUFFO1lBQ3hELE1BQU0sQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFD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QUFDLFdBQVcsQ0FBQztJQUM3QyxLQUFLLEdBQWdCLFdBQVcsQ0FBQyxXQUFXLENBQUM7SUFDN0MsT0FBTyxHQUFtQixJQUFJLENBQUM7SUFDL0IsS0FBSyxHQUFXLENBQUMsQ0FBQztJQUNsQixNQUFNLEdBQVcsQ0FBQyxDQUFDO0lBQ25CLEdBQUcsR0FBWSxLQUFLLENBQUM7SUFDckIsT0FBTyxHQUFHLElBQUksS0FBSyxFQUFzQixDQUFDO0lBRTFDLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0lBRUQsVUFBVSxDQUFFLE9BQWdCO1FBQzNCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDbkQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QyxLQUFLLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPO1lBQzlCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQzNCLENBQUM7Q0FDRDtBQUVELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxhQUFhO0lBQ3BELElBQUksQ0FBbUI7SUFDdkIsSUFBSSxDQUFTO0lBQ2IsQ0FBQyxHQUFXLENBQUMsQ0FBQztJQUNkLENBQUMsR0FBVyxDQUFDLENBQUM7SUFDZCxPQUFPLEdBQVcsQ0FBQyxDQUFDO0lBQ3BCLE9BQU8sR0FBVyxDQUFDLENBQUM7SUFDcEIsYUFBYSxHQUFXLENBQUMsQ0FBQztJQUMxQixjQUFjLEdBQVcsQ0FBQyxDQUFDO0lBQzNCLEtBQUssR0FBVyxDQUFDLENBQUM7SUFDbEIsT0FBTyxHQUFXLENBQUMsQ0FBQztJQUNwQixLQUFLLEdBQW9CLElBQUksQ0FBQztJQUM5QixNQUFNLEdBQXNCLElBQUksQ0FBQztJQUVqQyxZQUFhLElBQXNCLEVBQUUsSUFBWTtRQUNoRCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlasRegion } from \"../TextureAtlas.js\";\nimport { Color, Utils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment that displays a textured mesh. A mesh has hull vertices and internal vertices within the hull. Holes are not\n * supported. Each vertex has UVs (texture coordinates) and triangles are used to map an image on to the mesh.\n *\n * See [Mesh attachments](http://esotericsoftware.com/spine-meshes) in the Spine User Guide. */\nexport class MeshAttachment extends VertexAttachment {\n    region = null;\n    /** The name of the texture region for this attachment. */\n    path;\n    /** The UV pair for each vertex, normalized within the texture region. */\n    regionUVs = [];\n    /** The UV pair for each vertex, normalized within the entire texture.\n     *\n     * See {@link #updateUVs}. */\n    uvs = [];\n    /** Triplets of vertex indices which describe the mesh's triangulation. */\n    triangles = [];\n    /** The color to tint the mesh. */\n    color = new Color(1, 1, 1, 1);\n    /** The width of the mesh's image. Available only when nonessential data was exported. */\n    width = 0;\n    /** The height of the mesh's image. Available only when nonessential data was exported. */\n    height = 0;\n    /** The number of entries at the beginning of {@link #vertices} that make up the mesh hull. */\n    hullLength = 0;\n    /** Vertex index pairs describing edges for controling triangulation. Mesh triangles will never cross edges. Only available if\n     * nonessential data was exported. Triangulation is not performed at runtime. */\n    edges = [];\n    parentMesh = null;\n    sequence = null;\n    tempColor = new Color(0, 0, 0, 0);\n    constructor(name, path) {\n        super(name);\n        this.path = path;\n    }\n    /** Calculates {@link #uvs} using the {@link #regionUVs} and region. Must be called if the region, the region's properties, or\n     * the {@link #regionUVs} are changed. */\n    updateRegion() {\n        if (!this.region)\n            throw new Error(\"Region not set.\");\n        let regionUVs = this.regionUVs;\n        if (!this.uvs || this.uvs.length != regionUVs.length)\n            this.uvs = Utils.newFloatArray(regionUVs.length);\n        let uvs = this.uvs;\n        let n = this.uvs.length;\n        let u = this.region.u, v = this.region.v, width = 0, height = 0;\n        if (this.region instanceof TextureAtlasRegion) {\n            let region = this.region, page = region.page;\n            let textureWidth = page.width, textureHeight = page.height;\n            switch (region.degrees) {\n                case 90:\n                    u -= (region.originalHeight - region.offsetY - region.height) / textureWidth;\n                    v -= (region.originalWidth - region.offsetX - region.width) / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + regionUVs[i + 1] * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i]) * height;\n                    }\n                    return;\n                case 180:\n                    u -= (region.originalWidth - region.offsetX - region.width) / textureWidth;\n                    v -= region.offsetY / textureHeight;\n                    width = region.originalWidth / textureWidth;\n                    height = region.originalHeight / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i]) * width;\n                        uvs[i + 1] = v + (1 - regionUVs[i + 1]) * height;\n                    }\n                    return;\n                case 270:\n                    u -= region.offsetY / textureWidth;\n                    v -= region.offsetX / textureHeight;\n                    width = region.originalHeight / textureWidth;\n                    height = region.originalWidth / textureHeight;\n                    for (let i = 0; i < n; i += 2) {\n                        uvs[i] = u + (1 - regionUVs[i + 1]) * width;\n                        uvs[i + 1] = v + regionUVs[i] * height;\n                    }\n                    return;\n            }\n            u -= region.offsetX / textureWidth;\n            v -= (region.originalHeight - region.offsetY - region.height) / textureHeight;\n            width = region.originalWidth / textureWidth;\n            height = region.originalHeight / textureHeight;\n        }\n        else if (!this.region) {\n            u = v = 0;\n            width = height = 1;\n        }\n        else {\n            width = this.region.u2 - u;\n            height = this.region.v2 - v;\n        }\n        for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + regionUVs[i] * width;\n            uvs[i + 1] = v + regionUVs[i + 1] * height;\n        }\n    }\n    /** The parent mesh if this is a linked mesh, else null. A linked mesh shares the {@link #bones}, {@link #vertices},\n     * {@link #regionUVs}, {@link #triangles}, {@link #hullLength}, {@link #edges}, {@link #width}, and {@link #height} with the\n     * parent mesh, but may have a different {@link #name} or {@link #path} (and therefore a different texture). */\n    getParentMesh() {\n        return this.parentMesh;\n    }\n    /** @param parentMesh May be null. */\n    setParentMesh(parentMesh) {\n        this.parentMesh = parentMesh;\n        if (parentMesh) {\n            this.bones = parentMesh.bones;\n            this.vertices = parentMesh.vertices;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n            this.regionUVs = parentMesh.regionUVs;\n            this.triangles = parentMesh.triangles;\n            this.hullLength = parentMesh.hullLength;\n            this.worldVerticesLength = parentMesh.worldVerticesLength;\n        }\n    }\n    copy() {\n        if (this.parentMesh)\n            return this.newLinkedMesh();\n        let copy = new MeshAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.color.setFromColor(this.color);\n        this.copyTo(copy);\n        copy.regionUVs = new Array(this.regionUVs.length);\n        Utils.arrayCopy(this.regionUVs, 0, copy.regionUVs, 0, this.regionUVs.length);\n        copy.uvs = new Array(this.uvs.length);\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, this.uvs.length);\n        copy.triangles = new Array(this.triangles.length);\n        Utils.arrayCopy(this.triangles, 0, copy.triangles, 0, this.triangles.length);\n        copy.hullLength = this.hullLength;\n        copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n        // Nonessential.\n        if (this.edges) {\n            copy.edges = new Array(this.edges.length);\n            Utils.arrayCopy(this.edges, 0, copy.edges, 0, this.edges.length);\n        }\n        copy.width = this.width;\n        copy.height = this.height;\n        return copy;\n    }\n    computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n        if (this.sequence != null)\n            this.sequence.apply(slot, this);\n        super.computeWorldVertices(slot, start, count, worldVertices, offset, stride);\n    }\n    /** Returns a new mesh with the {@link #parentMesh} set to this mesh's parent mesh, if any, else to this mesh. **/\n    newLinkedMesh() {\n        let copy = new MeshAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.color.setFromColor(this.color);\n        copy.timelineAttachment = this.timelineAttachment;\n        copy.setParentMesh(this.parentMesh ? this.parentMesh : this);\n        if (copy.region != null)\n            copy.updateRegion();\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, Utils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment whose vertices make up a composite Bezier curve.\n *\n * See {@link PathConstraint} and [Paths](http://esotericsoftware.com/spine-paths) in the Spine User Guide. */\nexport class PathAttachment extends VertexAttachment {\n    /** The lengths along the path in the setup pose from the start of the path to the end of each Bezier curve. */\n    lengths = [];\n    /** If true, the start and end knots are connected. */\n    closed = false;\n    /** If true, additional calculations are performed to make calculating positions along the path more accurate. If false, fewer\n     * calculations are performed but calculating positions along the path is less accurate. */\n    constantSpeed = false;\n    /** The color of the path as it was in Spine. Available only when nonessential data was exported. Paths are not usually\n     * rendered at runtime. */\n    color = new Color(1, 1, 1, 1);\n    constructor(name) {\n        super(name);\n    }\n    copy() {\n        let copy = new PathAttachment(this.name);\n        this.copyTo(copy);\n        copy.lengths = new Array(this.lengths.length);\n        Utils.arrayCopy(this.lengths, 0, copy.lengths, 0, this.lengths.length);\n        copy.closed = closed;\n        copy.constantSpeed = this.constantSpeed;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF0aEF0dGFjaG1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvUGF0aEF0dGFjaG1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBYyxNQUFNLGlCQUFpQixDQUFDO0FBRS9EOzs4R0FFOEc7QUFDOUcsTUFBTSxPQUFPLGNBQWUsU0FBUSxnQkFBZ0I7SUFFbkQsK0dBQStHO0lBQy9HLE9BQU8sR0FBa0IsRUFBRSxDQUFDO0lBRTVCLHNEQUFzRDtJQUN0RCxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBRWY7K0ZBQzJGO0lBQzNGLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFFdEI7OEJBQzBCO0lBQzFCLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUU5QixZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxDQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment which is a single point and a rotation. This can be used to spawn projectiles, particles, etc. A bone can be\n * used in similar ways, but a PointAttachment is slightly less expensive to compute and can be hidden, shown, and placed in a\n * skin.\n *\n * See [Point Attachments](http://esotericsoftware.com/spine-point-attachments) in the Spine User Guide. */\nexport class PointAttachment extends VertexAttachment {\n    x = 0;\n    y = 0;\n    rotation = 0;\n    /** The color of the point attachment as it was in Spine. Available only when nonessential data was exported. Point attachments\n     * are not usually rendered at runtime. */\n    color = new Color(0.38, 0.94, 0, 1);\n    constructor(name) {\n        super(name);\n    }\n    computeWorldPosition(bone, point) {\n        point.x = this.x * bone.a + this.y * bone.b + bone.worldX;\n        point.y = this.x * bone.c + this.y * bone.d + bone.worldY;\n        return point;\n    }\n    computeWorldRotation(bone) {\n        const r = this.rotation * MathUtils.degRad, cos = Math.cos(r), sin = Math.sin(r);\n        const x = cos * bone.a + sin * bone.b;\n        const y = cos * bone.c + sin * bone.d;\n        return MathUtils.atan2Deg(y, x);\n    }\n    copy() {\n        let copy = new PointAttachment(this.name);\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.rotation = this.rotation;\n        copy.color.setFromColor(this.color);\n        return copy;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRBdHRhY2htZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL1BvaW50QXR0YWNobWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLEtBQUssRUFBVyxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFjLE1BQU0saUJBQWlCLENBQUM7QUFFL0Q7Ozs7MkdBSTJHO0FBQzNHLE1BQU0sT0FBTyxlQUFnQixTQUFRLGdCQUFnQjtJQUNwRCxDQUFDLEdBQVcsQ0FBQyxDQUFDO0lBQ2QsQ0FBQyxHQUFXLENBQUMsQ0FBQztJQUNkLFFBQVEsR0FBVyxDQUFDLENBQUM7SUFFckI7OENBQzBDO0lBQzFDLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUVwQyxZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELG9CQUFvQixDQUFFLElBQVUsRUFBRSxLQUFjO1FBQy9DLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFELEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFELE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVELG9CQUFvQixDQUFFLElBQVU7UUFDL0IsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pGLE1BQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLE9BQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELElBQUk7UUFDSCxJQUFJLElBQUksR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color, MathUtils, Utils } from \"../Utils.js\";\nimport { Attachment } from \"./Attachment.js\";\n/** An attachment that displays a textured quadrilateral.\n *\n * See [Region attachments](http://esotericsoftware.com/spine-regions) in the Spine User Guide. */\nexport class RegionAttachment extends Attachment {\n    /** The local x translation. */\n    x = 0;\n    /** The local y translation. */\n    y = 0;\n    /** The local scaleX. */\n    scaleX = 1;\n    /** The local scaleY. */\n    scaleY = 1;\n    /** The local rotation. */\n    rotation = 0;\n    /** The width of the region attachment in Spine. */\n    width = 0;\n    /** The height of the region attachment in Spine. */\n    height = 0;\n    /** The color to tint the region attachment. */\n    color = new Color(1, 1, 1, 1);\n    /** The name of the texture region for this attachment. */\n    path;\n    region = null;\n    sequence = null;\n    /** For each of the 4 vertices, a pair of <code>x,y</code> values that is the local position of the vertex.\n     *\n     * See {@link #updateOffset()}. */\n    offset = Utils.newFloatArray(8);\n    uvs = Utils.newFloatArray(8);\n    tempColor = new Color(1, 1, 1, 1);\n    constructor(name, path) {\n        super(name);\n        this.path = path;\n    }\n    /** Calculates the {@link #offset} using the region settings. Must be called after changing region settings. */\n    updateRegion() {\n        if (!this.region)\n            throw new Error(\"Region not set.\");\n        let region = this.region;\n        let uvs = this.uvs;\n        if (region == null) {\n            uvs[0] = 0;\n            uvs[1] = 0;\n            uvs[2] = 0;\n            uvs[3] = 1;\n            uvs[4] = 1;\n            uvs[5] = 1;\n            uvs[6] = 1;\n            uvs[7] = 0;\n            return;\n        }\n        let regionScaleX = this.width / this.region.originalWidth * this.scaleX;\n        let regionScaleY = this.height / this.region.originalHeight * this.scaleY;\n        let localX = -this.width / 2 * this.scaleX + this.region.offsetX * regionScaleX;\n        let localY = -this.height / 2 * this.scaleY + this.region.offsetY * regionScaleY;\n        let localX2 = localX + this.region.width * regionScaleX;\n        let localY2 = localY + this.region.height * regionScaleY;\n        let radians = this.rotation * MathUtils.degRad;\n        let cos = Math.cos(radians);\n        let sin = Math.sin(radians);\n        let x = this.x, y = this.y;\n        let localXCos = localX * cos + x;\n        let localXSin = localX * sin;\n        let localYCos = localY * cos + y;\n        let localYSin = localY * sin;\n        let localX2Cos = localX2 * cos + x;\n        let localX2Sin = localX2 * sin;\n        let localY2Cos = localY2 * cos + y;\n        let localY2Sin = localY2 * sin;\n        let offset = this.offset;\n        offset[0] = localXCos - localYSin;\n        offset[1] = localYCos + localXSin;\n        offset[2] = localXCos - localY2Sin;\n        offset[3] = localY2Cos + localXSin;\n        offset[4] = localX2Cos - localY2Sin;\n        offset[5] = localY2Cos + localX2Sin;\n        offset[6] = localX2Cos - localYSin;\n        offset[7] = localYCos + localX2Sin;\n        if (region.degrees == 90) {\n            uvs[0] = region.u2;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v2;\n            uvs[4] = region.u;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v;\n        }\n        else {\n            uvs[0] = region.u;\n            uvs[1] = region.v2;\n            uvs[2] = region.u;\n            uvs[3] = region.v;\n            uvs[4] = region.u2;\n            uvs[5] = region.v;\n            uvs[6] = region.u2;\n            uvs[7] = region.v2;\n        }\n    }\n    /** Transforms the attachment's four vertices to world coordinates. If the attachment has a {@link #sequence}, the region may\n     * be changed.\n     * <p>\n     * See <a href=\"http://esotericsoftware.com/spine-runtime-skeletons#World-transforms\">World transforms</a> in the Spine\n     * Runtimes Guide.\n     * @param worldVertices The output world vertices. Must have a length >= <code>offset</code> + 8.\n     * @param offset The <code>worldVertices</code> index to begin writing values.\n     * @param stride The number of <code>worldVertices</code> entries between the value pairs written. */\n    computeWorldVertices(slot, worldVertices, offset, stride) {\n        if (this.sequence != null)\n            this.sequence.apply(slot, this);\n        let bone = slot.bone;\n        let vertexOffset = this.offset;\n        let x = bone.worldX, y = bone.worldY;\n        let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n        let offsetX = 0, offsetY = 0;\n        offsetX = vertexOffset[0];\n        offsetY = vertexOffset[1];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // br\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[2];\n        offsetY = vertexOffset[3];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // bl\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[4];\n        offsetY = vertexOffset[5];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ul\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n        offset += stride;\n        offsetX = vertexOffset[6];\n        offsetY = vertexOffset[7];\n        worldVertices[offset] = offsetX * a + offsetY * b + x; // ur\n        worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    }\n    copy() {\n        let copy = new RegionAttachment(this.name, this.path);\n        copy.region = this.region;\n        copy.x = this.x;\n        copy.y = this.y;\n        copy.scaleX = this.scaleX;\n        copy.scaleY = this.scaleY;\n        copy.rotation = this.rotation;\n        copy.width = this.width;\n        copy.height = this.height;\n        Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, 8);\n        Utils.arrayCopy(this.offset, 0, copy.offset, 0, 8);\n        copy.color.setFromColor(this.color);\n        copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n        return copy;\n    }\n    static X1 = 0;\n    static Y1 = 1;\n    static C1R = 2;\n    static C1G = 3;\n    static C1B = 4;\n    static C1A = 5;\n    static U1 = 6;\n    static V1 = 7;\n    static X2 = 8;\n    static Y2 = 9;\n    static C2R = 10;\n    static C2G = 11;\n    static C2B = 12;\n    static C2A = 13;\n    static U2 = 14;\n    static V2 = 15;\n    static X3 = 16;\n    static Y3 = 17;\n    static C3R = 18;\n    static C3G = 19;\n    static C3B = 20;\n    static C3A = 21;\n    static U3 = 22;\n    static V3 = 23;\n    static X4 = 24;\n    static Y4 = 25;\n    static C4R = 26;\n    static C4G = 27;\n    static C4B = 28;\n    static C4A = 29;\n    static U4 = 30;\n    static V4 = 31;\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment.js\";\nimport { ClippingAttachment } from \"./attachments/ClippingAttachment.js\";\nimport { MeshAttachment } from \"./attachments/MeshAttachment.js\";\nimport { PathAttachment } from \"./attachments/PathAttachment.js\";\nimport { PointAttachment } from \"./attachments/PointAttachment.js\";\nimport { RegionAttachment } from \"./attachments/RegionAttachment.js\";\n/** An {@link AttachmentLoader} that configures attachments using texture regions from an {@link TextureAtlas}.\n *\n * See [Loading skeleton data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the\n * Spine Runtimes Guide. */\nexport class AtlasAttachmentLoader {\n    atlas;\n    constructor(atlas) {\n        this.atlas = atlas;\n    }\n    loadSequence(name, basePath, sequence) {\n        let regions = sequence.regions;\n        for (let i = 0, n = regions.length; i < n; i++) {\n            let path = sequence.getPath(basePath, i);\n            let region = this.atlas.findRegion(path);\n            if (region == null)\n                throw new Error(\"Region not found in atlas: \" + path + \" (sequence: \" + name + \")\");\n            regions[i] = region;\n        }\n    }\n    newRegionAttachment(skin, name, path, sequence) {\n        let attachment = new RegionAttachment(name, path);\n        if (sequence != null) {\n            this.loadSequence(name, path, sequence);\n        }\n        else {\n            let region = this.atlas.findRegion(path);\n            if (!region)\n                throw new Error(\"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\");\n            attachment.region = region;\n        }\n        return attachment;\n    }\n    newMeshAttachment(skin, name, path, sequence) {\n        let attachment = new MeshAttachment(name, path);\n        if (sequence != null) {\n            this.loadSequence(name, path, sequence);\n        }\n        else {\n            let region = this.atlas.findRegion(path);\n            if (!region)\n                throw new Error(\"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\");\n            attachment.region = region;\n        }\n        return attachment;\n    }\n    newBoundingBoxAttachment(skin, name) {\n        return new BoundingBoxAttachment(name);\n    }\n    newPathAttachment(skin, name) {\n        return new PathAttachment(name);\n    }\n    newPointAttachment(skin, name) {\n        return new PointAttachment(name);\n    }\n    newClippingAttachment(skin, name) {\n        return new ClippingAttachment(name);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXRsYXNBdHRhY2htZW50TG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0F0bGFzQXR0YWNobWVudExvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDekUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFLckU7OzsyQkFHMkI7QUFDM0IsTUFBTSxPQUFPLHFCQUFxQjtJQUNqQyxLQUFLLENBQWU7SUFFcEIsWUFBYSxLQUFtQjtRQUMvQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQsWUFBWSxDQUFFLElBQVksRUFBRSxRQUFnQixFQUFFLFFBQWtCO1FBQy9ELElBQUksT0FBTyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUM7UUFDL0IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQyxJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN6QyxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLE1BQU0sSUFBSSxJQUFJO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxHQUFHLGNBQWMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDeEcsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQztTQUNwQjtJQUNGLENBQUM7SUFFRCxtQkFBbUIsQ0FBRSxJQUFVLEVBQUUsSUFBWSxFQUFFLElBQVksRUFBRSxRQUFrQjtRQUM5RSxJQUFJLFVBQVUsR0FBRyxJQUFJLGdCQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRCxJQUFJLFFBQVEsSUFBSSxJQUFJLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3hDO2FBQU07WUFDTixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLENBQUMsTUFBTTtnQkFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixHQUFHLElBQUksR0FBRyx1QkFBdUIsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7WUFDMUcsVUFBVSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7U0FDM0I7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNuQixDQUFDO0lBRUQsaUJBQWlCLENBQUUsSUFBVSxFQUFFLElBQVksRUFBRSxJQUFZLEVBQUUsUUFBa0I7UUFDNUUsSUFBSSxVQUFVLEdBQUcsSUFBSSxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksUUFBUSxJQUFJLElBQUksRUFBRTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDeEM7YUFBTTtZQUNOLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxNQUFNO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxHQUFHLHFCQUFxQixHQUFHLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztZQUN4RyxVQUFVLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUMzQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ25CLENBQUM7SUFFRCx3QkFBd0IsQ0FBRSxJQUFVLEVBQUUsSUFBWTtRQUNqRCxPQUFPLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELGlCQUFpQixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQzFDLE9BQU8sSUFBSSxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELGtCQUFrQixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQzNDLE9BQU8sSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELHFCQUFxQixDQUFFLElBQVUsRUFBRSxJQUFZO1FBQzlDLE9BQU8sSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Inherit } from \"./BoneData.js\";\nimport { MathUtils } from \"./Utils.js\";\n/** Stores a bone's current pose.\n *\n * A bone has a local transform which is used to compute its world transform. A bone also has an applied transform, which is a\n * local transform that can be applied to compute the world transform. The local transform and applied transform may differ if a\n * constraint or application code modifies the world transform after it was computed from the local transform. */\nexport class Bone {\n    /** The bone's setup pose data. */\n    data;\n    /** The skeleton this bone belongs to. */\n    skeleton;\n    /** The parent bone, or null if this is the root bone. */\n    parent = null;\n    /** The immediate children of this bone. */\n    children = new Array();\n    /** The local x translation. */\n    x = 0;\n    /** The local y translation. */\n    y = 0;\n    /** The local rotation in degrees, counter clockwise. */\n    rotation = 0;\n    /** The local scaleX. */\n    scaleX = 0;\n    /** The local scaleY. */\n    scaleY = 0;\n    /** The local shearX. */\n    shearX = 0;\n    /** The local shearY. */\n    shearY = 0;\n    /** The applied local x translation. */\n    ax = 0;\n    /** The applied local y translation. */\n    ay = 0;\n    /** The applied local rotation in degrees, counter clockwise. */\n    arotation = 0;\n    /** The applied local scaleX. */\n    ascaleX = 0;\n    /** The applied local scaleY. */\n    ascaleY = 0;\n    /** The applied local shearX. */\n    ashearX = 0;\n    /** The applied local shearY. */\n    ashearY = 0;\n    /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    a = 0;\n    /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    b = 0;\n    /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    c = 0;\n    /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n    d = 0;\n    /** The world X position. If changed, {@link #updateAppliedTransform()} should be called. */\n    worldY = 0;\n    /** The world Y position. If changed, {@link #updateAppliedTransform()} should be called. */\n    worldX = 0;\n    inherit = Inherit.Normal;\n    sorted = false;\n    active = false;\n    /** @param parent May be null. */\n    constructor(data, skeleton, parent) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.skeleton = skeleton;\n        this.parent = parent;\n        this.setToSetupPose();\n    }\n    /** Returns false when the bone has not been computed because {@link BoneData#skinRequired} is true and the\n      * {@link Skeleton#skin active skin} does not {@link Skin#bones contain} this bone. */\n    isActive() {\n        return this.active;\n    }\n    /** Computes the world transform using the parent bone and this bone's local applied transform. */\n    update(physics) {\n        this.updateWorldTransformWith(this.ax, this.ay, this.arotation, this.ascaleX, this.ascaleY, this.ashearX, this.ashearY);\n    }\n    /** Computes the world transform using the parent bone and this bone's local transform.\n     *\n     * See {@link #updateWorldTransformWith()}. */\n    updateWorldTransform() {\n        this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\n    }\n    /** Computes the world transform using the parent bone and the specified local transform. The applied transform is set to the\n     * specified local transform. Child bones are not updated.\n     *\n     * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\n     * Runtimes Guide. */\n    updateWorldTransformWith(x, y, rotation, scaleX, scaleY, shearX, shearY) {\n        this.ax = x;\n        this.ay = y;\n        this.arotation = rotation;\n        this.ascaleX = scaleX;\n        this.ascaleY = scaleY;\n        this.ashearX = shearX;\n        this.ashearY = shearY;\n        let parent = this.parent;\n        if (!parent) { // Root bone.\n            let skeleton = this.skeleton;\n            const sx = skeleton.scaleX, sy = skeleton.scaleY;\n            const rx = (rotation + shearX) * MathUtils.degRad;\n            const ry = (rotation + 90 + shearY) * MathUtils.degRad;\n            this.a = Math.cos(rx) * scaleX * sx;\n            this.b = Math.cos(ry) * scaleY * sx;\n            this.c = Math.sin(rx) * scaleX * sy;\n            this.d = Math.sin(ry) * scaleY * sy;\n            this.worldX = x * sx + skeleton.x;\n            this.worldY = y * sy + skeleton.y;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        this.worldX = pa * x + pb * y + parent.worldX;\n        this.worldY = pc * x + pd * y + parent.worldY;\n        switch (this.inherit) {\n            case Inherit.Normal: {\n                const rx = (rotation + shearX) * MathUtils.degRad;\n                const ry = (rotation + 90 + shearY) * MathUtils.degRad;\n                const la = Math.cos(rx) * scaleX;\n                const lb = Math.cos(ry) * scaleY;\n                const lc = Math.sin(rx) * scaleX;\n                const ld = Math.sin(ry) * scaleY;\n                this.a = pa * la + pb * lc;\n                this.b = pa * lb + pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                return;\n            }\n            case Inherit.OnlyTranslation: {\n                const rx = (rotation + shearX) * MathUtils.degRad;\n                const ry = (rotation + 90 + shearY) * MathUtils.degRad;\n                this.a = Math.cos(rx) * scaleX;\n                this.b = Math.cos(ry) * scaleY;\n                this.c = Math.sin(rx) * scaleX;\n                this.d = Math.sin(ry) * scaleY;\n                break;\n            }\n            case Inherit.NoRotationOrReflection: {\n                let s = pa * pa + pc * pc;\n                let prx = 0;\n                if (s > 0.0001) {\n                    s = Math.abs(pa * pd - pb * pc) / s;\n                    pa /= this.skeleton.scaleX;\n                    pc /= this.skeleton.scaleY;\n                    pb = pc * s;\n                    pd = pa * s;\n                    prx = Math.atan2(pc, pa) * MathUtils.radDeg;\n                }\n                else {\n                    pa = 0;\n                    pc = 0;\n                    prx = 90 - Math.atan2(pd, pb) * MathUtils.radDeg;\n                }\n                const rx = (rotation + shearX - prx) * MathUtils.degRad;\n                const ry = (rotation + shearY - prx + 90) * MathUtils.degRad;\n                const la = Math.cos(rx) * scaleX;\n                const lb = Math.cos(ry) * scaleY;\n                const lc = Math.sin(rx) * scaleX;\n                const ld = Math.sin(ry) * scaleY;\n                this.a = pa * la - pb * lc;\n                this.b = pa * lb - pb * ld;\n                this.c = pc * la + pd * lc;\n                this.d = pc * lb + pd * ld;\n                break;\n            }\n            case Inherit.NoScale:\n            case Inherit.NoScaleOrReflection: {\n                rotation *= MathUtils.degRad;\n                const cos = Math.cos(rotation), sin = Math.sin(rotation);\n                let za = (pa * cos + pb * sin) / this.skeleton.scaleX;\n                let zc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n                let s = Math.sqrt(za * za + zc * zc);\n                if (s > 0.00001)\n                    s = 1 / s;\n                za *= s;\n                zc *= s;\n                s = Math.sqrt(za * za + zc * zc);\n                if (this.inherit == Inherit.NoScale\n                    && (pa * pd - pb * pc < 0) != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0))\n                    s = -s;\n                rotation = Math.PI / 2 + Math.atan2(zc, za);\n                const zb = Math.cos(rotation) * s;\n                const zd = Math.sin(rotation) * s;\n                shearX *= MathUtils.degRad;\n                shearY = (90 + shearY) * MathUtils.degRad;\n                const la = Math.cos(shearX) * scaleX;\n                const lb = Math.cos(shearY) * scaleY;\n                const lc = Math.sin(shearX) * scaleX;\n                const ld = Math.sin(shearY) * scaleY;\n                this.a = za * la + zb * lc;\n                this.b = za * lb + zb * ld;\n                this.c = zc * la + zd * lc;\n                this.d = zc * lb + zd * ld;\n                break;\n            }\n        }\n        this.a *= this.skeleton.scaleX;\n        this.b *= this.skeleton.scaleX;\n        this.c *= this.skeleton.scaleY;\n        this.d *= this.skeleton.scaleY;\n    }\n    /** Sets this bone's local transform to the setup pose. */\n    setToSetupPose() {\n        let data = this.data;\n        this.x = data.x;\n        this.y = data.y;\n        this.rotation = data.rotation;\n        this.scaleX = data.scaleX;\n        this.scaleY = data.scaleY;\n        this.shearX = data.shearX;\n        this.shearY = data.shearY;\n        this.inherit = data.inherit;\n    }\n    /** Computes the applied transform values from the world transform.\n     *\n     * If the world transform is modified (by a constraint, {@link #rotateWorld(float)}, etc) then this method should be called so\n     * the applied transform matches the world transform. The applied transform may be needed by other code (eg to apply other\n     * constraints).\n     *\n     * Some information is ambiguous in the world transform, such as -1,-1 scale versus 180 rotation. The applied transform after\n     * calling this method is equivalent to the local transform used to compute the world transform, but may not be identical. */\n    updateAppliedTransform() {\n        let parent = this.parent;\n        if (!parent) {\n            this.ax = this.worldX - this.skeleton.x;\n            this.ay = this.worldY - this.skeleton.y;\n            this.arotation = Math.atan2(this.c, this.a) * MathUtils.radDeg;\n            this.ascaleX = Math.sqrt(this.a * this.a + this.c * this.c);\n            this.ascaleY = Math.sqrt(this.b * this.b + this.d * this.d);\n            this.ashearX = 0;\n            this.ashearY = Math.atan2(this.a * this.b + this.c * this.d, this.a * this.d - this.b * this.c) * MathUtils.radDeg;\n            return;\n        }\n        let pa = parent.a, pb = parent.b, pc = parent.c, pd = parent.d;\n        let pid = 1 / (pa * pd - pb * pc);\n        let ia = pd * pid, ib = pb * pid, ic = pc * pid, id = pa * pid;\n        let dx = this.worldX - parent.worldX, dy = this.worldY - parent.worldY;\n        this.ax = (dx * ia - dy * ib);\n        this.ay = (dy * id - dx * ic);\n        let ra, rb, rc, rd;\n        if (this.inherit == Inherit.OnlyTranslation) {\n            ra = this.a;\n            rb = this.b;\n            rc = this.c;\n            rd = this.d;\n        }\n        else {\n            switch (this.inherit) {\n                case Inherit.NoRotationOrReflection: {\n                    let s = Math.abs(pa * pd - pb * pc) / (pa * pa + pc * pc);\n                    let sa = pa / this.skeleton.scaleX;\n                    let sc = pc / this.skeleton.scaleY;\n                    pb = -sc * s * this.skeleton.scaleX;\n                    pd = sa * s * this.skeleton.scaleY;\n                    pid = 1 / (pa * pd - pb * pc);\n                    ia = pd * pid;\n                    ib = pb * pid;\n                    break;\n                }\n                case Inherit.NoScale:\n                case Inherit.NoScaleOrReflection:\n                    let cos = MathUtils.cosDeg(this.rotation), sin = MathUtils.sinDeg(this.rotation);\n                    pa = (pa * cos + pb * sin) / this.skeleton.scaleX;\n                    pc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n                    let s = Math.sqrt(pa * pa + pc * pc);\n                    if (s > 0.00001)\n                        s = 1 / s;\n                    pa *= s;\n                    pc *= s;\n                    s = Math.sqrt(pa * pa + pc * pc);\n                    if (this.inherit == Inherit.NoScale && pid < 0 != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0))\n                        s = -s;\n                    let r = MathUtils.PI / 2 + Math.atan2(pc, pa);\n                    pb = Math.cos(r) * s;\n                    pd = Math.sin(r) * s;\n                    pid = 1 / (pa * pd - pb * pc);\n                    ia = pd * pid;\n                    ib = pb * pid;\n                    ic = pc * pid;\n                    id = pa * pid;\n            }\n            ra = ia * this.a - ib * this.c;\n            rb = ia * this.b - ib * this.d;\n            rc = id * this.c - ic * this.a;\n            rd = id * this.d - ic * this.b;\n        }\n        this.ashearX = 0;\n        this.ascaleX = Math.sqrt(ra * ra + rc * rc);\n        if (this.ascaleX > 0.0001) {\n            let det = ra * rd - rb * rc;\n            this.ascaleY = det / this.ascaleX;\n            this.ashearY = -Math.atan2(ra * rb + rc * rd, det) * MathUtils.radDeg;\n            this.arotation = Math.atan2(rc, ra) * MathUtils.radDeg;\n        }\n        else {\n            this.ascaleX = 0;\n            this.ascaleY = Math.sqrt(rb * rb + rd * rd);\n            this.ashearY = 0;\n            this.arotation = 90 - Math.atan2(rd, rb) * MathUtils.radDeg;\n        }\n    }\n    /** The world rotation for the X axis, calculated using {@link #a} and {@link #c}. */\n    getWorldRotationX() {\n        return Math.atan2(this.c, this.a) * MathUtils.radDeg;\n    }\n    /** The world rotation for the Y axis, calculated using {@link #b} and {@link #d}. */\n    getWorldRotationY() {\n        return Math.atan2(this.d, this.b) * MathUtils.radDeg;\n    }\n    /** The magnitude (always positive) of the world scale X, calculated using {@link #a} and {@link #c}. */\n    getWorldScaleX() {\n        return Math.sqrt(this.a * this.a + this.c * this.c);\n    }\n    /** The magnitude (always positive) of the world scale Y, calculated using {@link #b} and {@link #d}. */\n    getWorldScaleY() {\n        return Math.sqrt(this.b * this.b + this.d * this.d);\n    }\n    /** Transforms a point from world coordinates to the bone's local coordinates. */\n    worldToLocal(world) {\n        let invDet = 1 / (this.a * this.d - this.b * this.c);\n        let x = world.x - this.worldX, y = world.y - this.worldY;\n        world.x = x * this.d * invDet - y * this.b * invDet;\n        world.y = y * this.a * invDet - x * this.c * invDet;\n        return world;\n    }\n    /** Transforms a point from the bone's local coordinates to world coordinates. */\n    localToWorld(local) {\n        let x = local.x, y = local.y;\n        local.x = x * this.a + y * this.b + this.worldX;\n        local.y = x * this.c + y * this.d + this.worldY;\n        return local;\n    }\n    /** Transforms a point from world coordinates to the parent bone's local coordinates. */\n    worldToParent(world) {\n        if (world == null)\n            throw new Error(\"world cannot be null.\");\n        return this.parent == null ? world : this.parent.worldToLocal(world);\n    }\n    /** Transforms a point from the parent bone's coordinates to world coordinates. */\n    parentToWorld(world) {\n        if (world == null)\n            throw new Error(\"world cannot be null.\");\n        return this.parent == null ? world : this.parent.localToWorld(world);\n    }\n    /** Transforms a world rotation to a local rotation. */\n    worldToLocalRotation(worldRotation) {\n        let sin = MathUtils.sinDeg(worldRotation), cos = MathUtils.cosDeg(worldRotation);\n        return Math.atan2(this.a * sin - this.c * cos, this.d * cos - this.b * sin) * MathUtils.radDeg + this.rotation - this.shearX;\n    }\n    /** Transforms a local rotation to a world rotation. */\n    localToWorldRotation(localRotation) {\n        localRotation -= this.rotation - this.shearX;\n        let sin = MathUtils.sinDeg(localRotation), cos = MathUtils.cosDeg(localRotation);\n        return Math.atan2(cos * this.c + sin * this.d, cos * this.a + sin * this.b) * MathUtils.radDeg;\n    }\n    /** Rotates the world transform the specified amount.\n     * <p>\n     * After changes are made to the world transform, {@link #updateAppliedTransform()} should be called and\n     * {@link #update(Physics)} will need to be called on any child bones, recursively. */\n    rotateWorld(degrees) {\n        degrees *= MathUtils.degRad;\n        const sin = Math.sin(degrees), cos = Math.cos(degrees);\n        const ra = this.a, rb = this.b;\n        this.a = cos * ra - sin * this.c;\n        this.b = cos * rb - sin * this.d;\n        this.c = sin * ra + cos * this.c;\n        this.d = sin * rb + cos * this.d;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** The base class for all constraint datas. */\nexport class ConstraintData {\n    name;\n    order;\n    skinRequired;\n    constructor(name, order, skinRequired) {\n        this.name = name;\n        this.order = order;\n        this.skinRequired = skinRequired;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLCtDQUErQztBQUMvQyxNQUFNLE9BQWdCLGNBQWM7SUFDZjtJQUFxQjtJQUFzQjtJQUEvRCxZQUFvQixJQUFZLEVBQVMsS0FBYSxFQUFTLFlBQXFCO1FBQWhFLFNBQUksR0FBSixJQUFJLENBQVE7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQVMsaUJBQVksR0FBWixZQUFZLENBQVM7SUFBSSxDQUFDO0NBQ3pGIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlas } from \"./TextureAtlas.js\";\nexport class AssetManagerBase {\n    pathPrefix = \"\";\n    textureLoader;\n    downloader;\n    assets = {};\n    errors = {};\n    toLoad = 0;\n    loaded = 0;\n    constructor(textureLoader, pathPrefix = \"\", downloader = new Downloader()) {\n        this.textureLoader = textureLoader;\n        this.pathPrefix = pathPrefix;\n        this.downloader = downloader;\n    }\n    start(path) {\n        this.toLoad++;\n        return this.pathPrefix + path;\n    }\n    success(callback, path, asset) {\n        this.toLoad--;\n        this.loaded++;\n        this.assets[path] = asset;\n        if (callback)\n            callback(path, asset);\n    }\n    error(callback, path, message) {\n        this.toLoad--;\n        this.loaded++;\n        this.errors[path] = message;\n        if (callback)\n            callback(path, message);\n    }\n    loadAll() {\n        let promise = new Promise((resolve, reject) => {\n            let check = () => {\n                if (this.isLoadingComplete()) {\n                    if (this.hasErrors())\n                        reject(this.errors);\n                    else\n                        resolve(this);\n                    return;\n                }\n                requestAnimationFrame(check);\n            };\n            requestAnimationFrame(check);\n        });\n        return promise;\n    }\n    setRawDataURI(path, data) {\n        this.downloader.rawDataUris[this.pathPrefix + path] = data;\n    }\n    loadBinary(path, success = () => { }, error = () => { }) {\n        path = this.start(path);\n        this.downloader.downloadBinary(path, (data) => {\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load binary ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadText(path, success = () => { }, error = () => { }) {\n        path = this.start(path);\n        this.downloader.downloadText(path, (data) => {\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load text ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadJson(path, success = () => { }, error = () => { }) {\n        path = this.start(path);\n        this.downloader.downloadJson(path, (data) => {\n            this.success(success, path, data);\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load JSON ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    loadTexture(path, success = () => { }, error = () => { }) {\n        path = this.start(path);\n        let isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document);\n        let isWebWorker = !isBrowser; // && typeof importScripts !== 'undefined';\n        if (isWebWorker) {\n            fetch(path, { mode: \"cors\" }).then((response) => {\n                if (response.ok)\n                    return response.blob();\n                this.error(error, path, `Couldn't load image: ${path}`);\n                return null;\n            }).then((blob) => {\n                return blob ? createImageBitmap(blob, { premultiplyAlpha: \"none\", colorSpaceConversion: \"none\" }) : null;\n            }).then((bitmap) => {\n                if (bitmap)\n                    this.success(success, path, this.textureLoader(bitmap));\n            });\n        }\n        else {\n            let image = new Image();\n            image.crossOrigin = \"anonymous\";\n            image.onload = () => {\n                this.success(success, path, this.textureLoader(image));\n            };\n            image.onerror = () => {\n                this.error(error, path, `Couldn't load image: ${path}`);\n            };\n            if (this.downloader.rawDataUris[path])\n                path = this.downloader.rawDataUris[path];\n            image.src = path;\n        }\n    }\n    loadTextureAtlas(path, success = () => { }, error = () => { }, fileAlias) {\n        let index = path.lastIndexOf(\"/\");\n        let parent = index >= 0 ? path.substring(0, index + 1) : \"\";\n        path = this.start(path);\n        this.downloader.downloadText(path, (atlasText) => {\n            try {\n                let atlas = new TextureAtlas(atlasText);\n                let toLoad = atlas.pages.length, abort = false;\n                for (let page of atlas.pages) {\n                    this.loadTexture(!fileAlias ? parent + page.name : fileAlias[page.name], (imagePath, texture) => {\n                        if (!abort) {\n                            page.setTexture(texture);\n                            if (--toLoad == 0)\n                                this.success(success, path, atlas);\n                        }\n                    }, (imagePath, message) => {\n                        if (!abort)\n                            this.error(error, path, `Couldn't load texture atlas ${path} page image: ${imagePath}`);\n                        abort = true;\n                    });\n                }\n            }\n            catch (e) {\n                this.error(error, path, `Couldn't parse texture atlas ${path}: ${e.message}`);\n            }\n        }, (status, responseText) => {\n            this.error(error, path, `Couldn't load texture atlas ${path}: status ${status}, ${responseText}`);\n        });\n    }\n    get(path) {\n        return this.assets[this.pathPrefix + path];\n    }\n    require(path) {\n        path = this.pathPrefix + path;\n        let asset = this.assets[path];\n        if (asset)\n            return asset;\n        let error = this.errors[path];\n        throw Error(\"Asset not found: \" + path + (error ? \"\\n\" + error : \"\"));\n    }\n    remove(path) {\n        path = this.pathPrefix + path;\n        let asset = this.assets[path];\n        if (asset.dispose)\n            asset.dispose();\n        delete this.assets[path];\n        return asset;\n    }\n    removeAll() {\n        for (let key in this.assets) {\n            let asset = this.assets[key];\n            if (asset.dispose)\n                asset.dispose();\n        }\n        this.assets = {};\n    }\n    isLoadingComplete() {\n        return this.toLoad == 0;\n    }\n    getToLoad() {\n        return this.toLoad;\n    }\n    getLoaded() {\n        return this.loaded;\n    }\n    dispose() {\n        this.removeAll();\n    }\n    hasErrors() {\n        return Object.keys(this.errors).length > 0;\n    }\n    getErrors() {\n        return this.errors;\n    }\n}\nexport class Downloader {\n    callbacks = {};\n    rawDataUris = {};\n    dataUriToString(dataUri) {\n        if (!dataUri.startsWith(\"data:\")) {\n            throw new Error(\"Not a data URI.\");\n        }\n        let base64Idx = dataUri.indexOf(\"base64,\");\n        if (base64Idx != -1) {\n            base64Idx += \"base64,\".length;\n            return atob(dataUri.substr(base64Idx));\n        }\n        else {\n            return dataUri.substr(dataUri.indexOf(\",\") + 1);\n        }\n    }\n    base64ToUint8Array(base64) {\n        var binary_string = window.atob(base64);\n        var len = binary_string.length;\n        var bytes = new Uint8Array(len);\n        for (var i = 0; i < len; i++) {\n            bytes[i] = binary_string.charCodeAt(i);\n        }\n        return bytes;\n    }\n    dataUriToUint8Array(dataUri) {\n        if (!dataUri.startsWith(\"data:\")) {\n            throw new Error(\"Not a data URI.\");\n        }\n        let base64Idx = dataUri.indexOf(\"base64,\");\n        if (base64Idx == -1)\n            throw new Error(\"Not a binary data URI.\");\n        base64Idx += \"base64,\".length;\n        return this.base64ToUint8Array(dataUri.substr(base64Idx));\n    }\n    downloadText(url, success, error) {\n        if (this.start(url, success, error))\n            return;\n        if (this.rawDataUris[url]) {\n            try {\n                let dataUri = this.rawDataUris[url];\n                this.finish(url, 200, this.dataUriToString(dataUri));\n            }\n            catch (e) {\n                this.finish(url, 400, JSON.stringify(e));\n            }\n            return;\n        }\n        let request = new XMLHttpRequest();\n        request.overrideMimeType(\"text/html\");\n        request.open(\"GET\", url, true);\n        let done = () => {\n            this.finish(url, request.status, request.responseText);\n        };\n        request.onload = done;\n        request.onerror = done;\n        request.send();\n    }\n    downloadJson(url, success, error) {\n        this.downloadText(url, (data) => {\n            success(JSON.parse(data));\n        }, error);\n    }\n    downloadBinary(url, success, error) {\n        if (this.start(url, success, error))\n            return;\n        if (this.rawDataUris[url]) {\n            try {\n                let dataUri = this.rawDataUris[url];\n                this.finish(url, 200, this.dataUriToUint8Array(dataUri));\n            }\n            catch (e) {\n                this.finish(url, 400, JSON.stringify(e));\n            }\n            return;\n        }\n        let request = new XMLHttpRequest();\n        request.open(\"GET\", url, true);\n        request.responseType = \"arraybuffer\";\n        let onerror = () => {\n            this.finish(url, request.status, request.response);\n        };\n        request.onload = () => {\n            if (request.status == 200 || request.status == 0)\n                this.finish(url, 200, new Uint8Array(request.response));\n            else\n                onerror();\n        };\n        request.onerror = onerror;\n        request.send();\n    }\n    start(url, success, error) {\n        let callbacks = this.callbacks[url];\n        try {\n            if (callbacks)\n                return true;\n            this.callbacks[url] = callbacks = [];\n        }\n        finally {\n            callbacks.push(success, error);\n        }\n    }\n    finish(url, status, data) {\n        let callbacks = this.callbacks[url];\n        delete this.callbacks[url];\n        let args = status == 200 || status == 0 ? [data] : [status, data];\n        for (let i = args.length - 1, n = callbacks.length; i < n; i += 2)\n            callbacks[i].apply(null, args);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the current pose values for an {@link Event}.\n *\n * See Timeline {@link Timeline#apply()},\n * AnimationStateListener {@link AnimationStateListener#event()}, and\n * [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class Event {\n    data;\n    intValue = 0;\n    floatValue = 0;\n    stringValue = null;\n    time = 0;\n    volume = 0;\n    balance = 0;\n    constructor(time, data) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        this.time = time;\n        this.data = data;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvRXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBSS9FOzs7O2lGQUlpRjtBQUNqRixNQUFNLE9BQU8sS0FBSztJQUNqQixJQUFJLENBQVk7SUFDaEIsUUFBUSxHQUFXLENBQUMsQ0FBQztJQUNyQixVQUFVLEdBQVcsQ0FBQyxDQUFDO0lBQ3ZCLFdBQVcsR0FBa0IsSUFBSSxDQUFDO0lBQ2xDLElBQUksR0FBVyxDQUFDLENBQUM7SUFDakIsTUFBTSxHQUFXLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQVcsQ0FBQyxDQUFDO0lBRXBCLFlBQWEsSUFBWSxFQUFFLElBQWU7UUFDekMsSUFBSSxDQUFDLElBQUk7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbEIsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose values for an {@link Event}.\n *\n * See [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nexport class EventData {\n    name;\n    intValue = 0;\n    floatValue = 0;\n    stringValue = null;\n    audioPath = null;\n    volume = 0;\n    balance = 0;\n    constructor(name) {\n        this.name = name;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0V2ZW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0U7O3FGQUVxRjtBQUNyRixNQUFNLE9BQU8sU0FBUztJQUNyQixJQUFJLENBQVM7SUFDYixRQUFRLEdBQVcsQ0FBQyxDQUFDO0lBQ3JCLFVBQVUsR0FBVyxDQUFDLENBQUM7SUFDdkIsV0FBVyxHQUFrQixJQUFJLENBQUM7SUFDbEMsU0FBUyxHQUFrQixJQUFJLENBQUM7SUFDaEMsTUFBTSxHQUFXLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQVcsQ0FBQyxDQUFDO0lBRXBCLFlBQWEsSUFBWTtRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Inherit } from \"./BoneData.js\";\nimport { MathUtils } from \"./Utils.js\";\n/** Stores the current pose for an IK constraint. An IK constraint adjusts the rotation of 1 or 2 constrained bones so the tip of\n * the last bone is as close to the target bone as possible.\n *\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraint {\n    /** The IK constraint's setup pose data. */\n    data;\n    /** The bones that will be modified by this IK constraint. */\n    bones;\n    /** The bone that is the IK target. */\n    target;\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n    bendDirection = 0;\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n    compress = false;\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n    stretch = false;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n    mix = 1;\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n    softness = 0;\n    active = false;\n    constructor(data, skeleton) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findBone(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find bone ${data.target.name}`);\n        this.target = target;\n        this.mix = data.mix;\n        this.softness = data.softness;\n        this.bendDirection = data.bendDirection;\n        this.compress = data.compress;\n        this.stretch = data.stretch;\n    }\n    isActive() {\n        return this.active;\n    }\n    setToSetupPose() {\n        const data = this.data;\n        this.mix = data.mix;\n        this.softness = data.softness;\n        this.bendDirection = data.bendDirection;\n        this.compress = data.compress;\n        this.stretch = data.stretch;\n    }\n    update(physics) {\n        if (this.mix == 0)\n            return;\n        let target = this.target;\n        let bones = this.bones;\n        switch (bones.length) {\n            case 1:\n                this.apply1(bones[0], target.worldX, target.worldY, this.compress, this.stretch, this.data.uniform, this.mix);\n                break;\n            case 2:\n                this.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.stretch, this.data.uniform, this.softness, this.mix);\n                break;\n        }\n    }\n    /** Applies 1 bone IK. The target is specified in the world coordinate system. */\n    apply1(bone, targetX, targetY, compress, stretch, uniform, alpha) {\n        let p = bone.parent;\n        if (!p)\n            throw new Error(\"IK bone must have parent.\");\n        let pa = p.a, pb = p.b, pc = p.c, pd = p.d;\n        let rotationIK = -bone.ashearX - bone.arotation, tx = 0, ty = 0;\n        switch (bone.inherit) {\n            case Inherit.OnlyTranslation:\n                tx = (targetX - bone.worldX) * MathUtils.signum(bone.skeleton.scaleX);\n                ty = (targetY - bone.worldY) * MathUtils.signum(bone.skeleton.scaleY);\n                break;\n            case Inherit.NoRotationOrReflection:\n                let s = Math.abs(pa * pd - pb * pc) / Math.max(0.0001, pa * pa + pc * pc);\n                let sa = pa / bone.skeleton.scaleX;\n                let sc = pc / bone.skeleton.scaleY;\n                pb = -sc * s * bone.skeleton.scaleX;\n                pd = sa * s * bone.skeleton.scaleY;\n                rotationIK += Math.atan2(sc, sa) * MathUtils.radDeg;\n            // Fall through\n            default:\n                let x = targetX - p.worldX, y = targetY - p.worldY;\n                let d = pa * pd - pb * pc;\n                if (Math.abs(d) <= 0.0001) {\n                    tx = 0;\n                    ty = 0;\n                }\n                else {\n                    tx = (x * pd - y * pb) / d - bone.ax;\n                    ty = (y * pa - x * pc) / d - bone.ay;\n                }\n        }\n        rotationIK += Math.atan2(ty, tx) * MathUtils.radDeg;\n        if (bone.ascaleX < 0)\n            rotationIK += 180;\n        if (rotationIK > 180)\n            rotationIK -= 360;\n        else if (rotationIK < -180)\n            rotationIK += 360;\n        let sx = bone.ascaleX, sy = bone.ascaleY;\n        if (compress || stretch) {\n            switch (bone.inherit) {\n                case Inherit.NoScale:\n                case Inherit.NoScaleOrReflection:\n                    tx = targetX - bone.worldX;\n                    ty = targetY - bone.worldY;\n            }\n            const b = bone.data.length * sx;\n            if (b > 0.0001) {\n                const dd = tx * tx + ty * ty;\n                if ((compress && dd < b * b) || (stretch && dd > b * b)) {\n                    const s = (Math.sqrt(dd) / b - 1) * alpha + 1;\n                    sx *= s;\n                    if (uniform)\n                        sy *= s;\n                }\n            }\n        }\n        bone.updateWorldTransformWith(bone.ax, bone.ay, bone.arotation + rotationIK * alpha, sx, sy, bone.ashearX, bone.ashearY);\n    }\n    /** Applies 2 bone IK. The target is specified in the world coordinate system.\n     * @param child A direct descendant of the parent bone. */\n    apply2(parent, child, targetX, targetY, bendDir, stretch, uniform, softness, alpha) {\n        if (parent.inherit != Inherit.Normal || child.inherit != Inherit.Normal)\n            return;\n        let px = parent.ax, py = parent.ay, psx = parent.ascaleX, psy = parent.ascaleY, sx = psx, sy = psy, csx = child.ascaleX;\n        let os1 = 0, os2 = 0, s2 = 0;\n        if (psx < 0) {\n            psx = -psx;\n            os1 = 180;\n            s2 = -1;\n        }\n        else {\n            os1 = 0;\n            s2 = 1;\n        }\n        if (psy < 0) {\n            psy = -psy;\n            s2 = -s2;\n        }\n        if (csx < 0) {\n            csx = -csx;\n            os2 = 180;\n        }\n        else\n            os2 = 0;\n        let cx = child.ax, cy = 0, cwx = 0, cwy = 0, a = parent.a, b = parent.b, c = parent.c, d = parent.d;\n        let u = Math.abs(psx - psy) <= 0.0001;\n        if (!u || stretch) {\n            cy = 0;\n            cwx = a * cx + parent.worldX;\n            cwy = c * cx + parent.worldY;\n        }\n        else {\n            cy = child.ay;\n            cwx = a * cx + b * cy + parent.worldX;\n            cwy = c * cx + d * cy + parent.worldY;\n        }\n        let pp = parent.parent;\n        if (!pp)\n            throw new Error(\"IK parent must itself have a parent.\");\n        a = pp.a;\n        b = pp.b;\n        c = pp.c;\n        d = pp.d;\n        let id = a * d - b * c, x = cwx - pp.worldX, y = cwy - pp.worldY;\n        id = Math.abs(id) <= 0.0001 ? 0 : 1 / id;\n        let dx = (x * d - y * b) * id - px, dy = (y * a - x * c) * id - py;\n        let l1 = Math.sqrt(dx * dx + dy * dy), l2 = child.data.length * csx, a1, a2;\n        if (l1 < 0.0001) {\n            this.apply1(parent, targetX, targetY, false, stretch, false, alpha);\n            child.updateWorldTransformWith(cx, cy, 0, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n            return;\n        }\n        x = targetX - pp.worldX;\n        y = targetY - pp.worldY;\n        let tx = (x * d - y * b) * id - px, ty = (y * a - x * c) * id - py;\n        let dd = tx * tx + ty * ty;\n        if (softness != 0) {\n            softness *= psx * (csx + 1) * 0.5;\n            let td = Math.sqrt(dd), sd = td - l1 - l2 * psx + softness;\n            if (sd > 0) {\n                let p = Math.min(1, sd / (softness * 2)) - 1;\n                p = (sd - softness * (1 - p * p)) / td;\n                tx -= p * tx;\n                ty -= p * ty;\n                dd = tx * tx + ty * ty;\n            }\n        }\n        outer: if (u) {\n            l2 *= psx;\n            let cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n            if (cos < -1) {\n                cos = -1;\n                a2 = Math.PI * bendDir;\n            }\n            else if (cos > 1) {\n                cos = 1;\n                a2 = 0;\n                if (stretch) {\n                    a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;\n                    sx *= a;\n                    if (uniform)\n                        sy *= a;\n                }\n            }\n            else\n                a2 = Math.acos(cos) * bendDir;\n            a = l1 + l2 * cos;\n            b = l2 * Math.sin(a2);\n            a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n        }\n        else {\n            a = psx * l2;\n            b = psy * l2;\n            let aa = a * a, bb = b * b, ta = Math.atan2(ty, tx);\n            c = bb * l1 * l1 + aa * dd - aa * bb;\n            let c1 = -2 * bb * l1, c2 = bb - aa;\n            d = c1 * c1 - 4 * c2 * c;\n            if (d >= 0) {\n                let q = Math.sqrt(d);\n                if (c1 < 0)\n                    q = -q;\n                q = -(c1 + q) * 0.5;\n                let r0 = q / c2, r1 = c / q;\n                let r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n                if (r * r <= dd) {\n                    y = Math.sqrt(dd - r * r) * bendDir;\n                    a1 = ta - Math.atan2(y, r);\n                    a2 = Math.atan2(y / psy, (r - l1) / psx);\n                    break outer;\n                }\n            }\n            let minAngle = MathUtils.PI, minX = l1 - a, minDist = minX * minX, minY = 0;\n            let maxAngle = 0, maxX = l1 + a, maxDist = maxX * maxX, maxY = 0;\n            c = -a * l1 / (aa - bb);\n            if (c >= -1 && c <= 1) {\n                c = Math.acos(c);\n                x = a * Math.cos(c) + l1;\n                y = b * Math.sin(c);\n                d = x * x + y * y;\n                if (d < minDist) {\n                    minAngle = c;\n                    minDist = d;\n                    minX = x;\n                    minY = y;\n                }\n                if (d > maxDist) {\n                    maxAngle = c;\n                    maxDist = d;\n                    maxX = x;\n                    maxY = y;\n                }\n            }\n            if (dd <= (minDist + maxDist) * 0.5) {\n                a1 = ta - Math.atan2(minY * bendDir, minX);\n                a2 = minAngle * bendDir;\n            }\n            else {\n                a1 = ta - Math.atan2(maxY * bendDir, maxX);\n                a2 = maxAngle * bendDir;\n            }\n        }\n        let os = Math.atan2(cy, cx) * s2;\n        let rotation = parent.arotation;\n        a1 = (a1 - os) * MathUtils.radDeg + os1 - rotation;\n        if (a1 > 180)\n            a1 -= 360;\n        else if (a1 < -180) //\n            a1 += 360;\n        parent.updateWorldTransformWith(px, py, rotation + a1 * alpha, sx, sy, 0, 0);\n        rotation = child.arotation;\n        a2 = ((a2 + os) * MathUtils.radDeg - child.ashearX) * s2 + os2 - rotation;\n        if (a2 > 180)\n            a2 -= 360;\n        else if (a2 < -180) //\n            a2 += 360;\n        child.updateWorldTransformWith(cx, cy, rotation + a2 * alpha, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for an {@link IkConstraint}.\n * <p>\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraintData extends ConstraintData {\n    /** The bones that are constrained by this IK constraint. */\n    bones = new Array();\n    /** The bone that is the IK target. */\n    _target = null;\n    set target(boneData) { this._target = boneData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._target;\n    }\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n    bendDirection = 0;\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n    compress = false;\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n    stretch = false;\n    /** When true, only a single bone is being constrained, and {@link #getCompress()} or {@link #getStretch()} is used, the bone\n     * is scaled on both the X and Y axes. */\n    uniform = false;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n    mix = 0;\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n    softness = 0;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWtDb25zdHJhaW50RGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ja0NvbnN0cmFpbnREYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHckQ7O3FHQUVxRztBQUNyRyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsY0FBYztJQUNuRCw0REFBNEQ7SUFDNUQsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUM7SUFFOUIsc0NBQXNDO0lBQzlCLE9BQU8sR0FBb0IsSUFBSSxDQUFDO0lBQ3hDLElBQVcsTUFBTSxDQUFFLFFBQWtCLElBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ25FLElBQVcsTUFBTTtRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU87WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUE7O1lBQ2xELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMxQixDQUFDO0lBRUQsbUVBQW1FO0lBQ25FLGFBQWEsR0FBRyxDQUFDLENBQUM7SUFFbEIseUhBQXlIO0lBQ3pILFFBQVEsR0FBRyxLQUFLLENBQUM7SUFFakI7aUZBQzZFO0lBQzdFLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFFaEI7NkNBQ3lDO0lBQ3pDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFFaEIsb0dBQW9HO0lBQ3BHLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFFUixpR0FBaUc7SUFDakcsUUFBUSxHQUFHLENBQUMsQ0FBQztJQUViLFlBQWEsSUFBWTtRQUN4QixLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN2QixDQUFDO0NBQ0QifQ==","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { PathAttachment } from \"./attachments/PathAttachment.js\";\nimport { RotateMode, SpacingMode, PositionMode } from \"./PathConstraintData.js\";\nimport { Utils, MathUtils } from \"./Utils.js\";\n/** Stores the current pose for a path constraint. A path constraint adjusts the rotation, translation, and scale of the\n * constrained bones so they follow a {@link PathAttachment}.\n *\n * See [Path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nexport class PathConstraint {\n    static NONE = -1;\n    static BEFORE = -2;\n    static AFTER = -3;\n    static epsilon = 0.00001;\n    /** The path constraint's setup pose data. */\n    data;\n    /** The bones that will be modified by this path constraint. */\n    bones;\n    /** The slot whose path attachment will be used to constrained the bones. */\n    target;\n    /** The position along the path. */\n    position = 0;\n    /** The spacing between bones. */\n    spacing = 0;\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    spaces = new Array();\n    positions = new Array();\n    world = new Array();\n    curves = new Array();\n    lengths = new Array();\n    segments = new Array();\n    active = false;\n    constructor(data, skeleton) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0, n = data.bones.length; i < n; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findSlot(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find target bone ${data.target.name}`);\n        this.target = target;\n        this.position = data.position;\n        this.spacing = data.spacing;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n    }\n    isActive() {\n        return this.active;\n    }\n    setToSetupPose() {\n        const data = this.data;\n        this.position = data.position;\n        this.spacing = data.spacing;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n    }\n    update(physics) {\n        let attachment = this.target.getAttachment();\n        if (!(attachment instanceof PathAttachment))\n            return;\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY;\n        if (mixRotate == 0 && mixX == 0 && mixY == 0)\n            return;\n        let data = this.data;\n        let tangents = data.rotateMode == RotateMode.Tangent, scale = data.rotateMode == RotateMode.ChainScale;\n        let bones = this.bones;\n        let boneCount = bones.length, spacesCount = tangents ? boneCount : boneCount + 1;\n        let spaces = Utils.setArraySize(this.spaces, spacesCount), lengths = scale ? this.lengths = Utils.setArraySize(this.lengths, boneCount) : [];\n        let spacing = this.spacing;\n        switch (data.spacingMode) {\n            case SpacingMode.Percent:\n                if (scale) {\n                    for (let i = 0, n = spacesCount - 1; i < n; i++) {\n                        let bone = bones[i];\n                        let setupLength = bone.data.length;\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        lengths[i] = Math.sqrt(x * x + y * y);\n                    }\n                }\n                Utils.arrayFill(spaces, 1, spacesCount, spacing);\n                break;\n            case SpacingMode.Proportional:\n                let sum = 0;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = length;\n                        sum += length;\n                    }\n                }\n                if (sum > 0) {\n                    sum = spacesCount / sum * spacing;\n                    for (let i = 1; i < spacesCount; i++)\n                        spaces[i] *= sum;\n                }\n                break;\n            default:\n                let lengthSpacing = data.spacingMode == SpacingMode.Length;\n                for (let i = 0, n = spacesCount - 1; i < n;) {\n                    let bone = bones[i];\n                    let setupLength = bone.data.length;\n                    if (setupLength < PathConstraint.epsilon) {\n                        if (scale)\n                            lengths[i] = 0;\n                        spaces[++i] = spacing;\n                    }\n                    else {\n                        let x = setupLength * bone.a, y = setupLength * bone.c;\n                        let length = Math.sqrt(x * x + y * y);\n                        if (scale)\n                            lengths[i] = length;\n                        spaces[++i] = (lengthSpacing ? setupLength + spacing : spacing) * length / setupLength;\n                    }\n                }\n        }\n        let positions = this.computeWorldPositions(attachment, spacesCount, tangents);\n        let boneX = positions[0], boneY = positions[1], offsetRotation = data.offsetRotation;\n        let tip = false;\n        if (offsetRotation == 0)\n            tip = data.rotateMode == RotateMode.Chain;\n        else {\n            tip = false;\n            let p = this.target.bone;\n            offsetRotation *= p.a * p.d - p.b * p.c > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        }\n        for (let i = 0, p = 3; i < boneCount; i++, p += 3) {\n            let bone = bones[i];\n            bone.worldX += (boneX - bone.worldX) * mixX;\n            bone.worldY += (boneY - bone.worldY) * mixY;\n            let x = positions[p], y = positions[p + 1], dx = x - boneX, dy = y - boneY;\n            if (scale) {\n                let length = lengths[i];\n                if (length != 0) {\n                    let s = (Math.sqrt(dx * dx + dy * dy) / length - 1) * mixRotate + 1;\n                    bone.a *= s;\n                    bone.c *= s;\n                }\n            }\n            boneX = x;\n            boneY = y;\n            if (mixRotate > 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d, r = 0, cos = 0, sin = 0;\n                if (tangents)\n                    r = positions[p - 1];\n                else if (spaces[i + 1] == 0)\n                    r = positions[p + 2];\n                else\n                    r = Math.atan2(dy, dx);\n                r -= Math.atan2(c, a);\n                if (tip) {\n                    cos = Math.cos(r);\n                    sin = Math.sin(r);\n                    let length = bone.data.length;\n                    boneX += (length * (cos * a - sin * c) - dx) * mixRotate;\n                    boneY += (length * (sin * a + cos * c) - dy) * mixRotate;\n                }\n                else {\n                    r += offsetRotation;\n                }\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                cos = Math.cos(r);\n                sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    computeWorldPositions(path, spacesCount, tangents) {\n        let target = this.target;\n        let position = this.position;\n        let spaces = this.spaces, out = Utils.setArraySize(this.positions, spacesCount * 3 + 2), world = this.world;\n        let closed = path.closed;\n        let verticesLength = path.worldVerticesLength, curveCount = verticesLength / 6, prevCurve = PathConstraint.NONE;\n        if (!path.constantSpeed) {\n            let lengths = path.lengths;\n            curveCount -= closed ? 1 : 2;\n            let pathLength = lengths[curveCount];\n            if (this.data.positionMode == PositionMode.Percent)\n                position *= pathLength;\n            let multiplier;\n            switch (this.data.spacingMode) {\n                case SpacingMode.Percent:\n                    multiplier = pathLength;\n                    break;\n                case SpacingMode.Proportional:\n                    multiplier = pathLength / spacesCount;\n                    break;\n                default:\n                    multiplier = 1;\n            }\n            world = Utils.setArraySize(this.world, 8);\n            for (let i = 0, o = 0, curve = 0; i < spacesCount; i++, o += 3) {\n                let space = spaces[i] * multiplier;\n                position += space;\n                let p = position;\n                if (closed) {\n                    p %= pathLength;\n                    if (p < 0)\n                        p += pathLength;\n                    curve = 0;\n                }\n                else if (p < 0) {\n                    if (prevCurve != PathConstraint.BEFORE) {\n                        prevCurve = PathConstraint.BEFORE;\n                        path.computeWorldVertices(target, 2, 4, world, 0, 2);\n                    }\n                    this.addBeforePosition(p, world, 0, out, o);\n                    continue;\n                }\n                else if (p > pathLength) {\n                    if (prevCurve != PathConstraint.AFTER) {\n                        prevCurve = PathConstraint.AFTER;\n                        path.computeWorldVertices(target, verticesLength - 6, 4, world, 0, 2);\n                    }\n                    this.addAfterPosition(p - pathLength, world, 0, out, o);\n                    continue;\n                }\n                // Determine curve containing position.\n                for (;; curve++) {\n                    let length = lengths[curve];\n                    if (p > length)\n                        continue;\n                    if (curve == 0)\n                        p /= length;\n                    else {\n                        let prev = lengths[curve - 1];\n                        p = (p - prev) / (length - prev);\n                    }\n                    break;\n                }\n                if (curve != prevCurve) {\n                    prevCurve = curve;\n                    if (closed && curve == curveCount) {\n                        path.computeWorldVertices(target, verticesLength - 4, 4, world, 0, 2);\n                        path.computeWorldVertices(target, 0, 4, world, 4, 2);\n                    }\n                    else\n                        path.computeWorldVertices(target, curve * 6 + 2, 8, world, 0, 2);\n                }\n                this.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || (i > 0 && space == 0));\n            }\n            return out;\n        }\n        // World vertices.\n        if (closed) {\n            verticesLength += 2;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength - 4, world, 0, 2);\n            path.computeWorldVertices(target, 0, 2, world, verticesLength - 4, 2);\n            world[verticesLength - 2] = world[0];\n            world[verticesLength - 1] = world[1];\n        }\n        else {\n            curveCount--;\n            verticesLength -= 4;\n            world = Utils.setArraySize(this.world, verticesLength);\n            path.computeWorldVertices(target, 2, verticesLength, world, 0, 2);\n        }\n        // Curve lengths.\n        let curves = Utils.setArraySize(this.curves, curveCount);\n        let pathLength = 0;\n        let x1 = world[0], y1 = world[1], cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0, x2 = 0, y2 = 0;\n        let tmpx = 0, tmpy = 0, dddfx = 0, dddfy = 0, ddfx = 0, ddfy = 0, dfx = 0, dfy = 0;\n        for (let i = 0, w = 2; i < curveCount; i++, w += 6) {\n            cx1 = world[w];\n            cy1 = world[w + 1];\n            cx2 = world[w + 2];\n            cy2 = world[w + 3];\n            x2 = world[w + 4];\n            y2 = world[w + 5];\n            tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n            tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n            dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n            dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n            ddfx = tmpx * 2 + dddfx;\n            ddfy = tmpy * 2 + dddfy;\n            dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n            dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            ddfx += dddfx;\n            ddfy += dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx;\n            dfy += ddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            dfx += ddfx + dddfx;\n            dfy += ddfy + dddfy;\n            pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n            curves[i] = pathLength;\n            x1 = x2;\n            y1 = y2;\n        }\n        if (this.data.positionMode == PositionMode.Percent)\n            position *= pathLength;\n        let multiplier;\n        switch (this.data.spacingMode) {\n            case SpacingMode.Percent:\n                multiplier = pathLength;\n                break;\n            case SpacingMode.Proportional:\n                multiplier = pathLength / spacesCount;\n                break;\n            default:\n                multiplier = 1;\n        }\n        let segments = this.segments;\n        let curveLength = 0;\n        for (let i = 0, o = 0, curve = 0, segment = 0; i < spacesCount; i++, o += 3) {\n            let space = spaces[i] * multiplier;\n            position += space;\n            let p = position;\n            if (closed) {\n                p %= pathLength;\n                if (p < 0)\n                    p += pathLength;\n                curve = 0;\n            }\n            else if (p < 0) {\n                this.addBeforePosition(p, world, 0, out, o);\n                continue;\n            }\n            else if (p > pathLength) {\n                this.addAfterPosition(p - pathLength, world, verticesLength - 4, out, o);\n                continue;\n            }\n            // Determine curve containing position.\n            for (;; curve++) {\n                let length = curves[curve];\n                if (p > length)\n                    continue;\n                if (curve == 0)\n                    p /= length;\n                else {\n                    let prev = curves[curve - 1];\n                    p = (p - prev) / (length - prev);\n                }\n                break;\n            }\n            // Curve segment lengths.\n            if (curve != prevCurve) {\n                prevCurve = curve;\n                let ii = curve * 6;\n                x1 = world[ii];\n                y1 = world[ii + 1];\n                cx1 = world[ii + 2];\n                cy1 = world[ii + 3];\n                cx2 = world[ii + 4];\n                cy2 = world[ii + 5];\n                x2 = world[ii + 6];\n                y2 = world[ii + 7];\n                tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n                tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n                dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n                dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n                ddfx = tmpx * 2 + dddfx;\n                ddfy = tmpy * 2 + dddfy;\n                dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n                dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n                curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[0] = curveLength;\n                for (ii = 1; ii < 8; ii++) {\n                    dfx += ddfx;\n                    dfy += ddfy;\n                    ddfx += dddfx;\n                    ddfy += dddfy;\n                    curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                    segments[ii] = curveLength;\n                }\n                dfx += ddfx;\n                dfy += ddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[8] = curveLength;\n                dfx += ddfx + dddfx;\n                dfy += ddfy + dddfy;\n                curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n                segments[9] = curveLength;\n                segment = 0;\n            }\n            // Weight by segment length.\n            p *= curveLength;\n            for (;; segment++) {\n                let length = segments[segment];\n                if (p > length)\n                    continue;\n                if (segment == 0)\n                    p /= length;\n                else {\n                    let prev = segments[segment - 1];\n                    p = segment + (p - prev) / (length - prev);\n                }\n                break;\n            }\n            this.addCurvePosition(p * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents || (i > 0 && space == 0));\n        }\n        return out;\n    }\n    addBeforePosition(p, temp, i, out, o) {\n        let x1 = temp[i], y1 = temp[i + 1], dx = temp[i + 2] - x1, dy = temp[i + 3] - y1, r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addAfterPosition(p, temp, i, out, o) {\n        let x1 = temp[i + 2], y1 = temp[i + 3], dx = x1 - temp[i], dy = y1 - temp[i + 1], r = Math.atan2(dy, dx);\n        out[o] = x1 + p * Math.cos(r);\n        out[o + 1] = y1 + p * Math.sin(r);\n        out[o + 2] = r;\n    }\n    addCurvePosition(p, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents) {\n        if (p == 0 || isNaN(p)) {\n            out[o] = x1;\n            out[o + 1] = y1;\n            out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            return;\n        }\n        let tt = p * p, ttt = tt * p, u = 1 - p, uu = u * u, uuu = uu * u;\n        let ut = u * p, ut3 = ut * 3, uut3 = u * ut3, utt3 = ut3 * p;\n        let x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt, y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\n        out[o] = x;\n        out[o + 1] = y;\n        if (tangents) {\n            if (p < 0.001)\n                out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n            else\n                out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Physics, Skeleton } from \"./Skeleton.js\";\nimport { MathUtils } from \"./Utils.js\";\n/** Stores the current pose for a physics constraint. A physics constraint applies physics to bones.\n * <p>\n * See <a href=\"http://esotericsoftware.com/spine-physics-constraints\">Physics constraints</a> in the Spine User Guide. */\nexport class PhysicsConstraint {\n    data;\n    _bone = null;\n    /** The bone constrained by this physics constraint. */\n    set bone(bone) { this._bone = bone; }\n    get bone() {\n        if (!this._bone)\n            throw new Error(\"Bone not set.\");\n        else\n            return this._bone;\n    }\n    inertia = 0;\n    strength = 0;\n    damping = 0;\n    massInverse = 0;\n    wind = 0;\n    gravity = 0;\n    mix = 0;\n    _reset = true;\n    ux = 0;\n    uy = 0;\n    cx = 0;\n    cy = 0;\n    tx = 0;\n    ty = 0;\n    xOffset = 0;\n    xVelocity = 0;\n    yOffset = 0;\n    yVelocity = 0;\n    rotateOffset = 0;\n    rotateVelocity = 0;\n    scaleOffset = 0;\n    scaleVelocity = 0;\n    active = false;\n    skeleton;\n    remaining = 0;\n    lastTime = 0;\n    constructor(data, skeleton) {\n        this.data = data;\n        this.skeleton = skeleton;\n        this.bone = skeleton.bones[data.bone.index];\n        this.inertia = data.inertia;\n        this.strength = data.strength;\n        this.damping = data.damping;\n        this.massInverse = data.massInverse;\n        this.wind = data.wind;\n        this.gravity = data.gravity;\n        this.mix = data.mix;\n    }\n    reset() {\n        this.remaining = 0;\n        this.lastTime = this.skeleton.time;\n        this._reset = true;\n        this.xOffset = 0;\n        this.xVelocity = 0;\n        this.yOffset = 0;\n        this.yVelocity = 0;\n        this.rotateOffset = 0;\n        this.rotateVelocity = 0;\n        this.scaleOffset = 0;\n        this.scaleVelocity = 0;\n    }\n    setToSetupPose() {\n        const data = this.data;\n        this.inertia = data.inertia;\n        this.strength = data.strength;\n        this.damping = data.damping;\n        this.massInverse = data.massInverse;\n        this.wind = data.wind;\n        this.gravity = data.gravity;\n        this.mix = data.mix;\n    }\n    isActive() {\n        return this.active;\n    }\n    /** Applies the constraint to the constrained bones. */\n    update(physics) {\n        const mix = this.mix;\n        if (mix == 0)\n            return;\n        const x = this.data.x > 0, y = this.data.y > 0, rotateOrShearX = this.data.rotate > 0 || this.data.shearX > 0, scaleX = this.data.scaleX > 0;\n        const bone = this.bone;\n        const l = bone.data.length;\n        switch (physics) {\n            case Physics.none:\n                return;\n            case Physics.reset:\n                this.reset();\n            // Fall through.\n            case Physics.update:\n                const delta = Math.max(this.skeleton.time - this.lastTime, 0);\n                this.remaining += delta;\n                this.lastTime = this.skeleton.time;\n                const bx = bone.worldX, by = bone.worldY;\n                if (this._reset) {\n                    this._reset = false;\n                    this.ux = bx;\n                    this.uy = by;\n                }\n                else {\n                    let a = this.remaining, i = this.inertia, q = this.data.limit * delta, t = this.data.step, f = this.skeleton.data.referenceScale, d = -1;\n                    if (x || y) {\n                        if (x) {\n                            const u = (this.ux - bx) * i;\n                            this.xOffset += u > q ? q : u < -q ? -q : u;\n                            this.ux = bx;\n                        }\n                        if (y) {\n                            const u = (this.uy - by) * i;\n                            this.yOffset += u > q ? q : u < -q ? -q : u;\n                            this.uy = by;\n                        }\n                        if (a >= t) {\n                            d = Math.pow(this.damping, 60 * t);\n                            const m = this.massInverse * t, e = this.strength, w = this.wind * f, g = (Skeleton.yDown ? -this.gravity : this.gravity) * f;\n                            do {\n                                if (x) {\n                                    this.xVelocity += (w - this.xOffset * e) * m;\n                                    this.xOffset += this.xVelocity * t;\n                                    this.xVelocity *= d;\n                                }\n                                if (y) {\n                                    this.yVelocity -= (g + this.yOffset * e) * m;\n                                    this.yOffset += this.yVelocity * t;\n                                    this.yVelocity *= d;\n                                }\n                                a -= t;\n                            } while (a >= t);\n                        }\n                        if (x)\n                            bone.worldX += this.xOffset * mix * this.data.x;\n                        if (y)\n                            bone.worldY += this.yOffset * mix * this.data.y;\n                    }\n                    if (rotateOrShearX || scaleX) {\n                        let ca = Math.atan2(bone.c, bone.a), c = 0, s = 0, mr = 0;\n                        let dx = this.cx - bone.worldX, dy = this.cy - bone.worldY;\n                        if (dx > q)\n                            dx = q;\n                        else if (dx < -q) //\n                            dx = -q;\n                        if (dy > q)\n                            dy = q;\n                        else if (dy < -q) //\n                            dy = -q;\n                        if (rotateOrShearX) {\n                            mr = (this.data.rotate + this.data.shearX) * mix;\n                            let r = Math.atan2(dy + this.ty, dx + this.tx) - ca - this.rotateOffset * mr;\n                            this.rotateOffset += (r - Math.ceil(r * MathUtils.invPI2 - 0.5) * MathUtils.PI2) * i;\n                            r = this.rotateOffset * mr + ca;\n                            c = Math.cos(r);\n                            s = Math.sin(r);\n                            if (scaleX) {\n                                r = l * bone.getWorldScaleX();\n                                if (r > 0)\n                                    this.scaleOffset += (dx * c + dy * s) * i / r;\n                            }\n                        }\n                        else {\n                            c = Math.cos(ca);\n                            s = Math.sin(ca);\n                            const r = l * bone.getWorldScaleX();\n                            if (r > 0)\n                                this.scaleOffset += (dx * c + dy * s) * i / r;\n                        }\n                        a = this.remaining;\n                        if (a >= t) {\n                            if (d == -1)\n                                d = Math.pow(this.damping, 60 * t);\n                            const m = this.massInverse * t, e = this.strength, w = this.wind, g = (Skeleton.yDown ? -this.gravity : this.gravity), h = l / f;\n                            while (true) {\n                                a -= t;\n                                if (scaleX) {\n                                    this.scaleVelocity += (w * c - g * s - this.scaleOffset * e) * m;\n                                    this.scaleOffset += this.scaleVelocity * t;\n                                    this.scaleVelocity *= d;\n                                }\n                                if (rotateOrShearX) {\n                                    this.rotateVelocity -= ((w * s + g * c) * h + this.rotateOffset * e) * m;\n                                    this.rotateOffset += this.rotateVelocity * t;\n                                    this.rotateVelocity *= d;\n                                    if (a < t)\n                                        break;\n                                    const r = this.rotateOffset * mr + ca;\n                                    c = Math.cos(r);\n                                    s = Math.sin(r);\n                                }\n                                else if (a < t) //\n                                    break;\n                            }\n                        }\n                    }\n                    this.remaining = a;\n                }\n                this.cx = bone.worldX;\n                this.cy = bone.worldY;\n                break;\n            case Physics.pose:\n                if (x)\n                    bone.worldX += this.xOffset * mix * this.data.x;\n                if (y)\n                    bone.worldY += this.yOffset * mix * this.data.y;\n        }\n        if (rotateOrShearX) {\n            let o = this.rotateOffset * mix, s = 0, c = 0, a = 0;\n            if (this.data.shearX > 0) {\n                let r = 0;\n                if (this.data.rotate > 0) {\n                    r = o * this.data.rotate;\n                    s = Math.sin(r);\n                    c = Math.cos(r);\n                    a = bone.b;\n                    bone.b = c * a - s * bone.d;\n                    bone.d = s * a + c * bone.d;\n                }\n                r += o * this.data.shearX;\n                s = Math.sin(r);\n                c = Math.cos(r);\n                a = bone.a;\n                bone.a = c * a - s * bone.c;\n                bone.c = s * a + c * bone.c;\n            }\n            else {\n                o *= this.data.rotate;\n                s = Math.sin(o);\n                c = Math.cos(o);\n                a = bone.a;\n                bone.a = c * a - s * bone.c;\n                bone.c = s * a + c * bone.c;\n                a = bone.b;\n                bone.b = c * a - s * bone.d;\n                bone.d = s * a + c * bone.d;\n            }\n        }\n        if (scaleX) {\n            const s = 1 + this.scaleOffset * mix * this.data.scaleX;\n            bone.a *= s;\n            bone.c *= s;\n        }\n        if (physics != Physics.pose) {\n            this.tx = l * bone.a;\n            this.ty = l * bone.c;\n        }\n        bone.updateAppliedTransform();\n    }\n    /** Translates the physics constraint so next {@link #update(Physics)} forces are applied as if the bone moved an additional\n     * amount in world space. */\n    translate(x, y) {\n        this.ux -= x;\n        this.uy -= y;\n        this.cx -= x;\n        this.cy -= y;\n    }\n    /** Rotates the physics constraint so next {@link #update(Physics)} forces are applied as if the bone rotated around the\n     * specified point in world space. */\n    rotate(x, y, degrees) {\n        const r = degrees * MathUtils.degRad, cos = Math.cos(r), sin = Math.sin(r);\n        const dx = this.cx - x, dy = this.cy - y;\n        this.translate(dx * cos - dy * sin - dx, dx * sin + dy * cos - dy);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { VertexAttachment } from \"./attachments/Attachment.js\";\nimport { Color } from \"./Utils.js\";\n/** Stores a slot's current pose. Slots organize attachments for {@link Skeleton#drawOrder} purposes and provide a place to store\n * state for an attachment. State cannot be stored in an attachment itself because attachments are stateless and may be shared\n * across multiple skeletons. */\nexport class Slot {\n    /** The slot's setup pose data. */\n    data;\n    /** The bone this slot belongs to. */\n    bone;\n    /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\n     * color tinting. */\n    color;\n    /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\n     * color's alpha is not used. */\n    darkColor = null;\n    attachment = null;\n    attachmentState = 0;\n    /** The index of the texture region to display when the slot's attachment has a {@link Sequence}. -1 represents the\n     * {@link Sequence#getSetupIndex()}. */\n    sequenceIndex = -1;\n    /** Values to deform the slot's attachment. For an unweighted mesh, the entries are local positions for each vertex. For a\n     * weighted mesh, the entries are an offset for each vertex which will be added to the mesh's local vertex positions.\n     *\n     * See {@link VertexAttachment#computeWorldVertices()} and {@link DeformTimeline}. */\n    deform = new Array();\n    constructor(data, bone) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!bone)\n            throw new Error(\"bone cannot be null.\");\n        this.data = data;\n        this.bone = bone;\n        this.color = new Color();\n        this.darkColor = !data.darkColor ? null : new Color();\n        this.setToSetupPose();\n    }\n    /** The skeleton this slot belongs to. */\n    getSkeleton() {\n        return this.bone.skeleton;\n    }\n    /** The current attachment for the slot, or null if the slot has no attachment. */\n    getAttachment() {\n        return this.attachment;\n    }\n    /** Sets the slot's attachment and, if the attachment changed, resets {@link #sequenceIndex} and clears the {@link #deform}.\n     * The deform is not cleared if the old attachment has the same {@link VertexAttachment#getTimelineAttachment()} as the\n     * specified attachment. */\n    setAttachment(attachment) {\n        if (this.attachment == attachment)\n            return;\n        if (!(attachment instanceof VertexAttachment) || !(this.attachment instanceof VertexAttachment)\n            || attachment.timelineAttachment != this.attachment.timelineAttachment) {\n            this.deform.length = 0;\n        }\n        this.attachment = attachment;\n        this.sequenceIndex = -1;\n    }\n    /** Sets this slot to the setup pose. */\n    setToSetupPose() {\n        this.color.setFromColor(this.data.color);\n        if (this.darkColor)\n            this.darkColor.setFromColor(this.data.darkColor);\n        if (!this.data.attachmentName)\n            this.attachment = null;\n        else {\n            this.attachment = null;\n            this.setAttachment(this.bone.skeleton.getAttachment(this.data.index, this.data.attachmentName));\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9TbG90LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUUvRSxPQUFPLEVBQWMsZ0JBQWdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUkzRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRW5DOztnQ0FFZ0M7QUFDaEMsTUFBTSxPQUFPLElBQUk7SUFDaEIsa0NBQWtDO0lBQ2xDLElBQUksQ0FBVztJQUVmLHFDQUFxQztJQUNyQyxJQUFJLENBQU87SUFFWDt3QkFDb0I7SUFDcEIsS0FBSyxDQUFRO0lBRWI7b0NBQ2dDO0lBQ2hDLFNBQVMsR0FBaUIsSUFBSSxDQUFDO0lBRS9CLFVBQVUsR0FBc0IsSUFBSSxDQUFDO0lBRXJDLGVBQWUsR0FBVyxDQUFDLENBQUM7SUFFNUI7MkNBQ3VDO0lBQ3ZDLGFBQWEsR0FBVyxDQUFDLENBQUMsQ0FBQztJQUUzQjs7O3lGQUdxRjtJQUNyRixNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQVUsQ0FBQztJQUU3QixZQUFhLElBQWMsRUFBRSxJQUFVO1FBQ3RDLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3RELElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQseUNBQXlDO0lBQ3pDLFdBQVc7UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFRCxrRkFBa0Y7SUFDbEYsYUFBYTtRQUNaLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN4QixDQUFDO0lBRUQ7OytCQUUyQjtJQUMzQixhQUFhLENBQUUsVUFBNkI7UUFDM0MsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLFVBQVU7WUFBRSxPQUFPO1FBQzFDLElBQUksQ0FBQyxDQUFDLFVBQVUsWUFBWSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxZQUFZLGdCQUFnQixDQUFDO2VBQ3hFLFVBQVcsQ0FBQyxrQkFBa0IsSUFBdUIsSUFBSSxDQUFDLFVBQVcsQ0FBQyxrQkFBa0IsRUFBRTtZQUNoSCxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7U0FDdkI7UUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCx3Q0FBd0M7SUFDeEMsY0FBYztRQUNiLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekMsSUFBSSxJQUFJLENBQUMsU0FBUztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBVSxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYztZQUM1QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUNKLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztTQUNoRztJQUNGLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector2, MathUtils } from \"./Utils.js\";\n/** Stores the current pose for a transform constraint. A transform constraint adjusts the world transform of the constrained\n * bones to match that of the target bone.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraint {\n    /** The transform constraint's setup pose data. */\n    data;\n    /** The bones that will be modified by this transform constraint. */\n    bones;\n    /** The target bone whose world transform will be copied to the constrained bones. */\n    target;\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    mixScaleX = 0;\n    mixScaleY = 0;\n    mixShearY = 0;\n    temp = new Vector2();\n    active = false;\n    constructor(data, skeleton) {\n        if (!data)\n            throw new Error(\"data cannot be null.\");\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        this.data = data;\n        this.bones = new Array();\n        for (let i = 0; i < data.bones.length; i++) {\n            let bone = skeleton.findBone(data.bones[i].name);\n            if (!bone)\n                throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n            this.bones.push(bone);\n        }\n        let target = skeleton.findBone(data.target.name);\n        if (!target)\n            throw new Error(`Couldn't find target bone ${data.target.name}.`);\n        this.target = target;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n        this.mixScaleX = data.mixScaleX;\n        this.mixScaleY = data.mixScaleY;\n        this.mixShearY = data.mixShearY;\n    }\n    isActive() {\n        return this.active;\n    }\n    setToSetupPose() {\n        const data = this.data;\n        this.mixRotate = data.mixRotate;\n        this.mixX = data.mixX;\n        this.mixY = data.mixY;\n        this.mixScaleX = data.mixScaleX;\n        this.mixScaleY = data.mixScaleY;\n        this.mixShearY = data.mixShearY;\n    }\n    update(physics) {\n        if (this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleY == 0 && this.mixShearY == 0)\n            return;\n        if (this.data.local) {\n            if (this.data.relative)\n                this.applyRelativeLocal();\n            else\n                this.applyAbsoluteLocal();\n        }\n        else {\n            if (this.data.relative)\n                this.applyRelativeWorld();\n            else\n                this.applyAbsoluteWorld();\n        }\n    }\n    applyAbsoluteWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect;\n        let offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) - Math.atan2(c, a) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += (temp.x - bone.worldX) * mixX;\n                bone.worldY += (temp.y - bone.worldY) * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);\n                if (s != 0)\n                    s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = Math.sqrt(bone.b * bone.b + bone.d * bone.d);\n                if (s != 0)\n                    s = (s + (Math.sqrt(tb * tb + td * td) - s + this.data.offsetScaleY) * mixScaleY) / s;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let b = bone.b, d = bone.d;\n                let by = Math.atan2(d, b);\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(bone.c, bone.a));\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r = by + (r + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyRelativeWorld() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let translate = mixX != 0 || mixY != 0;\n        let target = this.target;\n        let ta = target.a, tb = target.b, tc = target.c, td = target.d;\n        let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n        let offsetRotation = this.data.offsetRotation * degRadReflect, offsetShearY = this.data.offsetShearY * degRadReflect;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (mixRotate != 0) {\n                let a = bone.a, b = bone.b, c = bone.c, d = bone.d;\n                let r = Math.atan2(tc, ta) + offsetRotation;\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                r *= mixRotate;\n                let cos = Math.cos(r), sin = Math.sin(r);\n                bone.a = cos * a - sin * c;\n                bone.b = cos * b - sin * d;\n                bone.c = sin * a + cos * c;\n                bone.d = sin * b + cos * d;\n            }\n            if (translate) {\n                let temp = this.temp;\n                target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n                bone.worldX += temp.x * mixX;\n                bone.worldY += temp.y * mixY;\n            }\n            if (mixScaleX != 0) {\n                let s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;\n                bone.a *= s;\n                bone.c *= s;\n            }\n            if (mixScaleY != 0) {\n                let s = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;\n                bone.b *= s;\n                bone.d *= s;\n            }\n            if (mixShearY > 0) {\n                let r = Math.atan2(td, tb) - Math.atan2(tc, ta);\n                if (r > MathUtils.PI)\n                    r -= MathUtils.PI2;\n                else if (r < -MathUtils.PI) //\n                    r += MathUtils.PI2;\n                let b = bone.b, d = bone.d;\n                r = Math.atan2(d, b) + (r - MathUtils.PI / 2 + offsetShearY) * mixShearY;\n                let s = Math.sqrt(b * b + d * d);\n                bone.b = Math.cos(r) * s;\n                bone.d = Math.sin(r) * s;\n            }\n            bone.updateAppliedTransform();\n        }\n    }\n    applyAbsoluteLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation;\n            if (mixRotate != 0)\n                rotation += (target.arotation - rotation + this.data.offsetRotation) * mixRotate;\n            let x = bone.ax, y = bone.ay;\n            x += (target.ax - x + this.data.offsetX) * mixX;\n            y += (target.ay - y + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX, scaleY = bone.ascaleY;\n            if (mixScaleX != 0 && scaleX != 0)\n                scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;\n            if (mixScaleY != 0 && scaleY != 0)\n                scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;\n            let shearY = bone.ashearY;\n            if (mixShearY != 0)\n                shearY += (target.ashearY - shearY + this.data.offsetShearY) * mixShearY;\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n    applyRelativeLocal() {\n        let mixRotate = this.mixRotate, mixX = this.mixX, mixY = this.mixY, mixScaleX = this.mixScaleX, mixScaleY = this.mixScaleY, mixShearY = this.mixShearY;\n        let target = this.target;\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            let rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;\n            let x = bone.ax + (target.ax + this.data.offsetX) * mixX;\n            let y = bone.ay + (target.ay + this.data.offsetY) * mixY;\n            let scaleX = bone.ascaleX * (((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX) + 1);\n            let scaleY = bone.ascaleY * (((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY) + 1);\n            let shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;\n            bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for a {@link PhysicsConstraint}.\n * <p>\n * See <a href=\"http://esotericsoftware.com/spine-physics-constraints\">Physics constraints</a> in the Spine User Guide. */\nexport class PhysicsConstraintData extends ConstraintData {\n    _bone = null;\n    /** The bone constrained by this physics constraint. */\n    set bone(boneData) { this._bone = boneData; }\n    get bone() {\n        if (!this._bone)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._bone;\n    }\n    x = 0;\n    y = 0;\n    rotate = 0;\n    scaleX = 0;\n    shearX = 0;\n    limit = 0;\n    step = 0;\n    inertia = 0;\n    strength = 0;\n    damping = 0;\n    massInverse = 0;\n    wind = 0;\n    gravity = 0;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained poses. */\n    mix = 0;\n    inertiaGlobal = false;\n    strengthGlobal = false;\n    dampingGlobal = false;\n    massGlobal = false;\n    windGlobal = false;\n    gravityGlobal = false;\n    mixGlobal = false;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGh5c2ljc0NvbnN0cmFpbnREYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1BoeXNpY3NDb25zdHJhaW50RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFHL0UsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR3JEOzswSEFFMEg7QUFDMUgsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGNBQWM7SUFDaEQsS0FBSyxHQUFvQixJQUFJLENBQUM7SUFDdEMsdURBQXVEO0lBQ3ZELElBQVcsSUFBSSxDQUFFLFFBQWtCLElBQUksSUFBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQy9ELElBQVcsSUFBSTtRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQTs7WUFDaEQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNOLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDWCxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ1gsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNYLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDVixJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ1QsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNaLFFBQVEsR0FBRyxDQUFDLENBQUM7SUFDYixPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ1osV0FBVyxHQUFHLENBQUMsQ0FBQztJQUNoQixJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ1QsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNaLGdHQUFnRztJQUNoRyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ1IsYUFBYSxHQUFHLEtBQUssQ0FBQztJQUN0QixjQUFjLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFDdEIsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUNuQixVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQ25CLGFBQWEsR0FBRyxLQUFLLENBQUM7SUFDdEIsU0FBUyxHQUFHLEtBQUssQ0FBQztJQUVsQixZQUFhLElBQVk7UUFDeEIsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdkIsQ0FBQztDQUNEIn0=","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose and all of the stateless data for a skeleton.\n *\n * See [Data objects](http://esotericsoftware.com/spine-runtime-architecture#Data-objects) in the Spine Runtimes\n * Guide. */\nexport class SkeletonData {\n    /** The skeleton's name, which by default is the name of the skeleton data file, if possible. May be null. */\n    name = null;\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n    bones = new Array(); // Ordered parents first.\n    /** The skeleton's slots in the setup pose draw order. */\n    slots = new Array(); // Setup pose draw order.\n    skins = new Array();\n    /** The skeleton's default skin. By default this skin contains all attachments that were not in a skin in Spine.\n     *\n     * See {@link Skeleton#getAttachmentByName()}.\n     * May be null. */\n    defaultSkin = null;\n    /** The skeleton's events. */\n    events = new Array();\n    /** The skeleton's animations. */\n    animations = new Array();\n    /** The skeleton's IK constraints. */\n    ikConstraints = new Array();\n    /** The skeleton's transform constraints. */\n    transformConstraints = new Array();\n    /** The skeleton's path constraints. */\n    pathConstraints = new Array();\n    /** The skeleton's physics constraints. */\n    physicsConstraints = new Array();\n    /** The X coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n    x = 0;\n    /** The Y coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n    y = 0;\n    /** The width of the skeleton's axis aligned bounding box in the setup pose. */\n    width = 0;\n    /** The height of the skeleton's axis aligned bounding box in the setup pose. */\n    height = 0;\n    /** Baseline scale factor for applying distance-dependent effects on non-scalable properties, such as angle or scale. Default\n     * is 100. */\n    referenceScale = 100;\n    /** The Spine version used to export the skeleton data, or null. */\n    version = null;\n    /** The skeleton data hash. This value will change if any of the skeleton data has changed. May be null. */\n    hash = null;\n    // Nonessential\n    /** The dopesheet FPS in Spine. Available only when nonessential data was exported. */\n    fps = 0;\n    /** The path to the images directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n    imagesPath = null;\n    /** The path to the audio directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n    audioPath = null;\n    /** Finds a bone by comparing each bone's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findBone(boneName) {\n        if (!boneName)\n            throw new Error(\"boneName cannot be null.\");\n        let bones = this.bones;\n        for (let i = 0, n = bones.length; i < n; i++) {\n            let bone = bones[i];\n            if (bone.name == boneName)\n                return bone;\n        }\n        return null;\n    }\n    /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSlot(slotName) {\n        if (!slotName)\n            throw new Error(\"slotName cannot be null.\");\n        let slots = this.slots;\n        for (let i = 0, n = slots.length; i < n; i++) {\n            let slot = slots[i];\n            if (slot.name == slotName)\n                return slot;\n        }\n        return null;\n    }\n    /** Finds a skin by comparing each skin's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findSkin(skinName) {\n        if (!skinName)\n            throw new Error(\"skinName cannot be null.\");\n        let skins = this.skins;\n        for (let i = 0, n = skins.length; i < n; i++) {\n            let skin = skins[i];\n            if (skin.name == skinName)\n                return skin;\n        }\n        return null;\n    }\n    /** Finds an event by comparing each events's name. It is more efficient to cache the results of this method than to call it\n     * multiple times.\n     * @returns May be null. */\n    findEvent(eventDataName) {\n        if (!eventDataName)\n            throw new Error(\"eventDataName cannot be null.\");\n        let events = this.events;\n        for (let i = 0, n = events.length; i < n; i++) {\n            let event = events[i];\n            if (event.name == eventDataName)\n                return event;\n        }\n        return null;\n    }\n    /** Finds an animation by comparing each animation's name. It is more efficient to cache the results of this method than to\n     * call it multiple times.\n     * @returns May be null. */\n    findAnimation(animationName) {\n        if (!animationName)\n            throw new Error(\"animationName cannot be null.\");\n        let animations = this.animations;\n        for (let i = 0, n = animations.length; i < n; i++) {\n            let animation = animations[i];\n            if (animation.name == animationName)\n                return animation;\n        }\n        return null;\n    }\n    /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findIkConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        const ikConstraints = this.ikConstraints;\n        for (let i = 0, n = ikConstraints.length; i < n; i++) {\n            const constraint = ikConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n     * this method than to call it multiple times.\n     * @return May be null. */\n    findTransformConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        const transformConstraints = this.transformConstraints;\n        for (let i = 0, n = transformConstraints.length; i < n; i++) {\n            const constraint = transformConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findPathConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        const pathConstraints = this.pathConstraints;\n        for (let i = 0, n = pathConstraints.length; i < n; i++) {\n            const constraint = pathConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n    /** Finds a physics constraint by comparing each physics constraint's name. It is more efficient to cache the results of this method\n     * than to call it multiple times.\n     * @return May be null. */\n    findPhysicsConstraint(constraintName) {\n        if (!constraintName)\n            throw new Error(\"constraintName cannot be null.\");\n        const physicsConstraints = this.physicsConstraints;\n        for (let i = 0, n = physicsConstraints.length; i < n; i++) {\n            const constraint = physicsConstraints[i];\n            if (constraint.name == constraintName)\n                return constraint;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tlbGV0b25EYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1NrZWxldG9uRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFZL0U7OztZQUdZO0FBQ1osTUFBTSxPQUFPLFlBQVk7SUFFeEIsNkdBQTZHO0lBQzdHLElBQUksR0FBa0IsSUFBSSxDQUFDO0lBRTNCLHlGQUF5RjtJQUN6RixLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQyxDQUFDLHlCQUF5QjtJQUV4RCx5REFBeUQ7SUFDekQsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFZLENBQUMsQ0FBQyx5QkFBeUI7SUFFeEQsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFRLENBQUM7SUFFMUI7OztzQkFHa0I7SUFDbEIsV0FBVyxHQUFnQixJQUFJLENBQUM7SUFFaEMsNkJBQTZCO0lBQzdCLE1BQU0sR0FBRyxJQUFJLEtBQUssRUFBYSxDQUFDO0lBRWhDLGlDQUFpQztJQUNqQyxVQUFVLEdBQUcsSUFBSSxLQUFLLEVBQWEsQ0FBQztJQUVwQyxxQ0FBcUM7SUFDckMsYUFBYSxHQUFHLElBQUksS0FBSyxFQUFvQixDQUFDO0lBRTlDLDRDQUE0QztJQUM1QyxvQkFBb0IsR0FBRyxJQUFJLEtBQUssRUFBMkIsQ0FBQztJQUU1RCx1Q0FBdUM7SUFDdkMsZUFBZSxHQUFHLElBQUksS0FBSyxFQUFzQixDQUFDO0lBRWxELDBDQUEwQztJQUMxQyxrQkFBa0IsR0FBRyxJQUFJLEtBQUssRUFBeUIsQ0FBQztJQUV4RCxzRkFBc0Y7SUFDdEYsQ0FBQyxHQUFXLENBQUMsQ0FBQztJQUVkLHNGQUFzRjtJQUN0RixDQUFDLEdBQVcsQ0FBQyxDQUFDO0lBRWQsK0VBQStFO0lBQy9FLEtBQUssR0FBVyxDQUFDLENBQUM7SUFFbEIsZ0ZBQWdGO0lBQ2hGLE1BQU0sR0FBVyxDQUFDLENBQUM7SUFFbkI7aUJBQ2E7SUFDYixjQUFjLEdBQUcsR0FBRyxDQUFDO0lBRXJCLG1FQUFtRTtJQUNuRSxPQUFPLEdBQWtCLElBQUksQ0FBQztJQUU5QiwyR0FBMkc7SUFDM0csSUFBSSxHQUFrQixJQUFJLENBQUM7SUFFM0IsZUFBZTtJQUNmLHNGQUFzRjtJQUN0RixHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBRVIsNkhBQTZIO0lBQzdILFVBQVUsR0FBa0IsSUFBSSxDQUFDO0lBRWpDLDRIQUE0SDtJQUM1SCxTQUFTLEdBQWtCLElBQUksQ0FBQztJQUVoQzs7K0JBRTJCO0lBQzNCLFFBQVEsQ0FBRSxRQUFnQjtRQUN6QixJQUFJLENBQUMsUUFBUTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUMzRCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BCLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxRQUFRO2dCQUFFLE9BQU8sSUFBSSxDQUFDO1NBQ3ZDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQ7OytCQUUyQjtJQUMzQixRQUFRLENBQUUsUUFBZ0I7UUFDekIsSUFBSSxDQUFDLFFBQVE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDM0QsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksUUFBUTtnQkFBRSxPQUFPLElBQUksQ0FBQztTQUN2QztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVEOzsrQkFFMkI7SUFDM0IsUUFBUSxDQUFFLFFBQWdCO1FBQ3pCLElBQUksQ0FBQyxRQUFRO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1FBQzNELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdkIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM3QyxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEIsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLFFBQVE7Z0JBQUUsT0FBTyxJQUFJLENBQUM7U0FDdkM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFRDs7K0JBRTJCO0lBQzNCLFNBQVMsQ0FBRSxhQUFxQjtRQUMvQixJQUFJLENBQUMsYUFBYTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQztRQUNyRSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxhQUFhO2dCQUFFLE9BQU8sS0FBSyxDQUFDO1NBQzlDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQ7OytCQUUyQjtJQUMzQixhQUFhLENBQUUsYUFBcUI7UUFDbkMsSUFBSSxDQUFDLGFBQWE7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLCtCQUErQixDQUFDLENBQUM7UUFDckUsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUNqQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2xELElBQUksU0FBUyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM5QixJQUFJLFNBQVMsQ0FBQyxJQUFJLElBQUksYUFBYTtnQkFBRSxPQUFPLFNBQVMsQ0FBQztTQUN0RDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs4QkFFMEI7SUFDMUIsZ0JBQWdCLENBQUUsY0FBc0I7UUFDdkMsSUFBSSxDQUFDLGNBQWM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDdkUsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUN6QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JELE1BQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLFVBQVUsQ0FBQyxJQUFJLElBQUksY0FBYztnQkFBRSxPQUFPLFVBQVUsQ0FBQztTQUN6RDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVEOzs4QkFFMEI7SUFDMUIsdUJBQXVCLENBQUUsY0FBc0I7UUFDOUMsSUFBSSxDQUFDLGNBQWM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDdkUsTUFBTSxvQkFBb0IsR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUM7UUFDdkQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLG9CQUFvQixDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzVELE1BQU0sVUFBVSxHQUFHLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNDLElBQUksVUFBVSxDQUFDLElBQUksSUFBSSxjQUFjO2dCQUFFLE9BQU8sVUFBVSxDQUFDO1NBQ3pEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQ7OzhCQUUwQjtJQUMxQixrQkFBa0IsQ0FBRSxjQUFzQjtRQUN6QyxJQUFJLENBQUMsY0FBYztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUN2RSxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBQzdDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxlQUFlLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDdkQsTUFBTSxVQUFVLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RDLElBQUksVUFBVSxDQUFDLElBQUksSUFBSSxjQUFjO2dCQUFFLE9BQU8sVUFBVSxDQUFDO1NBQ3pEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQ7OzhCQUUwQjtJQUMxQixxQkFBcUIsQ0FBRSxjQUFzQjtRQUM1QyxJQUFJLENBQUMsY0FBYztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUN2RSxNQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNuRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsa0JBQWtCLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDMUQsTUFBTSxVQUFVLEdBQUcsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekMsSUFBSSxVQUFVLENBQUMsSUFBSSxJQUFJLGNBQWM7Z0JBQUUsT0FBTyxVQUFVLENBQUM7U0FDekQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { MeshAttachment } from \"./attachments/MeshAttachment.js\";\nimport { Color } from \"./Utils.js\";\n/** Stores an entry in the skin consisting of the slot index, name, and attachment **/\nexport class SkinEntry {\n    slotIndex;\n    name;\n    attachment;\n    constructor(slotIndex = 0, name, attachment) {\n        this.slotIndex = slotIndex;\n        this.name = name;\n        this.attachment = attachment;\n    }\n}\n/** Stores attachments by slot index and attachment name.\n *\n * See SkeletonData {@link SkeletonData#defaultSkin}, Skeleton {@link Skeleton#skin}, and\n * [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide. */\nexport class Skin {\n    /** The skin's name, which is unique across all skins in the skeleton. */\n    name;\n    attachments = new Array();\n    bones = Array();\n    constraints = new Array();\n    /** The color of the skin as it was in Spine, or a default color if nonessential data was not exported. */\n    color = new Color(0.99607843, 0.61960787, 0.30980393, 1); // fe9e4fff\n    constructor(name) {\n        if (!name)\n            throw new Error(\"name cannot be null.\");\n        this.name = name;\n    }\n    /** Adds an attachment to the skin for the specified slot index and name. */\n    setAttachment(slotIndex, name, attachment) {\n        if (!attachment)\n            throw new Error(\"attachment cannot be null.\");\n        let attachments = this.attachments;\n        if (slotIndex >= attachments.length)\n            attachments.length = slotIndex + 1;\n        if (!attachments[slotIndex])\n            attachments[slotIndex] = {};\n        attachments[slotIndex][name] = attachment;\n    }\n    /** Adds all attachments, bones, and constraints from the specified skin to this skin. */\n    addSkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n        }\n    }\n    /** Adds all bones and constraints and copies of all attachments from the specified skin to this skin. Mesh attachments are not\n     * copied, instead a new linked mesh is created. The attachment copies can be modified without affecting the originals. */\n    copySkin(skin) {\n        for (let i = 0; i < skin.bones.length; i++) {\n            let bone = skin.bones[i];\n            let contained = false;\n            for (let ii = 0; ii < this.bones.length; ii++) {\n                if (this.bones[ii] == bone) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.bones.push(bone);\n        }\n        for (let i = 0; i < skin.constraints.length; i++) {\n            let constraint = skin.constraints[i];\n            let contained = false;\n            for (let ii = 0; ii < this.constraints.length; ii++) {\n                if (this.constraints[ii] == constraint) {\n                    contained = true;\n                    break;\n                }\n            }\n            if (!contained)\n                this.constraints.push(constraint);\n        }\n        let attachments = skin.getAttachments();\n        for (let i = 0; i < attachments.length; i++) {\n            var attachment = attachments[i];\n            if (!attachment.attachment)\n                continue;\n            if (attachment.attachment instanceof MeshAttachment) {\n                attachment.attachment = attachment.attachment.newLinkedMesh();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n            else {\n                attachment.attachment = attachment.attachment.copy();\n                this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n            }\n        }\n    }\n    /** Returns the attachment for the specified slot index and name, or null. */\n    getAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        return dictionary ? dictionary[name] : null;\n    }\n    /** Removes the attachment in the skin for the specified slot index and name, if any. */\n    removeAttachment(slotIndex, name) {\n        let dictionary = this.attachments[slotIndex];\n        if (dictionary)\n            delete dictionary[name];\n    }\n    /** Returns all attachments in this skin. */\n    getAttachments() {\n        let entries = new Array();\n        for (var i = 0; i < this.attachments.length; i++) {\n            let slotAttachments = this.attachments[i];\n            if (slotAttachments) {\n                for (let name in slotAttachments) {\n                    let attachment = slotAttachments[name];\n                    if (attachment)\n                        entries.push(new SkinEntry(i, name, attachment));\n                }\n            }\n        }\n        return entries;\n    }\n    /** Returns all attachments in this skin for the specified slot index. */\n    getAttachmentsForSlot(slotIndex, attachments) {\n        let slotAttachments = this.attachments[slotIndex];\n        if (slotAttachments) {\n            for (let name in slotAttachments) {\n                let attachment = slotAttachments[name];\n                if (attachment)\n                    attachments.push(new SkinEntry(slotIndex, name, attachment));\n            }\n        }\n    }\n    /** Clears all attachments, bones, and constraints. */\n    clear() {\n        this.attachments.length = 0;\n        this.bones.length = 0;\n        this.constraints.length = 0;\n    }\n    /** Attach each attachment in this skin if the corresponding attachment in the old skin is currently attached. */\n    attachAll(skeleton, oldSkin) {\n        let slotIndex = 0;\n        for (let i = 0; i < skeleton.slots.length; i++) {\n            let slot = skeleton.slots[i];\n            let slotAttachment = slot.getAttachment();\n            if (slotAttachment && slotIndex < oldSkin.attachments.length) {\n                let dictionary = oldSkin.attachments[slotIndex];\n                for (let key in dictionary) {\n                    let skinAttachment = dictionary[key];\n                    if (slotAttachment == skinAttachment) {\n                        let attachment = this.getAttachment(slotIndex, key);\n                        if (attachment)\n                            slot.setAttachment(attachment);\n                        break;\n                    }\n                }\n            }\n            slotIndex++;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2tpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0VBMkIrRTtBQUcvRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJakUsT0FBTyxFQUFFLEtBQUssRUFBYSxNQUFNLFlBQVksQ0FBQztBQUU5QyxzRkFBc0Y7QUFDdEYsTUFBTSxPQUFPLFNBQVM7SUFDRDtJQUE4QjtJQUFxQjtJQUF2RSxZQUFvQixZQUFvQixDQUFDLEVBQVMsSUFBWSxFQUFTLFVBQXNCO1FBQXpFLGNBQVMsR0FBVCxTQUFTLENBQVk7UUFBUyxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUFJLENBQUM7Q0FDbEc7QUFFRDs7O21HQUdtRztBQUNuRyxNQUFNLE9BQU8sSUFBSTtJQUNoQix5RUFBeUU7SUFDekUsSUFBSSxDQUFTO0lBRWIsV0FBVyxHQUFHLElBQUksS0FBSyxFQUF5QixDQUFDO0lBQ2pELEtBQUssR0FBRyxLQUFLLEVBQVksQ0FBQztJQUMxQixXQUFXLEdBQUcsSUFBSSxLQUFLLEVBQWtCLENBQUM7SUFFMUMsMEdBQTBHO0lBQzFHLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxVQUFVLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7SUFFckUsWUFBYSxJQUFZO1FBQ3hCLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ2xCLENBQUM7SUFFRCw0RUFBNEU7SUFDNUUsYUFBYSxDQUFFLFNBQWlCLEVBQUUsSUFBWSxFQUFFLFVBQXNCO1FBQ3JFLElBQUksQ0FBQyxVQUFVO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1FBQy9ELElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDbkMsSUFBSSxTQUFTLElBQUksV0FBVyxDQUFDLE1BQU07WUFBRSxXQUFXLENBQUMsTUFBTSxHQUFHLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUM7WUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3pELFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQUM7SUFDM0MsQ0FBQztJQUVELHlGQUF5RjtJQUN6RixPQUFPLENBQUUsSUFBVTtRQUNsQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixJQUFJLFNBQVMsR0FBRyxLQUFLLENBQUM7WUFDdEIsS0FBSyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFO2dCQUM5QyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxFQUFFO29CQUMzQixTQUFTLEdBQUcsSUFBSSxDQUFDO29CQUNqQixNQUFNO2lCQUNOO2FBQ0Q7WUFDRCxJQUFJLENBQUMsU0FBUztnQkFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN0QztRQUVELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNqRCxJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN0QixLQUFLLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUU7Z0JBQ3BELElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsSUFBSSxVQUFVLEVBQUU7b0JBQ3ZDLFNBQVMsR0FBRyxJQUFJLENBQUM7b0JBQ2pCLE1BQU07aUJBQ047YUFDRDtZQUNELElBQUksQ0FBQyxTQUFTO2dCQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ2xEO1FBRUQsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzVDLElBQUksVUFBVSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDakY7SUFDRixDQUFDO0lBRUQ7OEhBQzBIO0lBQzFILFFBQVEsQ0FBRSxJQUFVO1FBQ25CLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN0QixLQUFLLElBQUksRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLEVBQUU7Z0JBQzlDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLEVBQUU7b0JBQzNCLFNBQVMsR0FBRyxJQUFJLENBQUM7b0JBQ2pCLE1BQU07aUJBQ047YUFDRDtZQUNELElBQUksQ0FBQyxTQUFTO2dCQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RDO1FBRUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2pELElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckMsSUFBSSxTQUFTLEdBQUcsS0FBSyxDQUFDO1lBQ3RCLEtBQUssSUFBSSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRTtnQkFDcEQsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxJQUFJLFVBQVUsRUFBRTtvQkFDdkMsU0FBUyxHQUFHLElBQUksQ0FBQztvQkFDakIsTUFBTTtpQkFDTjthQUNEO1lBQ0QsSUFBSSxDQUFDLFNBQVM7Z0JBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDbEQ7UUFFRCxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDeEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDNUMsSUFBSSxVQUFVLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVTtnQkFBRSxTQUFTO1lBQ3JDLElBQUksVUFBVSxDQUFDLFVBQVUsWUFBWSxjQUFjLEVBQUU7Z0JBQ3BELFVBQVUsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztnQkFDOUQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ2pGO2lCQUFNO2dCQUNOLFVBQVUsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztnQkFDckQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ2pGO1NBQ0Q7SUFDRixDQUFDO0lBRUQsNkVBQTZFO0lBQzdFLGFBQWEsQ0FBRSxTQUFpQixFQUFFLElBQVk7UUFDN0MsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM3QyxPQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDN0MsQ0FBQztJQUVELHdGQUF3RjtJQUN4RixnQkFBZ0IsQ0FBRSxTQUFpQixFQUFFLElBQVk7UUFDaEQsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM3QyxJQUFJLFVBQVU7WUFBRSxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsNENBQTRDO0lBQzVDLGNBQWM7UUFDYixJQUFJLE9BQU8sR0FBRyxJQUFJLEtBQUssRUFBYSxDQUFDO1FBQ3JDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNqRCxJQUFJLGVBQWUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFDLElBQUksZUFBZSxFQUFFO2dCQUNwQixLQUFLLElBQUksSUFBSSxJQUFJLGVBQWUsRUFBRTtvQkFDakMsSUFBSSxVQUFVLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUN2QyxJQUFJLFVBQVU7d0JBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7aUJBQ2pFO2FBQ0Q7U0FDRDtRQUNELE9BQU8sT0FBTyxDQUFDO0lBQ2hCLENBQUM7SUFFRCx5RUFBeUU7SUFDekUscUJBQXFCLENBQUUsU0FBaUIsRUFBRSxXQUE2QjtRQUN0RSxJQUFJLGVBQWUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2xELElBQUksZUFBZSxFQUFFO1lBQ3BCLEtBQUssSUFBSSxJQUFJLElBQUksZUFBZSxFQUFFO2dCQUNqQyxJQUFJLFVBQVUsR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3ZDLElBQUksVUFBVTtvQkFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQzthQUM3RTtTQUNEO0lBQ0YsQ0FBQztJQUVELHNEQUFzRDtJQUN0RCxLQUFLO1FBQ0osSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELGlIQUFpSDtJQUNqSCxTQUFTLENBQUUsUUFBa0IsRUFBRSxPQUFhO1FBQzNDLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQztRQUNsQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDL0MsSUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3QixJQUFJLGNBQWMsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDMUMsSUFBSSxjQUFjLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFO2dCQUM3RCxJQUFJLFVBQVUsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUNoRCxLQUFLLElBQUksR0FBRyxJQUFJLFVBQVUsRUFBRTtvQkFDM0IsSUFBSSxjQUFjLEdBQWUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUNqRCxJQUFJLGNBQWMsSUFBSSxjQUFjLEVBQUU7d0JBQ3JDLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO3dCQUNwRCxJQUFJLFVBQVU7NEJBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQzt3QkFDL0MsTUFBTTtxQkFDTjtpQkFDRDthQUNEO1lBQ0QsU0FBUyxFQUFFLENBQUM7U0FDWjtJQUNGLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { ConstraintData } from \"./ConstraintData.js\";\n/** Stores the setup pose for a {@link TransformConstraint}.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraintData extends ConstraintData {\n    /** The bones that will be modified by this transform constraint. */\n    bones = new Array();\n    /** The target bone whose world transform will be copied to the constrained bones. */\n    _target = null;\n    set target(boneData) { this._target = boneData; }\n    get target() {\n        if (!this._target)\n            throw new Error(\"BoneData not set.\");\n        else\n            return this._target;\n    }\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n    mixScaleX = 0;\n    mixScaleY = 0;\n    mixShearY = 0;\n    /** An offset added to the constrained bone rotation. */\n    offsetRotation = 0;\n    /** An offset added to the constrained bone X translation. */\n    offsetX = 0;\n    /** An offset added to the constrained bone Y translation. */\n    offsetY = 0;\n    /** An offset added to the constrained bone scaleX. */\n    offsetScaleX = 0;\n    /** An offset added to the constrained bone scaleY. */\n    offsetScaleY = 0;\n    /** An offset added to the constrained bone shearY. */\n    offsetShearY = 0;\n    relative = false;\n    local = false;\n    constructor(name) {\n        super(name, 0, false);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNmb3JtQ29uc3RyYWludERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvVHJhbnNmb3JtQ29uc3RyYWludERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrRUEyQitFO0FBRS9FLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUdyRDs7bUhBRW1IO0FBQ25ILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxjQUFjO0lBRTFELG9FQUFvRTtJQUNwRSxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVksQ0FBQztJQUU5QixxRkFBcUY7SUFDN0UsT0FBTyxHQUFvQixJQUFJLENBQUM7SUFDeEMsSUFBVyxNQUFNLENBQUUsUUFBa0IsSUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbkUsSUFBVyxNQUFNO1FBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQTs7WUFDbEQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRCxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNULElBQUksR0FBRyxDQUFDLENBQUM7SUFDVCxTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsU0FBUyxHQUFHLENBQUMsQ0FBQztJQUNkLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFFZCx3REFBd0Q7SUFDeEQsY0FBYyxHQUFHLENBQUMsQ0FBQztJQUVuQiw2REFBNkQ7SUFDN0QsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUVaLDZEQUE2RDtJQUM3RCxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBRVosc0RBQXNEO0lBQ3RELFlBQVksR0FBRyxDQUFDLENBQUM7SUFFakIsc0RBQXNEO0lBQ3RELFlBQVksR0FBRyxDQUFDLENBQUM7SUFFakIsc0RBQXNEO0lBQ3RELFlBQVksR0FBRyxDQUFDLENBQUM7SUFFakIsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUNqQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsWUFBYSxJQUFZO1FBQ3hCLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDRCJ9","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { BoundingBoxAttachment } from \"./attachments/BoundingBoxAttachment.js\";\nimport { Pool, Utils } from \"./Utils.js\";\n/** Collects each visible {@link BoundingBoxAttachment} and computes the world vertices for its polygon. The polygon vertices are\n * provided along with convenience methods for doing hit detection. */\nexport class SkeletonBounds {\n    /** The left edge of the axis aligned bounding box. */\n    minX = 0;\n    /** The bottom edge of the axis aligned bounding box. */\n    minY = 0;\n    /** The right edge of the axis aligned bounding box. */\n    maxX = 0;\n    /** The top edge of the axis aligned bounding box. */\n    maxY = 0;\n    /** The visible bounding boxes. */\n    boundingBoxes = new Array();\n    /** The world vertices for the bounding box polygons. */\n    polygons = new Array();\n    polygonPool = new Pool(() => {\n        return Utils.newFloatArray(16);\n    });\n    /** Clears any previous polygons, finds all visible bounding box attachments, and computes the world vertices for each bounding\n     * box's polygon.\n     * @param updateAabb If true, the axis aligned bounding box containing all the polygons is computed. If false, the\n     *           SkeletonBounds AABB methods will always return true. */\n    update(skeleton, updateAabb) {\n        if (!skeleton)\n            throw new Error(\"skeleton cannot be null.\");\n        let boundingBoxes = this.boundingBoxes;\n        let polygons = this.polygons;\n        let polygonPool = this.polygonPool;\n        let slots = skeleton.slots;\n        let slotCount = slots.length;\n        boundingBoxes.length = 0;\n        polygonPool.freeAll(polygons);\n        polygons.length = 0;\n        for (let i = 0; i < slotCount; i++) {\n            let slot = slots[i];\n            if (!slot.bone.active)\n                continue;\n            let attachment = slot.getAttachment();\n            if (attachment instanceof BoundingBoxAttachment) {\n                let boundingBox = attachment;\n                boundingBoxes.push(boundingBox);\n                let polygon = polygonPool.obtain();\n                if (polygon.length != boundingBox.worldVerticesLength) {\n                    polygon = Utils.newFloatArray(boundingBox.worldVerticesLength);\n                }\n                polygons.push(polygon);\n                boundingBox.computeWorldVertices(slot, 0, boundingBox.worldVerticesLength, polygon, 0, 2);\n            }\n        }\n        if (updateAabb) {\n            this.aabbCompute();\n        }\n        else {\n            this.minX = Number.POSITIVE_INFINITY;\n            this.minY = Number.POSITIVE_INFINITY;\n            this.maxX = Number.NEGATIVE_INFINITY;\n            this.maxY = Number.NEGATIVE_INFINITY;\n        }\n    }\n    aabbCompute() {\n        let minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY;\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++) {\n            let polygon = polygons[i];\n            let vertices = polygon;\n            for (let ii = 0, nn = polygon.length; ii < nn; ii += 2) {\n                let x = vertices[ii];\n                let y = vertices[ii + 1];\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n                maxX = Math.max(maxX, x);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n    /** Returns true if the axis aligned bounding box contains the point. */\n    aabbContainsPoint(x, y) {\n        return x >= this.minX && x <= this.maxX && y >= this.minY && y <= this.maxY;\n    }\n    /** Returns true if the axis aligned bounding box intersects the line segment. */\n    aabbIntersectsSegment(x1, y1, x2, y2) {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n        if ((x1 <= minX && x2 <= minX) || (y1 <= minY && y2 <= minY) || (x1 >= maxX && x2 >= maxX) || (y1 >= maxY && y2 >= maxY))\n            return false;\n        let m = (y2 - y1) / (x2 - x1);\n        let y = m * (minX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        y = m * (maxX - x1) + y1;\n        if (y > minY && y < maxY)\n            return true;\n        let x = (minY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        x = (maxY - y1) / m + x1;\n        if (x > minX && x < maxX)\n            return true;\n        return false;\n    }\n    /** Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds. */\n    aabbIntersectsSkeleton(bounds) {\n        return this.minX < bounds.maxX && this.maxX > bounds.minX && this.minY < bounds.maxY && this.maxY > bounds.minY;\n    }\n    /** Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\n     * efficient to only call this method if {@link #aabbContainsPoint(float, float)} returns true. */\n    containsPoint(x, y) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.containsPointPolygon(polygons[i], x, y))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains the point. */\n    containsPointPolygon(polygon, x, y) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let prevIndex = nn - 2;\n        let inside = false;\n        for (let ii = 0; ii < nn; ii += 2) {\n            let vertexY = vertices[ii + 1];\n            let prevY = vertices[prevIndex + 1];\n            if ((vertexY < y && prevY >= y) || (prevY < y && vertexY >= y)) {\n                let vertexX = vertices[ii];\n                if (vertexX + (y - vertexY) / (prevY - vertexY) * (vertices[prevIndex] - vertexX) < x)\n                    inside = !inside;\n            }\n            prevIndex = ii;\n        }\n        return inside;\n    }\n    /** Returns the first bounding box attachment that contains any part of the line segment, or null. When doing many checks, it\n     * is usually more efficient to only call this method if {@link #aabbIntersectsSegment()} returns\n     * true. */\n    intersectsSegment(x1, y1, x2, y2) {\n        let polygons = this.polygons;\n        for (let i = 0, n = polygons.length; i < n; i++)\n            if (this.intersectsSegmentPolygon(polygons[i], x1, y1, x2, y2))\n                return this.boundingBoxes[i];\n        return null;\n    }\n    /** Returns true if the polygon contains any part of the line segment. */\n    intersectsSegmentPolygon(polygon, x1, y1, x2, y2) {\n        let vertices = polygon;\n        let nn = polygon.length;\n        let width12 = x1 - x2, height12 = y1 - y2;\n        let det1 = x1 * y2 - y1 * x2;\n        let x3 = vertices[nn - 2], y3 = vertices[nn - 1];\n        for (let ii = 0; ii < nn; ii += 2) {\n            let x4 = vertices[ii], y4 = vertices[ii + 1];\n            let det2 = x3 * y4 - y3 * x4;\n            let width34 = x3 - x4, height34 = y3 - y4;\n            let det3 = width12 * height34 - height12 * width34;\n            let x = (det1 * width34 - width12 * det2) / det3;\n            if (((x >= x3 && x <= x4) || (x >= x4 && x <= x3)) && ((x >= x1 && x <= x2) || (x >= x2 && x <= x1))) {\n                let y = (det1 * height34 - height12 * det2) / det3;\n                if (((y >= y3 && y <= y4) || (y >= y4 && y <= y3)) && ((y >= y1 && y <= y2) || (y >= y2 && y <= y1)))\n                    return true;\n            }\n            x3 = x4;\n            y3 = y4;\n        }\n        return false;\n    }\n    /** Returns the polygon for the specified bounding box, or null. */\n    getPolygon(boundingBox) {\n        if (!boundingBox)\n            throw new Error(\"boundingBox cannot be null.\");\n        let index = this.boundingBoxes.indexOf(boundingBox);\n        return index == -1 ? null : this.polygons[index];\n    }\n    /** The width of the axis aligned bounding box. */\n    getWidth() {\n        return this.maxX - this.minX;\n    }\n    /** The height of the axis aligned bounding box. */\n    getHeight() {\n        return this.maxY - this.minY;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Pool } from \"./Utils.js\";\nexport class Triangulator {\n    convexPolygons = new Array();\n    convexPolygonsIndices = new Array();\n    indicesArray = new Array();\n    isConcaveArray = new Array();\n    triangles = new Array();\n    polygonPool = new Pool(() => {\n        return new Array();\n    });\n    polygonIndicesPool = new Pool(() => {\n        return new Array();\n    });\n    triangulate(verticesArray) {\n        let vertices = verticesArray;\n        let vertexCount = verticesArray.length >> 1;\n        let indices = this.indicesArray;\n        indices.length = 0;\n        for (let i = 0; i < vertexCount; i++)\n            indices[i] = i;\n        let isConcave = this.isConcaveArray;\n        isConcave.length = 0;\n        for (let i = 0, n = vertexCount; i < n; ++i)\n            isConcave[i] = Triangulator.isConcave(i, vertexCount, vertices, indices);\n        let triangles = this.triangles;\n        triangles.length = 0;\n        while (vertexCount > 3) {\n            // Find ear tip.\n            let previous = vertexCount - 1, i = 0, next = 1;\n            while (true) {\n                outer: if (!isConcave[i]) {\n                    let p1 = indices[previous] << 1, p2 = indices[i] << 1, p3 = indices[next] << 1;\n                    let p1x = vertices[p1], p1y = vertices[p1 + 1];\n                    let p2x = vertices[p2], p2y = vertices[p2 + 1];\n                    let p3x = vertices[p3], p3y = vertices[p3 + 1];\n                    for (let ii = (next + 1) % vertexCount; ii != previous; ii = (ii + 1) % vertexCount) {\n                        if (!isConcave[ii])\n                            continue;\n                        let v = indices[ii] << 1;\n                        let vx = vertices[v], vy = vertices[v + 1];\n                        if (Triangulator.positiveArea(p3x, p3y, p1x, p1y, vx, vy)) {\n                            if (Triangulator.positiveArea(p1x, p1y, p2x, p2y, vx, vy)) {\n                                if (Triangulator.positiveArea(p2x, p2y, p3x, p3y, vx, vy))\n                                    break outer;\n                            }\n                        }\n                    }\n                    break;\n                }\n                if (next == 0) {\n                    do {\n                        if (!isConcave[i])\n                            break;\n                        i--;\n                    } while (i > 0);\n                    break;\n                }\n                previous = i;\n                i = next;\n                next = (next + 1) % vertexCount;\n            }\n            // Cut ear tip.\n            triangles.push(indices[(vertexCount + i - 1) % vertexCount]);\n            triangles.push(indices[i]);\n            triangles.push(indices[(i + 1) % vertexCount]);\n            indices.splice(i, 1);\n            isConcave.splice(i, 1);\n            vertexCount--;\n            let previousIndex = (vertexCount + i - 1) % vertexCount;\n            let nextIndex = i == vertexCount ? 0 : i;\n            isConcave[previousIndex] = Triangulator.isConcave(previousIndex, vertexCount, vertices, indices);\n            isConcave[nextIndex] = Triangulator.isConcave(nextIndex, vertexCount, vertices, indices);\n        }\n        if (vertexCount == 3) {\n            triangles.push(indices[2]);\n            triangles.push(indices[0]);\n            triangles.push(indices[1]);\n        }\n        return triangles;\n    }\n    decompose(verticesArray, triangles) {\n        let vertices = verticesArray;\n        let convexPolygons = this.convexPolygons;\n        this.polygonPool.freeAll(convexPolygons);\n        convexPolygons.length = 0;\n        let convexPolygonsIndices = this.convexPolygonsIndices;\n        this.polygonIndicesPool.freeAll(convexPolygonsIndices);\n        convexPolygonsIndices.length = 0;\n        let polygonIndices = this.polygonIndicesPool.obtain();\n        polygonIndices.length = 0;\n        let polygon = this.polygonPool.obtain();\n        polygon.length = 0;\n        // Merge subsequent triangles if they form a triangle fan.\n        let fanBaseIndex = -1, lastWinding = 0;\n        for (let i = 0, n = triangles.length; i < n; i += 3) {\n            let t1 = triangles[i] << 1, t2 = triangles[i + 1] << 1, t3 = triangles[i + 2] << 1;\n            let x1 = vertices[t1], y1 = vertices[t1 + 1];\n            let x2 = vertices[t2], y2 = vertices[t2 + 1];\n            let x3 = vertices[t3], y3 = vertices[t3 + 1];\n            // If the base of the last triangle is the same as this triangle, check if they form a convex polygon (triangle fan).\n            let merged = false;\n            if (fanBaseIndex == t1) {\n                let o = polygon.length - 4;\n                let winding1 = Triangulator.winding(polygon[o], polygon[o + 1], polygon[o + 2], polygon[o + 3], x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, polygon[0], polygon[1], polygon[2], polygon[3]);\n                if (winding1 == lastWinding && winding2 == lastWinding) {\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(t3);\n                    merged = true;\n                }\n            }\n            // Otherwise make this triangle the new base.\n            if (!merged) {\n                if (polygon.length > 0) {\n                    convexPolygons.push(polygon);\n                    convexPolygonsIndices.push(polygonIndices);\n                }\n                else {\n                    this.polygonPool.free(polygon);\n                    this.polygonIndicesPool.free(polygonIndices);\n                }\n                polygon = this.polygonPool.obtain();\n                polygon.length = 0;\n                polygon.push(x1);\n                polygon.push(y1);\n                polygon.push(x2);\n                polygon.push(y2);\n                polygon.push(x3);\n                polygon.push(y3);\n                polygonIndices = this.polygonIndicesPool.obtain();\n                polygonIndices.length = 0;\n                polygonIndices.push(t1);\n                polygonIndices.push(t2);\n                polygonIndices.push(t3);\n                lastWinding = Triangulator.winding(x1, y1, x2, y2, x3, y3);\n                fanBaseIndex = t1;\n            }\n        }\n        if (polygon.length > 0) {\n            convexPolygons.push(polygon);\n            convexPolygonsIndices.push(polygonIndices);\n        }\n        // Go through the list of polygons and try to merge the remaining triangles with the found triangle fans.\n        for (let i = 0, n = convexPolygons.length; i < n; i++) {\n            polygonIndices = convexPolygonsIndices[i];\n            if (polygonIndices.length == 0)\n                continue;\n            let firstIndex = polygonIndices[0];\n            let lastIndex = polygonIndices[polygonIndices.length - 1];\n            polygon = convexPolygons[i];\n            let o = polygon.length - 4;\n            let prevPrevX = polygon[o], prevPrevY = polygon[o + 1];\n            let prevX = polygon[o + 2], prevY = polygon[o + 3];\n            let firstX = polygon[0], firstY = polygon[1];\n            let secondX = polygon[2], secondY = polygon[3];\n            let winding = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, firstX, firstY);\n            for (let ii = 0; ii < n; ii++) {\n                if (ii == i)\n                    continue;\n                let otherIndices = convexPolygonsIndices[ii];\n                if (otherIndices.length != 3)\n                    continue;\n                let otherFirstIndex = otherIndices[0];\n                let otherSecondIndex = otherIndices[1];\n                let otherLastIndex = otherIndices[2];\n                let otherPoly = convexPolygons[ii];\n                let x3 = otherPoly[otherPoly.length - 2], y3 = otherPoly[otherPoly.length - 1];\n                if (otherFirstIndex != firstIndex || otherSecondIndex != lastIndex)\n                    continue;\n                let winding1 = Triangulator.winding(prevPrevX, prevPrevY, prevX, prevY, x3, y3);\n                let winding2 = Triangulator.winding(x3, y3, firstX, firstY, secondX, secondY);\n                if (winding1 == winding && winding2 == winding) {\n                    otherPoly.length = 0;\n                    otherIndices.length = 0;\n                    polygon.push(x3);\n                    polygon.push(y3);\n                    polygonIndices.push(otherLastIndex);\n                    prevPrevX = prevX;\n                    prevPrevY = prevY;\n                    prevX = x3;\n                    prevY = y3;\n                    ii = 0;\n                }\n            }\n        }\n        // Remove empty polygons that resulted from the merge step above.\n        for (let i = convexPolygons.length - 1; i >= 0; i--) {\n            polygon = convexPolygons[i];\n            if (polygon.length == 0) {\n                convexPolygons.splice(i, 1);\n                this.polygonPool.free(polygon);\n                polygonIndices = convexPolygonsIndices[i];\n                convexPolygonsIndices.splice(i, 1);\n                this.polygonIndicesPool.free(polygonIndices);\n            }\n        }\n        return convexPolygons;\n    }\n    static isConcave(index, vertexCount, vertices, indices) {\n        let previous = indices[(vertexCount + index - 1) % vertexCount] << 1;\n        let current = indices[index] << 1;\n        let next = indices[(index + 1) % vertexCount] << 1;\n        return !this.positiveArea(vertices[previous], vertices[previous + 1], vertices[current], vertices[current + 1], vertices[next], vertices[next + 1]);\n    }\n    static positiveArea(p1x, p1y, p2x, p2y, p3x, p3y) {\n        return p1x * (p3y - p2y) + p2x * (p1y - p3y) + p3x * (p2y - p1y) >= 0;\n    }\n    static winding(p1x, p1y, p2x, p2y, p3x, p3y) {\n        let px = p2x - p1x, py = p2y - p1y;\n        return p3x * py - p3y * px + px * p1y - p1x * py >= 0 ? 1 : -1;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Triangulator } from \"./Triangulator.js\";\nimport { Utils } from \"./Utils.js\";\nexport class SkeletonClipping {\n    triangulator = new Triangulator();\n    clippingPolygon = new Array();\n    clipOutput = new Array();\n    clippedVertices = new Array();\n    clippedUVs = new Array();\n    clippedTriangles = new Array();\n    scratch = new Array();\n    clipAttachment = null;\n    clippingPolygons = null;\n    clipStart(slot, clip) {\n        if (this.clipAttachment)\n            return 0;\n        this.clipAttachment = clip;\n        let n = clip.worldVerticesLength;\n        let vertices = Utils.setArraySize(this.clippingPolygon, n);\n        clip.computeWorldVertices(slot, 0, n, vertices, 0, 2);\n        let clippingPolygon = this.clippingPolygon;\n        SkeletonClipping.makeClockwise(clippingPolygon);\n        let clippingPolygons = this.clippingPolygons = this.triangulator.decompose(clippingPolygon, this.triangulator.triangulate(clippingPolygon));\n        for (let i = 0, n = clippingPolygons.length; i < n; i++) {\n            let polygon = clippingPolygons[i];\n            SkeletonClipping.makeClockwise(polygon);\n            polygon.push(polygon[0]);\n            polygon.push(polygon[1]);\n        }\n        return clippingPolygons.length;\n    }\n    clipEndWithSlot(slot) {\n        if (this.clipAttachment && this.clipAttachment.endSlot == slot.data)\n            this.clipEnd();\n    }\n    clipEnd() {\n        if (!this.clipAttachment)\n            return;\n        this.clipAttachment = null;\n        this.clippingPolygons = null;\n        this.clippedVertices.length = 0;\n        this.clippedTriangles.length = 0;\n        this.clippingPolygon.length = 0;\n    }\n    isClipping() {\n        return this.clipAttachment != null;\n    }\n    clipTriangles(vertices, triangles, trianglesLength, uvs, light, dark, twoColor) {\n        if (uvs && light && dark && typeof twoColor === 'boolean')\n            this.clipTrianglesRender(vertices, triangles, trianglesLength, uvs, light, dark, twoColor);\n        else\n            this.clipTrianglesNoRender(vertices, triangles, trianglesLength);\n    }\n    clipTrianglesNoRender(vertices, triangles, trianglesLength) {\n        let clipOutput = this.clipOutput, clippedVertices = this.clippedVertices;\n        let clippedTriangles = this.clippedTriangles;\n        let polygons = this.clippingPolygons;\n        let polygonsCount = polygons.length;\n        let index = 0;\n        clippedVertices.length = 0;\n        clippedTriangles.length = 0;\n        for (let i = 0; i < trianglesLength; i += 3) {\n            let vertexOffset = triangles[i] << 1;\n            let x1 = vertices[vertexOffset], y1 = vertices[vertexOffset + 1];\n            vertexOffset = triangles[i + 1] << 1;\n            let x2 = vertices[vertexOffset], y2 = vertices[vertexOffset + 1];\n            vertexOffset = triangles[i + 2] << 1;\n            let x3 = vertices[vertexOffset], y3 = vertices[vertexOffset + 1];\n            for (let p = 0; p < polygonsCount; p++) {\n                let s = clippedVertices.length;\n                if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n                    let clipOutputLength = clipOutput.length;\n                    if (clipOutputLength == 0)\n                        continue;\n                    let clipOutputCount = clipOutputLength >> 1;\n                    let clipOutputItems = this.clipOutput;\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * 2);\n                    for (let ii = 0; ii < clipOutputLength; ii += 2, s += 2) {\n                        let x = clipOutputItems[ii], y = clipOutputItems[ii + 1];\n                        clippedVerticesItems[s] = x;\n                        clippedVerticesItems[s + 1] = y;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n                    clipOutputCount--;\n                    for (let ii = 1; ii < clipOutputCount; ii++, s += 3) {\n                        clippedTrianglesItems[s] = index;\n                        clippedTrianglesItems[s + 1] = (index + ii);\n                        clippedTrianglesItems[s + 2] = (index + ii + 1);\n                    }\n                    index += clipOutputCount + 1;\n                }\n                else {\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * 2);\n                    clippedVerticesItems[s] = x1;\n                    clippedVerticesItems[s + 1] = y1;\n                    clippedVerticesItems[s + 2] = x2;\n                    clippedVerticesItems[s + 3] = y2;\n                    clippedVerticesItems[s + 4] = x3;\n                    clippedVerticesItems[s + 5] = y3;\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n                    clippedTrianglesItems[s] = index;\n                    clippedTrianglesItems[s + 1] = (index + 1);\n                    clippedTrianglesItems[s + 2] = (index + 2);\n                    index += 3;\n                    break;\n                }\n            }\n        }\n    }\n    clipTrianglesRender(vertices, triangles, trianglesLength, uvs, light, dark, twoColor) {\n        let clipOutput = this.clipOutput, clippedVertices = this.clippedVertices;\n        let clippedTriangles = this.clippedTriangles;\n        let polygons = this.clippingPolygons;\n        let polygonsCount = polygons.length;\n        let vertexSize = twoColor ? 12 : 8;\n        let index = 0;\n        clippedVertices.length = 0;\n        clippedTriangles.length = 0;\n        for (let i = 0; i < trianglesLength; i += 3) {\n            let vertexOffset = triangles[i] << 1;\n            let x1 = vertices[vertexOffset], y1 = vertices[vertexOffset + 1];\n            let u1 = uvs[vertexOffset], v1 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 1] << 1;\n            let x2 = vertices[vertexOffset], y2 = vertices[vertexOffset + 1];\n            let u2 = uvs[vertexOffset], v2 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 2] << 1;\n            let x3 = vertices[vertexOffset], y3 = vertices[vertexOffset + 1];\n            let u3 = uvs[vertexOffset], v3 = uvs[vertexOffset + 1];\n            for (let p = 0; p < polygonsCount; p++) {\n                let s = clippedVertices.length;\n                if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n                    let clipOutputLength = clipOutput.length;\n                    if (clipOutputLength == 0)\n                        continue;\n                    let d0 = y2 - y3, d1 = x3 - x2, d2 = x1 - x3, d4 = y3 - y1;\n                    let d = 1 / (d0 * d2 + d1 * (y1 - y3));\n                    let clipOutputCount = clipOutputLength >> 1;\n                    let clipOutputItems = this.clipOutput;\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * vertexSize);\n                    for (let ii = 0; ii < clipOutputLength; ii += 2, s += vertexSize) {\n                        let x = clipOutputItems[ii], y = clipOutputItems[ii + 1];\n                        clippedVerticesItems[s] = x;\n                        clippedVerticesItems[s + 1] = y;\n                        clippedVerticesItems[s + 2] = light.r;\n                        clippedVerticesItems[s + 3] = light.g;\n                        clippedVerticesItems[s + 4] = light.b;\n                        clippedVerticesItems[s + 5] = light.a;\n                        let c0 = x - x3, c1 = y - y3;\n                        let a = (d0 * c0 + d1 * c1) * d;\n                        let b = (d4 * c0 + d2 * c1) * d;\n                        let c = 1 - a - b;\n                        clippedVerticesItems[s + 6] = u1 * a + u2 * b + u3 * c;\n                        clippedVerticesItems[s + 7] = v1 * a + v2 * b + v3 * c;\n                        if (twoColor) {\n                            clippedVerticesItems[s + 8] = dark.r;\n                            clippedVerticesItems[s + 9] = dark.g;\n                            clippedVerticesItems[s + 10] = dark.b;\n                            clippedVerticesItems[s + 11] = dark.a;\n                        }\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n                    clipOutputCount--;\n                    for (let ii = 1; ii < clipOutputCount; ii++, s += 3) {\n                        clippedTrianglesItems[s] = index;\n                        clippedTrianglesItems[s + 1] = (index + ii);\n                        clippedTrianglesItems[s + 2] = (index + ii + 1);\n                    }\n                    index += clipOutputCount + 1;\n                }\n                else {\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * vertexSize);\n                    clippedVerticesItems[s] = x1;\n                    clippedVerticesItems[s + 1] = y1;\n                    clippedVerticesItems[s + 2] = light.r;\n                    clippedVerticesItems[s + 3] = light.g;\n                    clippedVerticesItems[s + 4] = light.b;\n                    clippedVerticesItems[s + 5] = light.a;\n                    if (!twoColor) {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = x2;\n                        clippedVerticesItems[s + 9] = y2;\n                        clippedVerticesItems[s + 10] = light.r;\n                        clippedVerticesItems[s + 11] = light.g;\n                        clippedVerticesItems[s + 12] = light.b;\n                        clippedVerticesItems[s + 13] = light.a;\n                        clippedVerticesItems[s + 14] = u2;\n                        clippedVerticesItems[s + 15] = v2;\n                        clippedVerticesItems[s + 16] = x3;\n                        clippedVerticesItems[s + 17] = y3;\n                        clippedVerticesItems[s + 18] = light.r;\n                        clippedVerticesItems[s + 19] = light.g;\n                        clippedVerticesItems[s + 20] = light.b;\n                        clippedVerticesItems[s + 21] = light.a;\n                        clippedVerticesItems[s + 22] = u3;\n                        clippedVerticesItems[s + 23] = v3;\n                    }\n                    else {\n                        clippedVerticesItems[s + 6] = u1;\n                        clippedVerticesItems[s + 7] = v1;\n                        clippedVerticesItems[s + 8] = dark.r;\n                        clippedVerticesItems[s + 9] = dark.g;\n                        clippedVerticesItems[s + 10] = dark.b;\n                        clippedVerticesItems[s + 11] = dark.a;\n                        clippedVerticesItems[s + 12] = x2;\n                        clippedVerticesItems[s + 13] = y2;\n                        clippedVerticesItems[s + 14] = light.r;\n                        clippedVerticesItems[s + 15] = light.g;\n                        clippedVerticesItems[s + 16] = light.b;\n                        clippedVerticesItems[s + 17] = light.a;\n                        clippedVerticesItems[s + 18] = u2;\n                        clippedVerticesItems[s + 19] = v2;\n                        clippedVerticesItems[s + 20] = dark.r;\n                        clippedVerticesItems[s + 21] = dark.g;\n                        clippedVerticesItems[s + 22] = dark.b;\n                        clippedVerticesItems[s + 23] = dark.a;\n                        clippedVerticesItems[s + 24] = x3;\n                        clippedVerticesItems[s + 25] = y3;\n                        clippedVerticesItems[s + 26] = light.r;\n                        clippedVerticesItems[s + 27] = light.g;\n                        clippedVerticesItems[s + 28] = light.b;\n                        clippedVerticesItems[s + 29] = light.a;\n                        clippedVerticesItems[s + 30] = u3;\n                        clippedVerticesItems[s + 31] = v3;\n                        clippedVerticesItems[s + 32] = dark.r;\n                        clippedVerticesItems[s + 33] = dark.g;\n                        clippedVerticesItems[s + 34] = dark.b;\n                        clippedVerticesItems[s + 35] = dark.a;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n                    clippedTrianglesItems[s] = index;\n                    clippedTrianglesItems[s + 1] = (index + 1);\n                    clippedTrianglesItems[s + 2] = (index + 2);\n                    index += 3;\n                    break;\n                }\n            }\n        }\n    }\n    clipTrianglesUnpacked(vertices, triangles, trianglesLength, uvs) {\n        let clipOutput = this.clipOutput, clippedVertices = this.clippedVertices, clippedUVs = this.clippedUVs;\n        let clippedTriangles = this.clippedTriangles;\n        let polygons = this.clippingPolygons;\n        let polygonsCount = polygons.length;\n        let index = 0;\n        clippedVertices.length = 0;\n        clippedUVs.length = 0;\n        clippedTriangles.length = 0;\n        for (let i = 0; i < trianglesLength; i += 3) {\n            let vertexOffset = triangles[i] << 1;\n            let x1 = vertices[vertexOffset], y1 = vertices[vertexOffset + 1];\n            let u1 = uvs[vertexOffset], v1 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 1] << 1;\n            let x2 = vertices[vertexOffset], y2 = vertices[vertexOffset + 1];\n            let u2 = uvs[vertexOffset], v2 = uvs[vertexOffset + 1];\n            vertexOffset = triangles[i + 2] << 1;\n            let x3 = vertices[vertexOffset], y3 = vertices[vertexOffset + 1];\n            let u3 = uvs[vertexOffset], v3 = uvs[vertexOffset + 1];\n            for (let p = 0; p < polygonsCount; p++) {\n                let s = clippedVertices.length;\n                if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n                    let clipOutputLength = clipOutput.length;\n                    if (clipOutputLength == 0)\n                        continue;\n                    let d0 = y2 - y3, d1 = x3 - x2, d2 = x1 - x3, d4 = y3 - y1;\n                    let d = 1 / (d0 * d2 + d1 * (y1 - y3));\n                    let clipOutputCount = clipOutputLength >> 1;\n                    let clipOutputItems = this.clipOutput;\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * 2);\n                    let clippedUVsItems = Utils.setArraySize(clippedUVs, s + clipOutputCount * 2);\n                    for (let ii = 0; ii < clipOutputLength; ii += 2, s += 2) {\n                        let x = clipOutputItems[ii], y = clipOutputItems[ii + 1];\n                        clippedVerticesItems[s] = x;\n                        clippedVerticesItems[s + 1] = y;\n                        let c0 = x - x3, c1 = y - y3;\n                        let a = (d0 * c0 + d1 * c1) * d;\n                        let b = (d4 * c0 + d2 * c1) * d;\n                        let c = 1 - a - b;\n                        clippedUVsItems[s] = u1 * a + u2 * b + u3 * c;\n                        clippedUVsItems[s + 1] = v1 * a + v2 * b + v3 * c;\n                    }\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n                    clipOutputCount--;\n                    for (let ii = 1; ii < clipOutputCount; ii++, s += 3) {\n                        clippedTrianglesItems[s] = index;\n                        clippedTrianglesItems[s + 1] = (index + ii);\n                        clippedTrianglesItems[s + 2] = (index + ii + 1);\n                    }\n                    index += clipOutputCount + 1;\n                }\n                else {\n                    let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * 2);\n                    clippedVerticesItems[s] = x1;\n                    clippedVerticesItems[s + 1] = y1;\n                    clippedVerticesItems[s + 2] = x2;\n                    clippedVerticesItems[s + 3] = y2;\n                    clippedVerticesItems[s + 4] = x3;\n                    clippedVerticesItems[s + 5] = y3;\n                    let clippedUVSItems = Utils.setArraySize(clippedUVs, s + 3 * 2);\n                    clippedUVSItems[s] = u1;\n                    clippedUVSItems[s + 1] = v1;\n                    clippedUVSItems[s + 2] = u2;\n                    clippedUVSItems[s + 3] = v2;\n                    clippedUVSItems[s + 4] = u3;\n                    clippedUVSItems[s + 5] = v3;\n                    s = clippedTriangles.length;\n                    let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n                    clippedTrianglesItems[s] = index;\n                    clippedTrianglesItems[s + 1] = (index + 1);\n                    clippedTrianglesItems[s + 2] = (index + 2);\n                    index += 3;\n                    break;\n                }\n            }\n        }\n    }\n    /** Clips the input triangle against the convex, clockwise clipping area. If the triangle lies entirely within the clipping\n     * area, false is returned. The clipping area must duplicate the first vertex at the end of the vertices list. */\n    clip(x1, y1, x2, y2, x3, y3, clippingArea, output) {\n        let originalOutput = output;\n        let clipped = false;\n        // Avoid copy at the end.\n        let input;\n        if (clippingArea.length % 4 >= 2) {\n            input = output;\n            output = this.scratch;\n        }\n        else\n            input = this.scratch;\n        input.length = 0;\n        input.push(x1);\n        input.push(y1);\n        input.push(x2);\n        input.push(y2);\n        input.push(x3);\n        input.push(y3);\n        input.push(x1);\n        input.push(y1);\n        output.length = 0;\n        let clippingVerticesLast = clippingArea.length - 4;\n        let clippingVertices = clippingArea;\n        for (let i = 0;; i += 2) {\n            let edgeX = clippingVertices[i], edgeY = clippingVertices[i + 1];\n            let ex = edgeX - clippingVertices[i + 2], ey = edgeY - clippingVertices[i + 3];\n            let outputStart = output.length;\n            let inputVertices = input;\n            for (let ii = 0, nn = input.length - 2; ii < nn;) {\n                let inputX = inputVertices[ii], inputY = inputVertices[ii + 1];\n                ii += 2;\n                let inputX2 = inputVertices[ii], inputY2 = inputVertices[ii + 1];\n                let s2 = ey * (edgeX - inputX2) > ex * (edgeY - inputY2);\n                let s1 = ey * (edgeX - inputX) - ex * (edgeY - inputY);\n                if (s1 > 0) {\n                    if (s2) { // v1 inside, v2 inside\n                        output.push(inputX2);\n                        output.push(inputY2);\n                        continue;\n                    }\n                    // v1 inside, v2 outside\n                    let ix = inputX2 - inputX, iy = inputY2 - inputY, t = s1 / (ix * ey - iy * ex);\n                    if (t >= 0 && t <= 1) {\n                        output.push(inputX + ix * t);\n                        output.push(inputY + iy * t);\n                    }\n                    else {\n                        output.push(inputX2);\n                        output.push(inputY2);\n                        continue;\n                    }\n                }\n                else if (s2) { // v1 outside, v2 inside\n                    let ix = inputX2 - inputX, iy = inputY2 - inputY, t = s1 / (ix * ey - iy * ex);\n                    if (t >= 0 && t <= 1) {\n                        output.push(inputX + ix * t);\n                        output.push(inputY + iy * t);\n                        output.push(inputX2);\n                        output.push(inputY2);\n                    }\n                    else {\n                        output.push(inputX2);\n                        output.push(inputY2);\n                        continue;\n                    }\n                }\n                clipped = true;\n            }\n            if (outputStart == output.length) { // All edges outside.\n                originalOutput.length = 0;\n                return true;\n            }\n            output.push(output[0]);\n            output.push(output[1]);\n            if (i == clippingVerticesLast)\n                break;\n            let temp = output;\n            output = input;\n            output.length = 0;\n            input = temp;\n        }\n        if (originalOutput != output) {\n            originalOutput.length = 0;\n            for (let i = 0, n = output.length - 2; i < n; i++)\n                originalOutput[i] = output[i];\n        }\n        else\n            originalOutput.length = originalOutput.length - 2;\n        return clipped;\n    }\n    static makeClockwise(polygon) {\n        let vertices = polygon;\n        let verticeslength = polygon.length;\n        let area = vertices[verticeslength - 2] * vertices[1] - vertices[0] * vertices[verticeslength - 1], p1x = 0, p1y = 0, p2x = 0, p2y = 0;\n        for (let i = 0, n = verticeslength - 3; i < n; i += 2) {\n            p1x = vertices[i];\n            p1y = vertices[i + 1];\n            p2x = vertices[i + 2];\n            p2y = vertices[i + 3];\n            area += p1x * p2y - p2x * p1y;\n        }\n        if (area < 0)\n            return;\n        for (let i = 0, lastX = verticeslength - 2, n = verticeslength >> 1; i < n; i += 2) {\n            let x = vertices[i], y = vertices[i + 1];\n            let other = lastX - i;\n            vertices[i] = vertices[other];\n            vertices[i + 1] = vertices[other + 1];\n            vertices[other] = x;\n            vertices[other + 1] = y;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, InheritTimeline, AttachmentTimeline, RGBATimeline, RGBTimeline, AlphaTimeline, RGBA2Timeline, RGB2Timeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline, PhysicsConstraintResetTimeline, PhysicsConstraintInertiaTimeline, PhysicsConstraintStrengthTimeline, PhysicsConstraintDampingTimeline, PhysicsConstraintMassTimeline, PhysicsConstraintWindTimeline, PhysicsConstraintGravityTimeline, PhysicsConstraintMixTimeline } from \"./Animation.js\";\nimport { BoneData, Inherit } from \"./BoneData.js\";\nimport { EventData } from \"./EventData.js\";\nimport { Event } from \"./Event.js\";\nimport { IkConstraintData } from \"./IkConstraintData.js\";\nimport { PathConstraintData, PositionMode, SpacingMode, RotateMode } from \"./PathConstraintData.js\";\nimport { SkeletonData } from \"./SkeletonData.js\";\nimport { Skin } from \"./Skin.js\";\nimport { SlotData, BlendMode } from \"./SlotData.js\";\nimport { TransformConstraintData } from \"./TransformConstraintData.js\";\nimport { Utils, Color } from \"./Utils.js\";\nimport { Sequence, SequenceMode } from \"./attachments/Sequence.js\";\nimport { SequenceTimeline } from \"./Animation.js\";\nimport { PhysicsConstraintData } from \"./PhysicsConstraintData.js\";\n/** Loads skeleton data in the Spine JSON format.\n *\n * See [Spine JSON format](http://esotericsoftware.com/spine-json-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonJson {\n    attachmentLoader;\n    /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n     * runtime than were used in Spine.\n     *\n     * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n    scale = 1;\n    linkedMeshes = new Array();\n    constructor(attachmentLoader) {\n        this.attachmentLoader = attachmentLoader;\n    }\n    readSkeletonData(json) {\n        let scale = this.scale;\n        let skeletonData = new SkeletonData();\n        let root = typeof (json) === \"string\" ? JSON.parse(json) : json;\n        // Skeleton\n        let skeletonMap = root.skeleton;\n        if (skeletonMap) {\n            skeletonData.hash = skeletonMap.hash;\n            skeletonData.version = skeletonMap.spine;\n            skeletonData.x = skeletonMap.x;\n            skeletonData.y = skeletonMap.y;\n            skeletonData.width = skeletonMap.width;\n            skeletonData.height = skeletonMap.height;\n            skeletonData.referenceScale = getValue(skeletonMap, \"referenceScale\", 100) * scale;\n            skeletonData.fps = skeletonMap.fps;\n            skeletonData.imagesPath = skeletonMap.images ?? null;\n            skeletonData.audioPath = skeletonMap.audio ?? null;\n        }\n        // Bones\n        if (root.bones) {\n            for (let i = 0; i < root.bones.length; i++) {\n                let boneMap = root.bones[i];\n                let parent = null;\n                let parentName = getValue(boneMap, \"parent\", null);\n                if (parentName)\n                    parent = skeletonData.findBone(parentName);\n                let data = new BoneData(skeletonData.bones.length, boneMap.name, parent);\n                data.length = getValue(boneMap, \"length\", 0) * scale;\n                data.x = getValue(boneMap, \"x\", 0) * scale;\n                data.y = getValue(boneMap, \"y\", 0) * scale;\n                data.rotation = getValue(boneMap, \"rotation\", 0);\n                data.scaleX = getValue(boneMap, \"scaleX\", 1);\n                data.scaleY = getValue(boneMap, \"scaleY\", 1);\n                data.shearX = getValue(boneMap, \"shearX\", 0);\n                data.shearY = getValue(boneMap, \"shearY\", 0);\n                data.inherit = Utils.enumValue(Inherit, getValue(boneMap, \"inherit\", \"Normal\"));\n                data.skinRequired = getValue(boneMap, \"skin\", false);\n                let color = getValue(boneMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                skeletonData.bones.push(data);\n            }\n        }\n        // Slots.\n        if (root.slots) {\n            for (let i = 0; i < root.slots.length; i++) {\n                let slotMap = root.slots[i];\n                let slotName = slotMap.name;\n                let boneData = skeletonData.findBone(slotMap.bone);\n                if (!boneData)\n                    throw new Error(`Couldn't find bone ${slotMap.bone} for slot ${slotName}`);\n                let data = new SlotData(skeletonData.slots.length, slotName, boneData);\n                let color = getValue(slotMap, \"color\", null);\n                if (color)\n                    data.color.setFromString(color);\n                let dark = getValue(slotMap, \"dark\", null);\n                if (dark)\n                    data.darkColor = Color.fromString(dark);\n                data.attachmentName = getValue(slotMap, \"attachment\", null);\n                data.blendMode = Utils.enumValue(BlendMode, getValue(slotMap, \"blend\", \"normal\"));\n                data.visible = getValue(slotMap, \"visible\", true);\n                skeletonData.slots.push(data);\n            }\n        }\n        // IK constraints\n        if (root.ik) {\n            for (let i = 0; i < root.ik.length; i++) {\n                let constraintMap = root.ik[i];\n                let data = new IkConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let bone = skeletonData.findBone(constraintMap.bones[ii]);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${constraintMap.bones[ii]} for IK constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let target = skeletonData.findBone(constraintMap.target);\n                ;\n                if (!target)\n                    throw new Error(`Couldn't find target bone ${constraintMap.target} for IK constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.mix = getValue(constraintMap, \"mix\", 1);\n                data.softness = getValue(constraintMap, \"softness\", 0) * scale;\n                data.bendDirection = getValue(constraintMap, \"bendPositive\", true) ? 1 : -1;\n                data.compress = getValue(constraintMap, \"compress\", false);\n                data.stretch = getValue(constraintMap, \"stretch\", false);\n                data.uniform = getValue(constraintMap, \"uniform\", false);\n                skeletonData.ikConstraints.push(data);\n            }\n        }\n        // Transform constraints.\n        if (root.transform) {\n            for (let i = 0; i < root.transform.length; i++) {\n                let constraintMap = root.transform[i];\n                let data = new TransformConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let boneName = constraintMap.bones[ii];\n                    let bone = skeletonData.findBone(boneName);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${boneName} for transform constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let targetName = constraintMap.target;\n                let target = skeletonData.findBone(targetName);\n                if (!target)\n                    throw new Error(`Couldn't find target bone ${targetName} for transform constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.local = getValue(constraintMap, \"local\", false);\n                data.relative = getValue(constraintMap, \"relative\", false);\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.offsetX = getValue(constraintMap, \"x\", 0) * scale;\n                data.offsetY = getValue(constraintMap, \"y\", 0) * scale;\n                data.offsetScaleX = getValue(constraintMap, \"scaleX\", 0);\n                data.offsetScaleY = getValue(constraintMap, \"scaleY\", 0);\n                data.offsetShearY = getValue(constraintMap, \"shearY\", 0);\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                data.mixScaleX = getValue(constraintMap, \"mixScaleX\", 1);\n                data.mixScaleY = getValue(constraintMap, \"mixScaleY\", data.mixScaleX);\n                data.mixShearY = getValue(constraintMap, \"mixShearY\", 1);\n                skeletonData.transformConstraints.push(data);\n            }\n        }\n        // Path constraints.\n        if (root.path) {\n            for (let i = 0; i < root.path.length; i++) {\n                let constraintMap = root.path[i];\n                let data = new PathConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                for (let ii = 0; ii < constraintMap.bones.length; ii++) {\n                    let boneName = constraintMap.bones[ii];\n                    let bone = skeletonData.findBone(boneName);\n                    if (!bone)\n                        throw new Error(`Couldn't find bone ${boneName} for path constraint ${constraintMap.name}.`);\n                    data.bones.push(bone);\n                }\n                let targetName = constraintMap.target;\n                let target = skeletonData.findSlot(targetName);\n                if (!target)\n                    throw new Error(`Couldn't find target slot ${targetName} for path constraint ${constraintMap.name}.`);\n                data.target = target;\n                data.positionMode = Utils.enumValue(PositionMode, getValue(constraintMap, \"positionMode\", \"Percent\"));\n                data.spacingMode = Utils.enumValue(SpacingMode, getValue(constraintMap, \"spacingMode\", \"Length\"));\n                data.rotateMode = Utils.enumValue(RotateMode, getValue(constraintMap, \"rotateMode\", \"Tangent\"));\n                data.offsetRotation = getValue(constraintMap, \"rotation\", 0);\n                data.position = getValue(constraintMap, \"position\", 0);\n                if (data.positionMode == PositionMode.Fixed)\n                    data.position *= scale;\n                data.spacing = getValue(constraintMap, \"spacing\", 0);\n                if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed)\n                    data.spacing *= scale;\n                data.mixRotate = getValue(constraintMap, \"mixRotate\", 1);\n                data.mixX = getValue(constraintMap, \"mixX\", 1);\n                data.mixY = getValue(constraintMap, \"mixY\", data.mixX);\n                skeletonData.pathConstraints.push(data);\n            }\n        }\n        // Physics constraints.\n        if (root.physics) {\n            for (let i = 0; i < root.physics.length; i++) {\n                const constraintMap = root.physics[i];\n                const data = new PhysicsConstraintData(constraintMap.name);\n                data.order = getValue(constraintMap, \"order\", 0);\n                data.skinRequired = getValue(constraintMap, \"skin\", false);\n                const boneName = constraintMap.bone;\n                const bone = skeletonData.findBone(boneName);\n                if (bone == null)\n                    throw new Error(\"Physics bone not found: \" + boneName);\n                data.bone = bone;\n                data.x = getValue(constraintMap, \"x\", 0);\n                data.y = getValue(constraintMap, \"y\", 0);\n                data.rotate = getValue(constraintMap, \"rotate\", 0);\n                data.scaleX = getValue(constraintMap, \"scaleX\", 0);\n                data.shearX = getValue(constraintMap, \"shearX\", 0);\n                data.limit = getValue(constraintMap, \"limit\", 5000) * scale;\n                data.step = 1 / getValue(constraintMap, \"fps\", 60);\n                data.inertia = getValue(constraintMap, \"inertia\", 1);\n                data.strength = getValue(constraintMap, \"strength\", 100);\n                data.damping = getValue(constraintMap, \"damping\", 1);\n                data.massInverse = 1 / getValue(constraintMap, \"mass\", 1);\n                data.wind = getValue(constraintMap, \"wind\", 0);\n                data.gravity = getValue(constraintMap, \"gravity\", 0);\n                data.mix = getValue(constraintMap, \"mix\", 1);\n                data.inertiaGlobal = getValue(constraintMap, \"inertiaGlobal\", false);\n                data.strengthGlobal = getValue(constraintMap, \"strengthGlobal\", false);\n                data.dampingGlobal = getValue(constraintMap, \"dampingGlobal\", false);\n                data.massGlobal = getValue(constraintMap, \"massGlobal\", false);\n                data.windGlobal = getValue(constraintMap, \"windGlobal\", false);\n                data.gravityGlobal = getValue(constraintMap, \"gravityGlobal\", false);\n                data.mixGlobal = getValue(constraintMap, \"mixGlobal\", false);\n                skeletonData.physicsConstraints.push(data);\n            }\n        }\n        // Skins.\n        if (root.skins) {\n            for (let i = 0; i < root.skins.length; i++) {\n                let skinMap = root.skins[i];\n                let skin = new Skin(skinMap.name);\n                if (skinMap.bones) {\n                    for (let ii = 0; ii < skinMap.bones.length; ii++) {\n                        let boneName = skinMap.bones[ii];\n                        let bone = skeletonData.findBone(boneName);\n                        if (!bone)\n                            throw new Error(`Couldn't find bone ${boneName} for skin ${skinMap.name}.`);\n                        skin.bones.push(bone);\n                    }\n                }\n                if (skinMap.ik) {\n                    for (let ii = 0; ii < skinMap.ik.length; ii++) {\n                        let constraintName = skinMap.ik[ii];\n                        let constraint = skeletonData.findIkConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find IK constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.transform) {\n                    for (let ii = 0; ii < skinMap.transform.length; ii++) {\n                        let constraintName = skinMap.transform[ii];\n                        let constraint = skeletonData.findTransformConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find transform constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.path) {\n                    for (let ii = 0; ii < skinMap.path.length; ii++) {\n                        let constraintName = skinMap.path[ii];\n                        let constraint = skeletonData.findPathConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find path constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                if (skinMap.physics) {\n                    for (let ii = 0; ii < skinMap.physics.length; ii++) {\n                        let constraintName = skinMap.physics[ii];\n                        let constraint = skeletonData.findPhysicsConstraint(constraintName);\n                        if (!constraint)\n                            throw new Error(`Couldn't find physics constraint ${constraintName} for skin ${skinMap.name}.`);\n                        skin.constraints.push(constraint);\n                    }\n                }\n                for (let slotName in skinMap.attachments) {\n                    let slot = skeletonData.findSlot(slotName);\n                    if (!slot)\n                        throw new Error(`Couldn't find slot ${slotName} for skin ${skinMap.name}.`);\n                    let slotMap = skinMap.attachments[slotName];\n                    for (let entryName in slotMap) {\n                        let attachment = this.readAttachment(slotMap[entryName], skin, slot.index, entryName, skeletonData);\n                        if (attachment)\n                            skin.setAttachment(slot.index, entryName, attachment);\n                    }\n                }\n                skeletonData.skins.push(skin);\n                if (skin.name == \"default\")\n                    skeletonData.defaultSkin = skin;\n            }\n        }\n        // Linked meshes.\n        for (let i = 0, n = this.linkedMeshes.length; i < n; i++) {\n            let linkedMesh = this.linkedMeshes[i];\n            let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n            if (!skin)\n                throw new Error(`Skin not found: ${linkedMesh.skin}`);\n            let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n            if (!parent)\n                throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n            linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n            linkedMesh.mesh.setParentMesh(parent);\n            if (linkedMesh.mesh.region != null)\n                linkedMesh.mesh.updateRegion();\n        }\n        this.linkedMeshes.length = 0;\n        // Events.\n        if (root.events) {\n            for (let eventName in root.events) {\n                let eventMap = root.events[eventName];\n                let data = new EventData(eventName);\n                data.intValue = getValue(eventMap, \"int\", 0);\n                data.floatValue = getValue(eventMap, \"float\", 0);\n                data.stringValue = getValue(eventMap, \"string\", \"\");\n                data.audioPath = getValue(eventMap, \"audio\", null);\n                if (data.audioPath) {\n                    data.volume = getValue(eventMap, \"volume\", 1);\n                    data.balance = getValue(eventMap, \"balance\", 0);\n                }\n                skeletonData.events.push(data);\n            }\n        }\n        // Animations.\n        if (root.animations) {\n            for (let animationName in root.animations) {\n                let animationMap = root.animations[animationName];\n                this.readAnimation(animationMap, animationName, skeletonData);\n            }\n        }\n        return skeletonData;\n    }\n    readAttachment(map, skin, slotIndex, name, skeletonData) {\n        let scale = this.scale;\n        name = getValue(map, \"name\", name);\n        switch (getValue(map, \"type\", \"region\")) {\n            case \"region\": {\n                let path = getValue(map, \"path\", name);\n                let sequence = this.readSequence(getValue(map, \"sequence\", null));\n                let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n                if (!region)\n                    return null;\n                region.path = path;\n                region.x = getValue(map, \"x\", 0) * scale;\n                region.y = getValue(map, \"y\", 0) * scale;\n                region.scaleX = getValue(map, \"scaleX\", 1);\n                region.scaleY = getValue(map, \"scaleY\", 1);\n                region.rotation = getValue(map, \"rotation\", 0);\n                region.width = map.width * scale;\n                region.height = map.height * scale;\n                region.sequence = sequence;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    region.color.setFromString(color);\n                if (region.region != null)\n                    region.updateRegion();\n                return region;\n            }\n            case \"boundingbox\": {\n                let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n                if (!box)\n                    return null;\n                this.readVertices(map, box, map.vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    box.color.setFromString(color);\n                return box;\n            }\n            case \"mesh\":\n            case \"linkedmesh\": {\n                let path = getValue(map, \"path\", name);\n                let sequence = this.readSequence(getValue(map, \"sequence\", null));\n                let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n                if (!mesh)\n                    return null;\n                mesh.path = path;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    mesh.color.setFromString(color);\n                mesh.width = getValue(map, \"width\", 0) * scale;\n                mesh.height = getValue(map, \"height\", 0) * scale;\n                mesh.sequence = sequence;\n                let parent = getValue(map, \"parent\", null);\n                if (parent) {\n                    this.linkedMeshes.push(new LinkedMesh(mesh, getValue(map, \"skin\", null), slotIndex, parent, getValue(map, \"timelines\", true)));\n                    return mesh;\n                }\n                let uvs = map.uvs;\n                this.readVertices(map, mesh, uvs.length);\n                mesh.triangles = map.triangles;\n                mesh.regionUVs = uvs;\n                if (mesh.region != null)\n                    mesh.updateRegion();\n                mesh.edges = getValue(map, \"edges\", null);\n                mesh.hullLength = getValue(map, \"hull\", 0) * 2;\n                return mesh;\n            }\n            case \"path\": {\n                let path = this.attachmentLoader.newPathAttachment(skin, name);\n                if (!path)\n                    return null;\n                path.closed = getValue(map, \"closed\", false);\n                path.constantSpeed = getValue(map, \"constantSpeed\", true);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, path, vertexCount << 1);\n                let lengths = Utils.newArray(vertexCount / 3, 0);\n                for (let i = 0; i < map.lengths.length; i++)\n                    lengths[i] = map.lengths[i] * scale;\n                path.lengths = lengths;\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    path.color.setFromString(color);\n                return path;\n            }\n            case \"point\": {\n                let point = this.attachmentLoader.newPointAttachment(skin, name);\n                if (!point)\n                    return null;\n                point.x = getValue(map, \"x\", 0) * scale;\n                point.y = getValue(map, \"y\", 0) * scale;\n                point.rotation = getValue(map, \"rotation\", 0);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    point.color.setFromString(color);\n                return point;\n            }\n            case \"clipping\": {\n                let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n                if (!clip)\n                    return null;\n                let end = getValue(map, \"end\", null);\n                if (end)\n                    clip.endSlot = skeletonData.findSlot(end);\n                let vertexCount = map.vertexCount;\n                this.readVertices(map, clip, vertexCount << 1);\n                let color = getValue(map, \"color\", null);\n                if (color)\n                    clip.color.setFromString(color);\n                return clip;\n            }\n        }\n        return null;\n    }\n    readSequence(map) {\n        if (map == null)\n            return null;\n        let sequence = new Sequence(getValue(map, \"count\", 0));\n        sequence.start = getValue(map, \"start\", 1);\n        sequence.digits = getValue(map, \"digits\", 0);\n        sequence.setupIndex = getValue(map, \"setup\", 0);\n        return sequence;\n    }\n    readVertices(map, attachment, verticesLength) {\n        let scale = this.scale;\n        attachment.worldVerticesLength = verticesLength;\n        let vertices = map.vertices;\n        if (verticesLength == vertices.length) {\n            let scaledVertices = Utils.toFloatArray(vertices);\n            if (scale != 1) {\n                for (let i = 0, n = vertices.length; i < n; i++)\n                    scaledVertices[i] *= scale;\n            }\n            attachment.vertices = scaledVertices;\n            return;\n        }\n        let weights = new Array();\n        let bones = new Array();\n        for (let i = 0, n = vertices.length; i < n;) {\n            let boneCount = vertices[i++];\n            bones.push(boneCount);\n            for (let nn = i + boneCount * 4; i < nn; i += 4) {\n                bones.push(vertices[i]);\n                weights.push(vertices[i + 1] * scale);\n                weights.push(vertices[i + 2] * scale);\n                weights.push(vertices[i + 3]);\n            }\n        }\n        attachment.bones = bones;\n        attachment.vertices = Utils.toFloatArray(weights);\n    }\n    readAnimation(map, name, skeletonData) {\n        let scale = this.scale;\n        let timelines = new Array();\n        // Slot timelines.\n        if (map.slots) {\n            for (let slotName in map.slots) {\n                let slotMap = map.slots[slotName];\n                let slot = skeletonData.findSlot(slotName);\n                if (!slot)\n                    throw new Error(\"Slot not found: \" + slotName);\n                let slotIndex = slot.index;\n                for (let timelineName in slotMap) {\n                    let timelineMap = slotMap[timelineName];\n                    if (!timelineMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName == \"attachment\") {\n                        let timeline = new AttachmentTimeline(frames, slotIndex);\n                        for (let frame = 0; frame < frames; frame++) {\n                            let keyMap = timelineMap[frame];\n                            timeline.setFrame(frame, getValue(keyMap, \"time\", 0), getValue(keyMap, \"name\", null));\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgba\") {\n                        let timeline = new RGBATimeline(frames, frames << 2, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb\") {\n                        let timeline = new RGBTimeline(frames, frames * 3, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.color);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.color);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"alpha\") {\n                        timelines.push(readTimeline1(timelineMap, new AlphaTimeline(frames, frames, slotIndex), 0, 1));\n                    }\n                    else if (timelineName == \"rgba2\") {\n                        let timeline = new RGBA2Timeline(frames, frames * 7, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color.a, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color.a, newColor.a, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 6, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                    else if (timelineName == \"rgb2\") {\n                        let timeline = new RGB2Timeline(frames, frames * 6, slotIndex);\n                        let keyMap = timelineMap[0];\n                        let time = getValue(keyMap, \"time\", 0);\n                        let color = Color.fromString(keyMap.light);\n                        let color2 = Color.fromString(keyMap.dark);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, color.r, color.g, color.b, color2.r, color2.g, color2.b);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let newColor = Color.fromString(nextMap.light);\n                            let newColor2 = Color.fromString(nextMap.dark);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, color.r, newColor.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, color.g, newColor.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, color.b, newColor.b, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, color2.r, newColor2.r, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, color2.g, newColor2.g, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, color2.b, newColor2.b, 1);\n                            }\n                            time = time2;\n                            color = newColor;\n                            color2 = newColor2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Bone timelines.\n        if (map.bones) {\n            for (let boneName in map.bones) {\n                let boneMap = map.bones[boneName];\n                let bone = skeletonData.findBone(boneName);\n                if (!bone)\n                    throw new Error(\"Bone not found: \" + boneName);\n                let boneIndex = bone.index;\n                for (let timelineName in boneMap) {\n                    let timelineMap = boneMap[timelineName];\n                    let frames = timelineMap.length;\n                    if (frames == 0)\n                        continue;\n                    if (timelineName === \"rotate\") {\n                        timelines.push(readTimeline1(timelineMap, new RotateTimeline(frames, frames, boneIndex), 0, 1));\n                    }\n                    else if (timelineName === \"translate\") {\n                        let timeline = new TranslateTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, scale));\n                    }\n                    else if (timelineName === \"translatex\") {\n                        let timeline = new TranslateXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"translatey\") {\n                        let timeline = new TranslateYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, scale));\n                    }\n                    else if (timelineName === \"scale\") {\n                        let timeline = new ScaleTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 1, 1));\n                    }\n                    else if (timelineName === \"scalex\") {\n                        let timeline = new ScaleXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"scaley\") {\n                        let timeline = new ScaleYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 1, 1));\n                    }\n                    else if (timelineName === \"shear\") {\n                        let timeline = new ShearTimeline(frames, frames << 1, boneIndex);\n                        timelines.push(readTimeline2(timelineMap, timeline, \"x\", \"y\", 0, 1));\n                    }\n                    else if (timelineName === \"shearx\") {\n                        let timeline = new ShearXTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                    else if (timelineName === \"sheary\") {\n                        let timeline = new ShearYTimeline(frames, frames, boneIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                    }\n                    else if (timelineName === \"inherit\") {\n                        let timeline = new InheritTimeline(frames, bone.index);\n                        for (let frame = 0; frame < timelineMap.length; frame++) {\n                            let aFrame = timelineMap[frame];\n                            timeline.setFrame(frame, getValue(aFrame, \"time\", 0), Utils.enumValue(Inherit, getValue(aFrame, \"inherit\", \"Normal\")));\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // IK constraint timelines.\n        if (map.ik) {\n            for (let constraintName in map.ik) {\n                let constraintMap = map.ik[constraintName];\n                let keyMap = constraintMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findIkConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"IK Constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.ikConstraints.indexOf(constraint);\n                let timeline = new IkConstraintTimeline(constraintMap.length, constraintMap.length << 1, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mix = getValue(keyMap, \"mix\", 1);\n                let softness = getValue(keyMap, \"softness\", 0) * scale;\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mix, softness, getValue(keyMap, \"bendPositive\", true) ? 1 : -1, getValue(keyMap, \"compress\", false), getValue(keyMap, \"stretch\", false));\n                    let nextMap = constraintMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mix2 = getValue(nextMap, \"mix\", 1);\n                    let softness2 = getValue(nextMap, \"softness\", 0) * scale;\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mix, mix2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, softness, softness2, scale);\n                    }\n                    time = time2;\n                    mix = mix2;\n                    softness = softness2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Transform constraint timelines.\n        if (map.transform) {\n            for (let constraintName in map.transform) {\n                let timelineMap = map.transform[constraintName];\n                let keyMap = timelineMap[0];\n                if (!keyMap)\n                    continue;\n                let constraint = skeletonData.findTransformConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"Transform constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.transformConstraints.indexOf(constraint);\n                let timeline = new TransformConstraintTimeline(timelineMap.length, timelineMap.length * 6, constraintIndex);\n                let time = getValue(keyMap, \"time\", 0);\n                let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                let mixX = getValue(keyMap, \"mixX\", 1);\n                let mixY = getValue(keyMap, \"mixY\", mixX);\n                let mixScaleX = getValue(keyMap, \"mixScaleX\", 1);\n                let mixScaleY = getValue(keyMap, \"mixScaleY\", mixScaleX);\n                let mixShearY = getValue(keyMap, \"mixShearY\", 1);\n                for (let frame = 0, bezier = 0;; frame++) {\n                    timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n                    let nextMap = timelineMap[frame + 1];\n                    if (!nextMap) {\n                        timeline.shrink(bezier);\n                        break;\n                    }\n                    let time2 = getValue(nextMap, \"time\", 0);\n                    let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                    let mixX2 = getValue(nextMap, \"mixX\", 1);\n                    let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                    let mixScaleX2 = getValue(nextMap, \"mixScaleX\", 1);\n                    let mixScaleY2 = getValue(nextMap, \"mixScaleY\", mixScaleX2);\n                    let mixShearY2 = getValue(nextMap, \"mixShearY\", 1);\n                    let curve = keyMap.curve;\n                    if (curve) {\n                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n                        bezier = readCurve(curve, timeline, bezier, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n                    }\n                    time = time2;\n                    mixRotate = mixRotate2;\n                    mixX = mixX2;\n                    mixY = mixY2;\n                    mixScaleX = mixScaleX2;\n                    mixScaleY = mixScaleY2;\n                    mixScaleX = mixScaleX2;\n                    keyMap = nextMap;\n                }\n                timelines.push(timeline);\n            }\n        }\n        // Path constraint timelines.\n        if (map.path) {\n            for (let constraintName in map.path) {\n                let constraintMap = map.path[constraintName];\n                let constraint = skeletonData.findPathConstraint(constraintName);\n                if (!constraint)\n                    throw new Error(\"Path constraint not found: \" + constraintName);\n                let constraintIndex = skeletonData.pathConstraints.indexOf(constraint);\n                for (let timelineName in constraintMap) {\n                    let timelineMap = constraintMap[timelineName];\n                    let keyMap = timelineMap[0];\n                    if (!keyMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName === \"position\") {\n                        let timeline = new PathConstraintPositionTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.positionMode == PositionMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"spacing\") {\n                        let timeline = new PathConstraintSpacingTimeline(frames, frames, constraintIndex);\n                        timelines.push(readTimeline1(timelineMap, timeline, 0, constraint.spacingMode == SpacingMode.Length || constraint.spacingMode == SpacingMode.Fixed ? scale : 1));\n                    }\n                    else if (timelineName === \"mix\") {\n                        let timeline = new PathConstraintMixTimeline(frames, frames * 3, constraintIndex);\n                        let time = getValue(keyMap, \"time\", 0);\n                        let mixRotate = getValue(keyMap, \"mixRotate\", 1);\n                        let mixX = getValue(keyMap, \"mixX\", 1);\n                        let mixY = getValue(keyMap, \"mixY\", mixX);\n                        for (let frame = 0, bezier = 0;; frame++) {\n                            timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n                            let nextMap = timelineMap[frame + 1];\n                            if (!nextMap) {\n                                timeline.shrink(bezier);\n                                break;\n                            }\n                            let time2 = getValue(nextMap, \"time\", 0);\n                            let mixRotate2 = getValue(nextMap, \"mixRotate\", 1);\n                            let mixX2 = getValue(nextMap, \"mixX\", 1);\n                            let mixY2 = getValue(nextMap, \"mixY\", mixX2);\n                            let curve = keyMap.curve;\n                            if (curve) {\n                                bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, mixX, mixX2, 1);\n                                bezier = readCurve(curve, timeline, bezier, frame, 2, time, time2, mixY, mixY2, 1);\n                            }\n                            time = time2;\n                            mixRotate = mixRotate2;\n                            mixX = mixX2;\n                            mixY = mixY2;\n                            keyMap = nextMap;\n                        }\n                        timelines.push(timeline);\n                    }\n                }\n            }\n        }\n        // Physics constraint timelines.\n        if (map.physics) {\n            for (let constraintName in map.physics) {\n                let constraintMap = map.physics[constraintName];\n                let constraintIndex = -1;\n                if (constraintName.length > 0) {\n                    let constraint = skeletonData.findPhysicsConstraint(constraintName);\n                    if (!constraint)\n                        throw new Error(\"Physics constraint not found: \" + constraintName);\n                    constraintIndex = skeletonData.physicsConstraints.indexOf(constraint);\n                }\n                for (let timelineName in constraintMap) {\n                    let timelineMap = constraintMap[timelineName];\n                    let keyMap = timelineMap[0];\n                    if (!keyMap)\n                        continue;\n                    let frames = timelineMap.length;\n                    if (timelineName == \"reset\") {\n                        const timeline = new PhysicsConstraintResetTimeline(frames, constraintIndex);\n                        for (let frame = 0; keyMap != null; keyMap = timelineMap[frame + 1], frame++)\n                            timeline.setFrame(frame, getValue(keyMap, \"time\", 0));\n                        timelines.push(timeline);\n                        continue;\n                    }\n                    let timeline;\n                    if (timelineName == \"inertia\")\n                        timeline = new PhysicsConstraintInertiaTimeline(frames, frames, constraintIndex);\n                    else if (timelineName == \"strength\")\n                        timeline = new PhysicsConstraintStrengthTimeline(frames, frames, constraintIndex);\n                    else if (timelineName == \"damping\")\n                        timeline = new PhysicsConstraintDampingTimeline(frames, frames, constraintIndex);\n                    else if (timelineName == \"mass\")\n                        timeline = new PhysicsConstraintMassTimeline(frames, frames, constraintIndex);\n                    else if (timelineName == \"wind\")\n                        timeline = new PhysicsConstraintWindTimeline(frames, frames, constraintIndex);\n                    else if (timelineName == \"gravity\")\n                        timeline = new PhysicsConstraintGravityTimeline(frames, frames, constraintIndex);\n                    else if (timelineName == \"mix\") //\n                        timeline = new PhysicsConstraintMixTimeline(frames, frames, constraintIndex);\n                    else\n                        continue;\n                    timelines.push(readTimeline1(timelineMap, timeline, 0, 1));\n                }\n            }\n        }\n        // Attachment timelines.\n        if (map.attachments) {\n            for (let attachmentsName in map.attachments) {\n                let attachmentsMap = map.attachments[attachmentsName];\n                let skin = skeletonData.findSkin(attachmentsName);\n                if (!skin)\n                    throw new Error(\"Skin not found: \" + attachmentsName);\n                for (let slotMapName in attachmentsMap) {\n                    let slotMap = attachmentsMap[slotMapName];\n                    let slot = skeletonData.findSlot(slotMapName);\n                    if (!slot)\n                        throw new Error(\"Slot not found: \" + slotMapName);\n                    let slotIndex = slot.index;\n                    for (let attachmentMapName in slotMap) {\n                        let attachmentMap = slotMap[attachmentMapName];\n                        let attachment = skin.getAttachment(slotIndex, attachmentMapName);\n                        for (let timelineMapName in attachmentMap) {\n                            let timelineMap = attachmentMap[timelineMapName];\n                            let keyMap = timelineMap[0];\n                            if (!keyMap)\n                                continue;\n                            if (timelineMapName == \"deform\") {\n                                let weighted = attachment.bones;\n                                let vertices = attachment.vertices;\n                                let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                                let timeline = new DeformTimeline(timelineMap.length, timelineMap.length, slotIndex, attachment);\n                                let time = getValue(keyMap, \"time\", 0);\n                                for (let frame = 0, bezier = 0;; frame++) {\n                                    let deform;\n                                    let verticesValue = getValue(keyMap, \"vertices\", null);\n                                    if (!verticesValue)\n                                        deform = weighted ? Utils.newFloatArray(deformLength) : vertices;\n                                    else {\n                                        deform = Utils.newFloatArray(deformLength);\n                                        let start = getValue(keyMap, \"offset\", 0);\n                                        Utils.arrayCopy(verticesValue, 0, deform, start, verticesValue.length);\n                                        if (scale != 1) {\n                                            for (let i = start, n = i + verticesValue.length; i < n; i++)\n                                                deform[i] *= scale;\n                                        }\n                                        if (!weighted) {\n                                            for (let i = 0; i < deformLength; i++)\n                                                deform[i] += vertices[i];\n                                        }\n                                    }\n                                    timeline.setFrame(frame, time, deform);\n                                    let nextMap = timelineMap[frame + 1];\n                                    if (!nextMap) {\n                                        timeline.shrink(bezier);\n                                        break;\n                                    }\n                                    let time2 = getValue(nextMap, \"time\", 0);\n                                    let curve = keyMap.curve;\n                                    if (curve)\n                                        bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, 0, 1, 1);\n                                    time = time2;\n                                    keyMap = nextMap;\n                                }\n                                timelines.push(timeline);\n                            }\n                            else if (timelineMapName == \"sequence\") {\n                                let timeline = new SequenceTimeline(timelineMap.length, slotIndex, attachment);\n                                let lastDelay = 0;\n                                for (let frame = 0; frame < timelineMap.length; frame++) {\n                                    let delay = getValue(keyMap, \"delay\", lastDelay);\n                                    let time = getValue(keyMap, \"time\", 0);\n                                    let mode = SequenceMode[getValue(keyMap, \"mode\", \"hold\")];\n                                    let index = getValue(keyMap, \"index\", 0);\n                                    timeline.setFrame(frame, time, mode, index, delay);\n                                    lastDelay = delay;\n                                    keyMap = timelineMap[frame + 1];\n                                }\n                                timelines.push(timeline);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Draw order timelines.\n        if (map.drawOrder) {\n            let timeline = new DrawOrderTimeline(map.drawOrder.length);\n            let slotCount = skeletonData.slots.length;\n            let frame = 0;\n            for (let i = 0; i < map.drawOrder.length; i++, frame++) {\n                let drawOrderMap = map.drawOrder[i];\n                let drawOrder = null;\n                let offsets = getValue(drawOrderMap, \"offsets\", null);\n                if (offsets) {\n                    drawOrder = Utils.newArray(slotCount, -1);\n                    let unchanged = Utils.newArray(slotCount - offsets.length, 0);\n                    let originalIndex = 0, unchangedIndex = 0;\n                    for (let ii = 0; ii < offsets.length; ii++) {\n                        let offsetMap = offsets[ii];\n                        let slot = skeletonData.findSlot(offsetMap.slot);\n                        if (!slot)\n                            throw new Error(\"Slot not found: \" + slot);\n                        let slotIndex = slot.index;\n                        // Collect unchanged items.\n                        while (originalIndex != slotIndex)\n                            unchanged[unchangedIndex++] = originalIndex++;\n                        // Set changed items.\n                        drawOrder[originalIndex + offsetMap.offset] = originalIndex++;\n                    }\n                    // Collect remaining unchanged items.\n                    while (originalIndex < slotCount)\n                        unchanged[unchangedIndex++] = originalIndex++;\n                    // Fill in unchanged items.\n                    for (let ii = slotCount - 1; ii >= 0; ii--)\n                        if (drawOrder[ii] == -1)\n                            drawOrder[ii] = unchanged[--unchangedIndex];\n                }\n                timeline.setFrame(frame, getValue(drawOrderMap, \"time\", 0), drawOrder);\n            }\n            timelines.push(timeline);\n        }\n        // Event timelines.\n        if (map.events) {\n            let timeline = new EventTimeline(map.events.length);\n            let frame = 0;\n            for (let i = 0; i < map.events.length; i++, frame++) {\n                let eventMap = map.events[i];\n                let eventData = skeletonData.findEvent(eventMap.name);\n                if (!eventData)\n                    throw new Error(\"Event not found: \" + eventMap.name);\n                let event = new Event(Utils.toSinglePrecision(getValue(eventMap, \"time\", 0)), eventData);\n                event.intValue = getValue(eventMap, \"int\", eventData.intValue);\n                event.floatValue = getValue(eventMap, \"float\", eventData.floatValue);\n                event.stringValue = getValue(eventMap, \"string\", eventData.stringValue);\n                if (event.data.audioPath) {\n                    event.volume = getValue(eventMap, \"volume\", 1);\n                    event.balance = getValue(eventMap, \"balance\", 0);\n                }\n                timeline.setFrame(frame, event);\n            }\n            timelines.push(timeline);\n        }\n        let duration = 0;\n        for (let i = 0, n = timelines.length; i < n; i++)\n            duration = Math.max(duration, timelines[i].getDuration());\n        skeletonData.animations.push(new Animation(name, timelines, duration));\n    }\n}\nclass LinkedMesh {\n    parent;\n    skin;\n    slotIndex;\n    mesh;\n    inheritTimeline;\n    constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n        this.mesh = mesh;\n        this.skin = skin;\n        this.slotIndex = slotIndex;\n        this.parent = parent;\n        this.inheritTimeline = inheritDeform;\n    }\n}\nfunction readTimeline1(keys, timeline, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value = getValue(keyMap, \"value\", defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let value2 = getValue(nextMap, \"value\", defaultValue) * scale;\n        if (keyMap.curve)\n            bezier = readCurve(keyMap.curve, timeline, bezier, frame, 0, time, time2, value, value2, scale);\n        time = time2;\n        value = value2;\n        keyMap = nextMap;\n    }\n}\nfunction readTimeline2(keys, timeline, name1, name2, defaultValue, scale) {\n    let keyMap = keys[0];\n    let time = getValue(keyMap, \"time\", 0);\n    let value1 = getValue(keyMap, name1, defaultValue) * scale;\n    let value2 = getValue(keyMap, name2, defaultValue) * scale;\n    let bezier = 0;\n    for (let frame = 0;; frame++) {\n        timeline.setFrame(frame, time, value1, value2);\n        let nextMap = keys[frame + 1];\n        if (!nextMap) {\n            timeline.shrink(bezier);\n            return timeline;\n        }\n        let time2 = getValue(nextMap, \"time\", 0);\n        let nvalue1 = getValue(nextMap, name1, defaultValue) * scale;\n        let nvalue2 = getValue(nextMap, name2, defaultValue) * scale;\n        let curve = keyMap.curve;\n        if (curve) {\n            bezier = readCurve(curve, timeline, bezier, frame, 0, time, time2, value1, nvalue1, scale);\n            bezier = readCurve(curve, timeline, bezier, frame, 1, time, time2, value2, nvalue2, scale);\n        }\n        time = time2;\n        value1 = nvalue1;\n        value2 = nvalue2;\n        keyMap = nextMap;\n    }\n}\nfunction readCurve(curve, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n    if (curve == \"stepped\") {\n        timeline.setStepped(frame);\n        return bezier;\n    }\n    let i = value << 2;\n    let cx1 = curve[i];\n    let cy1 = curve[i + 1] * scale;\n    let cx2 = curve[i + 2];\n    let cy2 = curve[i + 3] * scale;\n    timeline.setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2);\n    return bezier + 1;\n}\nfunction getValue(map, property, defaultValue) {\n    return map[property] !== undefined ? map[property] : defaultValue;\n}\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n(() => {\n    if (typeof Math.fround === \"undefined\") {\n        Math.fround = (function (array) {\n            return function (x) {\n                return array[0] = x, array[0];\n            };\n        })(new Float32Array(1));\n    }\n})();\nexport {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9seWZpbGxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3BvbHlmaWxscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytFQTJCK0U7QUFFL0UsQ0FBQyxHQUFHLEVBQUU7SUFDTCxJQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxXQUFXLEVBQUU7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLFVBQVUsS0FBSztZQUM3QixPQUFPLFVBQVUsQ0FBUztnQkFDekIsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3hCO0FBQ0YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyJ9","import { \n  AssetPromise, \n  Engine, \n  request, \n  Texture2D, \n  AssetType,\n  TextureFilterMode,\n  TextureWrapMode,\n} from \"@galacean/engine\";\nimport { \n  TextureAtlas, \n  AtlasAttachmentLoader,\n  SkeletonJson,\n  SkeletonBinary,\n  SkeletonData,\n  Texture,\n  TextureFilter,\n  TextureWrap,\n} from \"@esotericsoftware/spine-core\";\n\nexport function createSkeletonData(\n  textureAtlas: TextureAtlas, \n  skeletonTextData: string | ArrayBuffer, \n  skeletonFileType: 'json' | 'skel',\n): SkeletonData {\n  const atlasLoader = new AtlasAttachmentLoader(textureAtlas);\n  if (skeletonFileType === 'json') {\n    return new SkeletonJson(atlasLoader).readSkeletonData(skeletonTextData);\n  } else {\n    return new SkeletonBinary(atlasLoader).readSkeletonData(new Uint8Array(skeletonTextData as ArrayBuffer));\n  }\n}\n\nexport async function loadTexturesByPath(\n  imagePaths: string[],\n  imageExtensions: string[],\n  engine: Engine,\n): Promise<Texture2D[]> {\n  let textures: Texture2D[];\n  const texturePromises: AssetPromise<any>[] = imagePaths.map((imagePath, index) => {\n    const ext = imageExtensions[index];\n    let imageLoaderType = AssetType.Texture2D;\n    if (ext === 'ktx') {\n      imageLoaderType = AssetType.KTX;\n    } else if (ext === 'ktx2') {\n      imageLoaderType = AssetType.KTX2;\n    }\n    return loadTexture(imagePath, engine, imageLoaderType);\n  });\n  try {\n    textures = await Promise.all(texturePromises);\n  } catch (error) {\n    throw error;\n  }\n  return textures;\n}\n\nexport async function loadTextureAtlas(\n  atlasPath: string, \n  engine: Engine,\n): Promise<TextureAtlas> {\n  const baseUrl = getBaseUrl(atlasPath);\n  let atlasText: string;\n  let textures: Texture2D[];\n  try {\n    atlasText = await request(atlasPath, { type: \"text\" });\n  } catch (err) {\n    throw new Error(`Spine Atlas: ${atlasPath} load error: ${err}`); \n  }\n  let textureAtlas = new TextureAtlas(atlasText);\n  const loadTexturePromises = [];\n  for (let page of textureAtlas.pages) {\n    const textureUrl = baseUrl + page.name;\n    loadTexturePromises.push(loadTexture(textureUrl, engine));\n  }\n  try {\n    textures = await Promise.all(loadTexturePromises);\n  } catch (err) {\n    throw new Error(`Spine Texture: load error: ${err}`);\n  }\n  textureAtlas = createTextureAtlas(atlasText, textures);\n  return textureAtlas;\n}\n\nexport function createTextureAtlas(atlasText: string, textures: Texture2D[]) {\n  const textureAtlas = new TextureAtlas(atlasText);\n  textureAtlas.pages.forEach((page, index) => {\n    const engineTexture = textures.find(item => item.name === page.name) || textures[index];\n    const texture = createAdaptiveTexture(engineTexture);\n    page.setTexture(texture);\n  });\n  return textureAtlas;\n}\n\nexport function loadTexture(\n  url: string, \n  engine: Engine,\n  imageLoaderType: string = AssetType.Texture2D\n): AssetPromise<Texture2D> {\n  return engine.resourceManager.load<Texture2D>({ url, type: imageLoaderType });\n}\n\nexport function createAdaptiveTexture(texture: Texture2D) {\n  return new AdaptiveTexture(new Image(), texture);\n}\n\nexport function getBaseUrl(url: string): string {\n  const parsedUrl = new URL(url);\n  const basePath = parsedUrl.origin + parsedUrl.pathname;\n  return basePath.endsWith('/') ? basePath : basePath.substring(0, basePath.lastIndexOf('/') + 1);\n}\n\nexport class AdaptiveTexture extends Texture {\n  texture: Texture2D;\n  constructor(image: HTMLImageElement | ImageBitmap, texture: Texture2D) {\n    super(image);\n    this.texture = texture;\n    this.texture.generateMipmaps();\n  }\n\n  // rewrite getImage function, return galacean texture2D, then attachment can get size of texture\n  getImage(): any {\n    return this.texture;\n  }\n\n  setFilters(minFilter: TextureFilter, magFilter: TextureFilter) {\n    if (minFilter === TextureFilter.Nearest) {\n      this.texture.filterMode = TextureFilterMode.Point;\n    } else if (magFilter === TextureFilter.MipMapLinearLinear) {\n      this.texture.filterMode = TextureFilterMode.Trilinear;\n    } else {\n      this.texture.filterMode = TextureFilterMode.Bilinear;\n    }\n  }\n\n  setWraps(uWrap: TextureWrap, vWrap: TextureWrap) {\n    this.texture.wrapModeU = this._convertWrapMode(uWrap);\n    this.texture.wrapModeV = this._convertWrapMode(vWrap);\n  }\n\n  dispose() {}\n\n  private _convertWrapMode(wrap: TextureWrap): TextureWrapMode {\n    switch (wrap) {\n      case TextureWrap.ClampToEdge:\n          return TextureWrapMode.Clamp;\n      case TextureWrap.Repeat:\n          return TextureWrapMode.Repeat;\n      case TextureWrap.MirroredRepeat:\n          return TextureWrapMode.Mirror;\n      default:\n        throw new Error(\"Unsupported texture wrap mode.\");\n    }\n  }\n}\n","export class ReturnablePool<T> {\n  private _type: new () => T;\n  private _elements: T[];\n  private _lastElementIndex: number;\n\n  constructor(type: new () => T, initializeCount: number = 1) {\n    this._type = type;\n    this._lastElementIndex = initializeCount - 1;\n    const elements = (this._elements = new Array<T>(initializeCount));\n    for (let i = 0; i < initializeCount; ++i) {\n      elements[i] = new type();\n    }\n  }\n\n  get(): T {\n    if (this._lastElementIndex < 0) {\n      return new this._type();\n    }\n    return this._elements[this._lastElementIndex--];\n  }\n\n  return(element: T): void {\n    this._elements[++this._lastElementIndex] = element;\n  }\n}\n","export class ClearablePool<T> {\n  private _type: new () => T;\n  private _elements: T[];\n  private _usedElementCount: number = 0;\n\n  constructor(type: new () => T) {\n    this._type = type;\n    this._elements = [];\n  }\n\n  get(): T {\n    const { _usedElementCount: usedElementCount, _elements: elements } = this;\n    this._usedElementCount++;\n    if (elements.length === usedElementCount) {\n      const element = new this._type();\n      elements.push(element);\n      return element;\n    } else {\n      return elements[usedElementCount];\n    }\n  }\n\n  clear(): void {\n    this._usedElementCount = 0;\n  }\n}\n","import { BlendMode } from \"@esotericsoftware/spine-core\";\nimport { BlendFactor, BlendOperation, Material } from \"@galacean/engine\";\n\n\nconst { SourceAlpha, One, DestinationColor, Zero, OneMinusSourceColor, OneMinusSourceAlpha } = BlendFactor;\nconst { Add } = BlendOperation;\n\nexport function setBlendMode(material: Material, blendMode: BlendMode) {\n  const target = material.renderState.blendState.targetBlendState;\n  switch (blendMode) {\n    case BlendMode.Additive:\n      target.sourceColorBlendFactor = SourceAlpha;\n      target.destinationColorBlendFactor = One;\n      target.sourceAlphaBlendFactor = One;\n      target.destinationAlphaBlendFactor = One;\n      target.colorBlendOperation = target.alphaBlendOperation = Add;\n      break;\n    case BlendMode.Multiply:\n      target.sourceColorBlendFactor = DestinationColor;\n      target.destinationColorBlendFactor = Zero;\n      target.sourceAlphaBlendFactor = One;\n      target.destinationAlphaBlendFactor = Zero;\n      target.colorBlendOperation = target.alphaBlendOperation = Add;\n      break;\n    case BlendMode.Screen:\n      target.sourceColorBlendFactor = One;\n      target.destinationColorBlendFactor = OneMinusSourceColor;\n      target.sourceAlphaBlendFactor = One;\n      target.destinationAlphaBlendFactor = OneMinusSourceColor;\n      target.colorBlendOperation = target.alphaBlendOperation = Add;\n      break;\n    default: // Normal blend default\n      target.sourceColorBlendFactor = SourceAlpha;\n      target.destinationColorBlendFactor = OneMinusSourceAlpha;\n      target.sourceAlphaBlendFactor = One;\n      target.destinationAlphaBlendFactor = OneMinusSourceAlpha;\n      target.colorBlendOperation = target.alphaBlendOperation = Add;\n      break;\n  }\n}\n\nexport function getBlendMode(material: Material): BlendMode {\n  const target = material.renderState.blendState.targetBlendState;\n\n  if (\n    target.sourceColorBlendFactor === SourceAlpha &&\n    target.destinationColorBlendFactor === One &&\n    target.sourceAlphaBlendFactor === One &&\n    target.destinationAlphaBlendFactor === One &&\n    target.colorBlendOperation === Add &&\n    target.alphaBlendOperation === Add\n  ) {\n    return BlendMode.Additive;\n  }\n\n  if (\n    target.sourceColorBlendFactor === DestinationColor &&\n    target.destinationColorBlendFactor === Zero &&\n    target.sourceAlphaBlendFactor === One &&\n    target.destinationAlphaBlendFactor === Zero &&\n    target.colorBlendOperation === Add &&\n    target.alphaBlendOperation === Add\n  ) {\n    return BlendMode.Multiply;\n  }\n\n  if (\n    target.sourceColorBlendFactor === One &&\n    target.destinationColorBlendFactor === OneMinusSourceColor &&\n    target.sourceAlphaBlendFactor === One &&\n    target.destinationAlphaBlendFactor === OneMinusSourceColor &&\n    target.colorBlendOperation === Add &&\n    target.alphaBlendOperation === Add\n  ) {\n    return BlendMode.Screen;\n  }\n  return BlendMode.Normal;\n}","import {\n  Texture2D,\n  SubPrimitive,\n  Vector3,\n  BlendFactor,\n  BlendOperation,\n  Material,\n  Engine,\n  BoundingBox,\n} from \"@galacean/engine\";\nimport {\n  Skeleton,\n  SkeletonClipping,\n  RegionAttachment,\n  MeshAttachment,\n  ClippingAttachment,\n  ArrayLike,\n  Color,\n  BlendMode,\n  SkeletonData,\n  Skin,\n  NumberArrayLike,\n} from \"@esotericsoftware/spine-core\";\nimport { SpineAnimationRenderer } from \"./SpineAnimationRenderer\";\nimport { AdaptiveTexture } from \"./loader/LoaderUtils\";\nimport { ReturnablePool } from \"./util/ReturnablePool\";\nimport { ClearablePool } from \"./util/ClearablePool\";\nimport { setBlendMode } from \"./util/BlendMode\";\n\nclass SubRenderItem {\n  subPrimitive: SubPrimitive;\n  blendMode: BlendMode;\n  texture: any;\n  slotName?: string;\n}\n\nconst maxBoundsValue = Infinity;\nconst minBoundsValue = -Infinity;\n\nexport class SpineGenerator {\n  static QUAD_TRIANGLES = [0, 1, 2, 2, 3, 0];\n  static VERTEX_SIZE = 8; // 2 2 4 position without z, uv, color\n  static VERTEX_STRIDE = 9; // 3 2 4 position with z, uv, color\n  static tempDark = new Color();\n  static tempColor = new Color();\n  static tempVerts = new Array(8);\n  static tempBlendMode: BlendMode | null = null;\n  static tempTexture: AdaptiveTexture | null = null;\n  static subPrimitivePool = new ReturnablePool(SubPrimitive);\n  static subRenderItemPool = new ClearablePool(SubRenderItem);\n  static bounds = new BoundingBox(\n    new Vector3(maxBoundsValue, maxBoundsValue, maxBoundsValue),\n    new Vector3(minBoundsValue, minBoundsValue, minBoundsValue),\n  );\n\n  private _clipper: SkeletonClipping = new SkeletonClipping();\n  private _subRenderItems: SubRenderItem[] = [];\n  private _separateSlots = new Map();\n  private _separateSlotTextureMap: Map<string, Texture2D> = new Map();\n\n  getMaxVertexCount(skeletonData: SkeletonData) {\n    let vertexCount = 0;\n    const { skins } = skeletonData;\n    const skinLen = skins.length;\n    for (let i = 0; i < skinLen; i += 1) {\n      const skin = skins[i];\n      const vc = this._getSkinVertexCount(skin);\n      vertexCount = Math.max(vertexCount, vc);\n    }\n    return vertexCount;\n  }\n\n  buildPrimitive(skeleton: Skeleton, renderer: SpineAnimationRenderer) {\n    const { useClipping = true, zSpacing = 0.01 } = renderer.setting;\n    const {\n      _clipper,\n      _separateSlots,\n      _subRenderItems,\n      _separateSlotTextureMap,\n    } = this;\n    const { bounds } = SpineGenerator;\n\n    bounds.min.set(maxBoundsValue, maxBoundsValue, maxBoundsValue);\n    bounds.max.set(minBoundsValue, minBoundsValue, minBoundsValue);\n\n    let verticesLength = 0;\n    let indicesLength = 0;\n    const drawOrder = skeleton.drawOrder;\n    const maxSlotCount = drawOrder.length;\n    const {\n      engine,\n      _indices, \n      _vertices,\n      _subPrimitives,\n    } = renderer;\n    let {\n      tempVerts,\n      tempTexture,\n      tempBlendMode,\n      subRenderItemPool, \n      subPrimitivePool,\n    } = SpineGenerator;\n    _subRenderItems.length = 0;\n    subRenderItemPool.clear();\n    let vertices = renderer._vertices;\n    let triangles: Array<number>;\n    let uvs: NumberArrayLike;\n    // 记录当前\n    let start = 0;\n    let count = 0;\n    let blend = BlendMode.Normal;\n    let texture = null;\n    let primitiveIndex = 0;\n    SpineGenerator.tempBlendMode = null;\n    SpineGenerator.tempTexture = null;\n    for (let slotIndex = 0; slotIndex < maxSlotCount; ++slotIndex) {\n      const slot = drawOrder[slotIndex];\n      if (!slot.bone.active) {\n        _clipper.clipEndWithSlot(slot);\n        continue;\n      }\n      const attachment = slot.getAttachment();\n      let attachmentColor: Color = null;\n      const z = zSpacing * slotIndex;\n      let numFloats = 0;\n      const isClipping = _clipper.isClipping();\n      let vertexSize = isClipping ? 2 : SpineGenerator.VERTEX_SIZE;\n\n      if (!attachment) {\n        if (useClipping) {\n          _clipper.clipEndWithSlot(slot);\n        }\n        continue;\n      }\n\n      switch(attachment.constructor) {\n        case RegionAttachment:\n          const regionAttachment = <RegionAttachment>attachment;\n          attachmentColor = regionAttachment.color;\n          numFloats = vertexSize * 4;\n          regionAttachment.computeWorldVertices(\n            slot,\n            tempVerts,\n            0,\n            vertexSize,\n          );\n          triangles = SpineGenerator.QUAD_TRIANGLES;\n          uvs = regionAttachment.uvs;\n          texture = regionAttachment.region.texture;\n        break;\n        case MeshAttachment:\n          const meshAttachment = <MeshAttachment>attachment;\n          attachmentColor = meshAttachment.color;\n          numFloats = (meshAttachment.worldVerticesLength >> 1) * vertexSize;\n          if (numFloats > vertices.length) {\n            SpineGenerator.tempVerts = new Array(numFloats);\n          }\n          meshAttachment.computeWorldVertices(\n            slot,\n            0,\n            meshAttachment.worldVerticesLength,\n            tempVerts,\n            0,\n            vertexSize,\n          );\n          triangles = meshAttachment.triangles;\n          uvs = meshAttachment.uvs;\n          texture = meshAttachment.region.texture;\n        break;\n        case ClippingAttachment:\n          if (useClipping) {\n            let clip = <ClippingAttachment>attachment;\n            _clipper.clipStart(slot, clip);\n          }\n          continue;\n        default:\n          if (useClipping) {\n            _clipper.clipEndWithSlot(slot);\n          }\n          continue;\n      }\n\n      if (texture != null) {\n        let finalVertices: ArrayLike<number>;\n        let finalVerticesLength: number;\n        let finalIndices: ArrayLike<number>;\n        let finalIndicesLength: number;\n\n        let skeleton = slot.bone.skeleton;\n        let skeletonColor = skeleton.color;\n        let slotColor = slot.color;\n        let alpha = skeletonColor.a * slotColor.a * attachmentColor.a;\n        let color = SpineGenerator.tempColor;\n        let dark = SpineGenerator.tempDark;\n        color.set(\n          skeletonColor.r * slotColor.r * attachmentColor.r,\n          skeletonColor.g * slotColor.g * attachmentColor.g,\n          skeletonColor.b * slotColor.b * attachmentColor.b,\n          alpha,\n        );\n\n        if (isClipping) {\n          _clipper.clipTriangles(\n            tempVerts,\n            triangles,\n            triangles.length,\n            uvs,\n            color,\n            dark,\n            false,\n          );\n          finalVertices = _clipper.clippedVertices;\n          finalVerticesLength = finalVertices.length;\n          finalIndices = _clipper.clippedTriangles;\n          finalIndicesLength = finalIndices.length;\n        } else {\n          let verts = tempVerts;\n          const { r, g, b, a } = color;\n          for (\n            let v = 2, u = 0, n = numFloats;\n            v < n;\n            v += vertexSize, u += 2\n          ) {\n            verts[v] = r;\n            verts[v + 1] = g;\n            verts[v + 2] = b;\n            verts[v + 3] = a;\n            verts[v + 4] = uvs[u];\n            verts[v + 5] = uvs[u + 1];\n          }\n          finalVertices = tempVerts;\n          finalVerticesLength = numFloats;\n          finalIndices = triangles;\n          finalIndicesLength = triangles.length;\n        }\n\n        if (finalVerticesLength == 0 || finalIndicesLength == 0) {\n\t\t\t\t\t_clipper.clipEndWithSlot(slot);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n        let indexStart = verticesLength / SpineGenerator.VERTEX_STRIDE;\n        let vertices = _vertices;\n        let i = verticesLength;\n        let j = 0;\n        for (; j < finalVerticesLength;) {\n          let x = finalVertices[j++];\n          let y = finalVertices[j++];\n          vertices[i++] = x;\n          vertices[i++] = y;\n          vertices[i++] = z;\n          vertices[i++] = finalVertices[j++];\n          vertices[i++] = finalVertices[j++];\n          vertices[i++] = finalVertices[j++];\n          vertices[i++] = finalVertices[j++];\n          vertices[i++] = finalVertices[j++];\n          vertices[i++] = finalVertices[j++];\n          this._expandByPoint(x, y, z);\n        }\n        verticesLength = i;\n\n        let indicesArray = _indices;\n        for (i = indicesLength, j = 0; j < finalIndicesLength; i++, j++) {\n          indicesArray[i] = finalIndices[j] + indexStart;\n        }\n        indicesLength += finalIndicesLength;\n\n        const slotData = slot.data;\n        const slotName = slotData.name;\n        blend = slotData.blendMode;\n        const blendModeChanged = tempBlendMode !== null &&\n        tempBlendMode !== slotData.blendMode;\n        const textureChanged = tempTexture !== null && \n        tempTexture !== texture;\n        const slotNeedSeparate = _separateSlots.get(slotName);\n\n        if (slotNeedSeparate || blendModeChanged || textureChanged) {\n          // Finish accumulated count first\n          if (count > 0) {\n            const origin = _subPrimitives[primitiveIndex];\n            origin && primitiveIndex++;\n            const subPrimitive = origin || subPrimitivePool.get();\n            subPrimitive.start = start;\n            subPrimitive.count = count;\n            const renderItem = subRenderItemPool.get();\n            renderItem.subPrimitive = subPrimitive;\n            renderItem.texture = tempTexture;\n            renderItem.blendMode = tempBlendMode;\n            _subRenderItems.push(renderItem);\n            start += count;\n            count = 0;\n          }\n          if (slotNeedSeparate) {\n            // If separatedTexture exist, set texture params\n            const separateTexture = _separateSlotTextureMap.get(slotName);\n            if (separateTexture) {\n              const oldTexture = texture.texture;\n              separateTexture.filterMode = oldTexture.filterMode;\n              separateTexture.wrapModeU = oldTexture.wrapModeU;\n              separateTexture.wrapModeV = oldTexture.wrapModeV;\n            }\n            const origin = _subPrimitives[primitiveIndex];\n            origin && primitiveIndex++;\n            const subPrimitive = origin || subPrimitivePool.get();\n            subPrimitive.start = start;\n            subPrimitive.count = finalIndicesLength;\n            const renderItem = subRenderItemPool.get();\n            renderItem.blendMode = blend;\n            renderItem.subPrimitive = subPrimitive;\n            renderItem.texture = texture;\n            renderItem.slotName = slotName;\n            _subRenderItems.push(renderItem);\n            start += finalIndicesLength;\n            count = 0;\n          } else {\n            count += finalIndicesLength;\n          }\n        } else {\n          count += finalIndicesLength;\n        }\n        tempTexture = texture;\n        tempBlendMode = blend;\n      }\n\n      _clipper.clipEndWithSlot(slot);\n    } // slot traverse end\n\n    // add reset sub primitive\n    if (count > 0) {\n      const origin = _subPrimitives[primitiveIndex];\n      origin && primitiveIndex++;\n      const subPrimitive = origin || subPrimitivePool.get();\n      subPrimitive.start = start;\n      subPrimitive.count = count;\n      const renderItem = subRenderItemPool.get();\n      renderItem.blendMode = blend;\n      renderItem.subPrimitive = subPrimitive;\n      renderItem.texture = texture;\n      _subRenderItems.push(renderItem);\n      count = 0;\n    }\n\n    _clipper.clipEnd();\n\n    const lastLen = _subPrimitives.length;\n    const curLen = _subRenderItems.length;\n    if (curLen < lastLen) {\n      for (let i = curLen; i < lastLen; i++) {\n        const item = _subPrimitives[i];\n        subPrimitivePool.return(item);\n      }\n    }\n\n    renderer._clearSubPrimitives();\n    for (let i = 0, l = curLen; i < l; ++i) {\n      const item = _subRenderItems[i];\n      const { slotName, blendMode, texture } = item;\n      renderer._addSubPrimitive(item.subPrimitive);\n      let subTexture = texture.texture;\n      if (_separateSlotTextureMap.has(slotName)) {\n        subTexture = _separateSlotTextureMap.get(slotName);\n      }\n      const key = `${subTexture.instanceId}_${blendMode}`;\n      let material = SpineAnimationRenderer._materialCache.get(key);\n      if (!material) {\n        material = this._createMaterialForTexture(subTexture, engine, blendMode);\n        SpineAnimationRenderer._materialCache.set(key, material);\n      }\n      renderer.setMaterial(i, material);\n    }\n    renderer._vertexBuffer.setData(_vertices);\n    renderer._indexBuffer.setData(_indices);\n  }\n\n  addSeparateSlot(slotName: string) {\n    this._separateSlots.set(slotName, slotName);\n  }\n\n  addSeparateSlotTexture(slotName: string, texture: Texture2D) {\n    this._separateSlotTextureMap.set(slotName, texture);\n  }\n\n  private _createMaterialForTexture(texture: Texture2D, engine: Engine, blendMode: BlendMode): Material {\n    const material = SpineAnimationRenderer._getDefaultMaterial(engine);\n    material.shaderData.setTexture(\"material_SpineTexture\", texture);\n    setBlendMode(material, blendMode);\n    return material;\n  }\n\n  private _expandByPoint(x: number, y: number, z: number) {\n    const { bounds: { min, max } } = SpineGenerator;\n    const newMinX = Math.min(min.x, x);\n    const newMinY = Math.min(min.y, y);\n    const newMinZ = Math.min(min.z, z);\n    const newMaxX = Math.max(max.x, x);\n    const newMaxY = Math.max(max.y, y);\n    const newMaxZ = Math.max(max.z, z);\n    min.set(newMinX, newMinY, newMinZ);\n    max.set(newMaxX, newMaxY, newMaxZ);\n  }\n\n  private _getSkinVertexCount(skin: Skin) {\n    const { attachments } = skin;\n    let vertexCount: number = 0;\n    const QUAD_TRIANGLE_LENGTH = SpineGenerator.QUAD_TRIANGLES.length;\n    for (let i = 0, n = attachments.length; i < n; i++) {\n      const slotAttachment = attachments[i];\n      for (let key in slotAttachment) {\n        const attachment = slotAttachment[key];\n        if (!attachment) {\n          continue;\n        } else if (attachment instanceof RegionAttachment) {\n          vertexCount += QUAD_TRIANGLE_LENGTH;\n        } else if (attachment instanceof MeshAttachment) {\n          let mesh = attachment;\n          vertexCount += mesh.triangles.length;\n        } else continue;\n      }\n    }\n    return vertexCount; \n  }\n\n}\n","import {\n  CullMode,\n  Engine,\n  Material,\n  RenderQueueType,\n  Shader,\n} from \"@galacean/engine\";\nimport { setBlendMode } from \"./util/BlendMode\";\nimport { BlendMode } from \"@esotericsoftware/spine-core\";\n\nexport class SpineMaterial extends Material {\n  private static _spineVS = `\n    uniform mat4 renderer_MVPMat;\n\n    attribute vec3 POSITION;\n    attribute vec2 TEXCOORD_0;\n    attribute vec4 COLOR_0;\n    \n    varying vec2 v_uv;\n    varying vec4 v_color;\n    \n    void main()\n    {\n      gl_Position = renderer_MVPMat * vec4(POSITION, 1.0);\n    \n      v_uv = TEXCOORD_0;\n      v_color = COLOR_0;\n    }\n  `;\n\n  private static _spineFS = `\n    uniform sampler2D material_SpineTexture;\n\n    varying vec2 v_uv;\n    varying vec4 v_color;\n    \n    void main()\n    {\n        vec4 baseColor = texture2D(material_SpineTexture, v_uv);\n        gl_FragColor = baseColor * v_color;\n    }\n   `;\n  constructor(engine: Engine) {\n    const shader =\n      Shader.find(\"galacean-spine-shader\") ||\n      Shader.create(\n        \"galacean-spine-shader\",\n        SpineMaterial._spineVS,\n        SpineMaterial._spineFS\n      );\n    super(engine, shader);\n    const renderState = this.renderState;\n    const target = renderState.blendState.targetBlendState;\n    target.enabled = true;\n    setBlendMode(this, BlendMode.Normal);\n    renderState.depthState.writeEnabled = false;\n    renderState.rasterState.cullMode = CullMode.Off;\n    renderState.renderQueueType = RenderQueueType.Transparent;\n  }\n}\n","import { Skeleton, SkeletonData, AnimationState, Physics, TrackEntry, AnimationStateData } from \"@esotericsoftware/spine-core\";\nimport { SpineGenerator } from \"./SpineGenerator\";\nimport {\n  Buffer,\n  Renderer,\n  Entity,\n  ignoreClone,\n  Material,\n  Engine,\n  BoundingBox,\n  Primitive,\n  SubPrimitive,\n  deepClone,\n  VertexElement,\n  VertexElementFormat,\n  BufferBindFlag,\n  BufferUsage,\n  VertexBufferBinding,\n  IndexBufferBinding,\n  IndexFormat,\n} from \"@galacean/engine\";\nimport { SpineMaterial } from \"./SpineMaterial\";\nimport { SkeletonDataResource } from \"./loader/SkeletonDataResource\";\nimport { getBlendMode } from \"./util/BlendMode\";\n\n/**\n * Spine animation renderer, capable of rendering spine animations and providing functions for animation and skeleton manipulation.\n */\nexport class SpineAnimationRenderer extends Renderer {\n  private static _defaultMaterial: Material;\n  private static _spineGenerator = new SpineGenerator();\n\n  private static _positionVertexElement = new VertexElement('POSITION', 0, VertexElementFormat.Vector3, 0);\n  private static _colorVertexElement = new VertexElement('COLOR_0', 12, VertexElementFormat.Vector4, 0);\n  private static _uvVertexElement = new VertexElement('TEXCOORD_0', 28, VertexElementFormat.Vector2, 0);\n\n  /** @internal */\n  static _materialCache = new Map<string, Material>();\n  /** @internal */\n  static _animationDataCache = new Map<SkeletonData, AnimationStateData>();\n\n  /** @internal */\n  static _getDefaultMaterial(engine: Engine): Material {\n    let defaultMaterial = this._defaultMaterial;\n    if (defaultMaterial) {\n      if (defaultMaterial.engine === engine) {\n        return defaultMaterial.clone();\n      } else {\n        defaultMaterial.destroy(true);\n        defaultMaterial = null;\n      }\n    }\n    defaultMaterial = new SpineMaterial(engine);\n    defaultMaterial.isGCIgnored = true;\n    this._defaultMaterial = defaultMaterial;\n    return defaultMaterial.clone();\n  }\n\n  /** Render setting for spine rendering. */\n  @deepClone\n  setting: SpineRenderSetting = new SpineRenderSetting();\n  /**\n   * Default state for spine animation.\n   * Contains the default animation name to be played, whether this animation should loop,\n   * the default skin name, and the default scale of the skeleton.\n   */\n  @deepClone\n  defaultState: DefaultState = new DefaultState();\n  /** @internal */\n  @ignoreClone\n  _primitive: Primitive;\n  /** @internal */\n  @ignoreClone\n  _subPrimitives: SubPrimitive[] = [];\n  /** @internal */\n  @ignoreClone\n  _indexBuffer: Buffer;\n  /** @internal */\n  @ignoreClone\n  _vertexBuffer: Buffer;\n  /** @internal */\n  @ignoreClone\n  _vertices: Float32Array;\n  /** @internal */\n  @ignoreClone\n  _indices: Uint16Array;\n  /** @internal */\n  @ignoreClone\n  _needResizeBuffer = false;\n  /** @internal */\n  @ignoreClone\n  _vertexCount = 0;\n  /** @internal */\n  @ignoreClone\n  _resource: SkeletonDataResource;\n\n  @ignoreClone\n  private _skeleton: Skeleton;\n  @ignoreClone\n  private _state: AnimationState;\n\n  /**\n   * Spine resource of current spine animation.This property allows you to switch between different animations at runtime.\n   */\n  get resource(): SkeletonDataResource {\n    return this._resource;\n  }\n\n  set resource(value: SkeletonDataResource) {\n    if (!value) {\n      this._state = null;\n      this._skeleton = null;\n      this._resource = null;\n      return;\n    }\n    this._resource = value;\n    // @ts-ignore\n    this._addResourceReferCount(value, 1);\n    const { skeletonData } = value;\n    this._skeleton = new Skeleton(skeletonData);\n    let animationData = SpineAnimationRenderer._animationDataCache.get(skeletonData);\n    if (!animationData) {\n      animationData = new AnimationStateData(skeletonData);\n      SpineAnimationRenderer._animationDataCache.set(skeletonData, animationData);\n    }\n    this._state = new AnimationState(animationData);\n    const maxCount = SpineAnimationRenderer._spineGenerator.getMaxVertexCount(skeletonData);\n    this._createBuffer(maxCount);\n    this._initializeDefaultState();\n    this._dirtyUpdateFlag |= SpineAnimationUpdateFlags.InitialVolume;\n    this._state.addListener({\n      start: () => {\n        this._onAnimationStart();\n      },\n      complete: (entry: TrackEntry) => {\n        this._onAnimationComplete(entry);\n      },\n    })\n  }\n\n  /**\n   * Provides access to `AnimationState` which controls animation playback on a skeleton. \n   * You can use its API to manage, blend, and transition between multiple simultaneous animations effectively.\n   */\n  get state(): AnimationState {\n    return this._state;\n  }\n\n  /**\n   * Provides access to `Skeleton`, which defines the structure of a Spine model.\n   * Through its API, users can manipulate bone positions, rotations, scaling \n   * and change spine attachment to customize character appearances dynamically during runtime.\n   */\n  get skeleton(): Skeleton {\n    return this._skeleton;\n  }\n\n  /**\n   * @internal\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    const primitive = new Primitive(this._engine);\n    this._primitive = primitive;\n    primitive.addVertexElement(SpineAnimationRenderer._positionVertexElement);\n    primitive.addVertexElement(SpineAnimationRenderer._colorVertexElement);\n    primitive.addVertexElement(SpineAnimationRenderer._uvVertexElement);\n  }\n\n  /**\n   * Separate slot by slot name. This will add a new sub primitive, and new materials.\n   */\n  addSeparateSlot(slotName: string): void {\n    if (!this._skeleton) {\n      console.error(\"Skeleton not found!\");\n    }\n    const slot = this._skeleton.findSlot(slotName);\n    if (slot) {\n      SpineAnimationRenderer._spineGenerator.addSeparateSlot(slotName);\n    } else {\n      console.warn(`Slot: ${slotName} not find.`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  // @ts-ignore\n  override _onEnable(): void {\n    this._initializeDefaultState();\n  }\n\n  /**\n   * @internal\n   */\n  override update(delta: number): void {\n    const { _state, _skeleton } = this;\n    if (_state && _skeleton) {\n      _state.update(delta);\n      _state.apply(_skeleton);\n      _skeleton.update(delta);\n      _skeleton.updateWorldTransform(Physics.update);\n      SpineAnimationRenderer._spineGenerator.buildPrimitive(this._skeleton, this);\n      if (this._isContainDirtyFlag(SpineAnimationUpdateFlags.InitialVolume)) {\n        this._onWorldVolumeChanged();\n        this._setDirtyFlagFalse(SpineAnimationUpdateFlags.InitialVolume);\n      }\n      if (this._isContainDirtyFlag(SpineAnimationUpdateFlags.AnimationVolume)) {\n        this._calculateGeneratorBounds(this.bounds);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  // @ts-ignore\n  override _render(context: any): void {\n    const { _primitive, _subPrimitives } = this;\n    const { _materials: materials, _engine: engine } = this;\n    // @ts-ignore\n    const renderElement = engine._renderElementPool.get();\n    // @ts-ignore\n    renderElement.set(this.priority, this._distanceForSort);\n    // @ts-ignore\n    const subRenderElementPool = engine._subRenderElementPool;\n    if (!_subPrimitives) return;\n    for (let i = 0, n = _subPrimitives.length; i < n; i++) {\n      let material = materials[i];\n      if (!material) {\n        continue;\n      }\n      if (material.destroyed || material.shader.destroyed) {\n        // @ts-ignore\n        material = this.engine._meshMagentaMaterial;\n      }\n\n      const subRenderElement = subRenderElementPool.get();\n      subRenderElement.set(this, material, _primitive, _subPrimitives[i]);\n      renderElement.addSubRenderElement(subRenderElement);\n    }\n    // @ts-ignore\n    context.camera._renderPipeline.pushRenderElement(context, renderElement);\n  }\n\n  /**\n   * @internal\n   */\n  // @ts-ignore\n  override _updateBounds(worldBounds: BoundingBox): void {\n    this._calculateGeneratorBounds(worldBounds);\n  }\n\n  /**\n   * @internal\n   */\n  _calculateGeneratorBounds(worldBounds: BoundingBox): void {\n    const { bounds } = SpineGenerator;\n    BoundingBox.transform(\n      bounds,\n      this.entity.transform.worldMatrix,\n      worldBounds,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  // @ts-ignore\n  override _cloneTo(target: SpineAnimationRenderer): void {\n    target.resource = this._resource;\n  }\n\n  /**\n   * @internal\n   */\n  override _onDestroy(): void {\n    const { _primitive, _subPrimitives, _resource } = this;\n    _subPrimitives.length = 0;\n    if (_primitive) {\n      _primitive.destroy();\n    }\n    if (_resource) {\n      this._addResourceReferCount(_resource, -1);\n    }\n    this._clearMaterialCache();\n    this._primitive = null;\n    this._resource = null;\n    this._skeleton = null;\n    this._state = null;\n    this.setting = null;\n    super._onDestroy();\n  }\n\n  /**\n   * @internal\n   */\n  _createBuffer(vertexCount: number): void {\n    const { _engine, _primitive } = this;\n    this._vertices = new Float32Array(vertexCount * SpineGenerator.VERTEX_STRIDE);\n    this._indices = new Uint16Array(vertexCount);\n    const vertexStride = (SpineGenerator.VERTEX_STRIDE) * 4; // position + color + uv * Float32 byteLen\n    const vertexBuffer = new Buffer(\n      _engine,\n      BufferBindFlag.VertexBuffer,\n      this._vertices,\n      BufferUsage.Dynamic,\n    );\n    const indexBuffer = new Buffer(\n      _engine,\n      BufferBindFlag.IndexBuffer,\n      this._indices,\n      BufferUsage.Dynamic,\n    );\n    this._indexBuffer = indexBuffer;\n    this._vertexBuffer = vertexBuffer;\n    const vertexBufferBinding = new VertexBufferBinding(vertexBuffer, vertexStride);\n    this._primitive.setVertexBufferBinding(0, vertexBufferBinding);\n    const indexBufferBinding = new IndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n    _primitive.setIndexBufferBinding(indexBufferBinding);\n  }\n\n  /**\n   * @internal\n   */\n  _addSubPrimitive(subPrimitive: SubPrimitive): void {\n    this._subPrimitives.push(subPrimitive);\n  }\n\n  /**\n   * @internal\n   */\n  _clearSubPrimitives(): void {\n    this._subPrimitives.length = 0;\n  }\n\n  /**\n   * @internal\n   */\n  _isContainDirtyFlag(type: number): boolean {\n    return (this._dirtyUpdateFlag & type) != 0;\n  }\n\n  /**\n   * @internal\n   */\n  _setDirtyFlagFalse(type: number): void {\n    this._dirtyUpdateFlag &= ~type;\n  }\n\n  /**\n   * @internal\n   */\n  _onWorldVolumeChanged(): void {\n    this._dirtyUpdateFlag |= RendererUpdateFlags.WorldVolume;\n  }\n\n  private _onAnimationStart(): void {\n    this._dirtyUpdateFlag |= SpineAnimationUpdateFlags.AnimationVolume;\n  }\n\n  private _onAnimationComplete(entry: TrackEntry): void {\n    if (!entry.loop) {\n      this._setDirtyFlagFalse(SpineAnimationUpdateFlags.AnimationVolume)\n    }\n  }\n\n  private _clearMaterialCache(): void {\n    this._materials.forEach((item) => {\n      const texture = item.shaderData.getTexture('material_SpineTexture');\n      const blendMode = getBlendMode(item);\n      const key = `${texture.instanceId}_${blendMode}`;\n      SpineAnimationRenderer._materialCache.delete(key);\n    });\n  }\n\n  private _initializeDefaultState(): void {\n    const { skeleton, state } = this;\n    if (skeleton && state) {\n      const { animationName, skinName, loop, scale } = this.defaultState;\n      skeleton.scaleX = scale;\n      skeleton.scaleY = scale;\n      if (skinName !== 'default') {\n        skeleton.setSkinByName(skinName);\n        skeleton.setToSetupPose();\n      }\n      if (animationName) {\n        state.setAnimation(0, animationName, loop);\n      }\n    }\n  }\n\n}\n\n\n/**\n * @internal\n */\nexport enum SpineAnimationUpdateFlags {\n  /** On World Transform Changed */\n  TransformVolume = 0x1,\n  /** On Animation start play */\n  AnimationVolume = 0x2,\n  /** On skeleton data asset changed */\n  InitialVolume = 0x4,\n}\n\n/**\n * @internal\n */\nexport enum RendererUpdateFlags {\n  /** Include world position and world bounds. */\n  WorldVolume = 0x1\n}\n\n/**\n * Render setting for spine rendering.\n */\nexport class SpineRenderSetting {\n  /**\n   * Creates an instance of SpineRenderSetting.\n   */\n  constructor(\n    /**\n     * The spacing between z layers @defaultValue `0.01`\n     */\n    public zSpacing: number = 0.01,\n    \n    /**\n     * Whether to use clipping @defaultValue `true`\n     */\n    public useClipping: boolean = true,\n  ) {}\n}\n\n/**\n * Default state for spine animation.\n * Contains the default animation name to be played, whether this animation should loop,\n * the default skin name, and the default scale of the skeleton.\n */\nexport class DefaultState {\n  /**\n   * Creates an instance of DefaultState\n   */\n  constructor(\n    /**\n     * The default scale of the animation @defaultValue `1`\n     */\n    public scale: number = 1,\n\n    /**\n     * Whether the default animation should loop @defaultValue `true. The default animation should loop`\n     */\n    public loop: boolean = true,\n\n    /**\n     * The name of the default animation @defaultValue `null. Do not play any animation by default`\n     */\n    public animationName: string | null = null,\n\n    /**\n     * The name of the default skin @defaultValue `default`\n     */\n    public skinName: string = \"default\"\n  ) {}\n}\n","import { SkeletonData } from \"@esotericsoftware/spine-core\";\nimport { Engine, ReferResource, Texture2D } from \"@galacean/engine\";\nimport { SpineAnimationRenderer } from \"../SpineAnimationRenderer\";\n\nexport class SkeletonDataResource extends ReferResource {\n  readonly textures: Texture2D[] = [];\n  private _skeletonData: SkeletonData;\n\n  get skeletonData() {\n    return this._skeletonData;\n  }\n\n  constructor(engine: Engine, skeletonData: SkeletonData) {\n    super(engine);\n    this._skeletonData = skeletonData;\n    this._associationTextureInSkeletonData(skeletonData);\n  }\n\n  protected override _onDestroy(): void {\n    super._onDestroy();\n    const { textures, _skeletonData } = this;\n    textures && this._disassociationSuperResource(textures);\n    this._clearAttachmentTextures(_skeletonData);\n    SpineAnimationRenderer._animationDataCache.delete(_skeletonData);\n    this._skeletonData = null;\n  }\n\n  private _disassociationSuperResource(resources: ReferResource[]): void {\n    for (let i = 0, n = resources.length; i < n; i++) {\n      // @ts-ignore\n      resources[i]._disassociationSuperResource(this);\n    }\n  }\n\n  private _associationTextureInSkeletonData(skeletonData: SkeletonData) {\n    const { skins } = skeletonData;\n    skins.forEach((skin) => {\n      const { attachments } = skin;\n      attachments.forEach((attachmentMap) => {\n        const attachment = Object.values(attachmentMap)[0];\n        // @ts-ignore\n        const texture = attachment?.region?.texture.texture;\n        if (texture && !this.textures.find(item => item.instanceId === texture.instanceId)) {\n          this.textures.push(texture);\n          texture._associationSuperResource(this);\n        }\n      });\n    });\n  }\n\n  private _clearAttachmentTextures(skeletonData: SkeletonData) {\n    const { skins } = skeletonData;\n    skins.forEach((skin) => {\n      const { attachments } = skin;\n      attachments.forEach((attachmentMap) => {\n        const attachment = Object.values(attachmentMap)[0];\n        // @ts-ignore\n        if (attachment?.region?.texture) {\n          // @ts-ignore\n          attachment.region.texture.texture = null;\n        }\n      });\n    });\n  }\n\n}","export class BufferReader {\n  private _dataView: DataView;\n  private _position: number;\n  constructor(\n    public data: Uint8Array,\n    byteOffset: number = 0,\n    byteLength?: number,\n  ) {\n    this._dataView = new DataView(\n      data.buffer,\n      data.byteOffset + byteOffset,\n      byteLength ?? data.byteLength - byteOffset\n    );\n    this._position = 0;\n  }\n\n  nextUint16() {\n    const value = this._dataView.getUint16(this._position, true);\n    this._position += 2;\n    return value;\n  }\n\n  nextStr(): string {\n    const strByteLength = this.nextUint16();\n    const uint8Array = new Uint8Array(this.data.buffer, this._position + this._dataView.byteOffset, strByteLength);\n    this._position += strByteLength;\n    return this.decodeText(uint8Array);\n  }\n\n  nextImageData(): Uint8Array {\n    return new Uint8Array(this.data.buffer, this.data.byteOffset + this._position);\n  }\n\n  private decodeText(array: Uint8Array): string {\n    if (typeof TextDecoder !== \"undefined\") {\n      return new TextDecoder().decode(array);\n    }\n    let s = \"\";\n    for (let i = 0, il = array.length; i < il; i++) {\n      s += String.fromCharCode(array[i]);\n    }\n    return decodeURIComponent(encodeURIComponent(s));\n  }\n\n}\n","import {\n  AssetPromise,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  Texture2D,\n} from \"@galacean/engine\";\nimport { createSkeletonData, createTextureAtlas, loadTextureAtlas, loadTexturesByPath } from \"./LoaderUtils\";\nimport { SkeletonDataResource } from \"./SkeletonDataResource\";\nimport { BufferReader } from \"../util/BufferReader\";\nimport { TextureAtlas } from \"@esotericsoftware/spine-core\";\n\nexport type SpineAssetBundle = {\n  skeletonPath: string;\n  skeletonExtension: string;\n  skeletonTextData?: string | ArrayBuffer;\n  atlasPath: string;\n  imagePaths: string[];\n  imageExtensions: string[];\n}\n\ntype SpineLoaderParams =  {\n  fileExtensions?: string | string[];\n}\n\ntype SpineLoadItem = LoadItem & { params?: SpineLoaderParams };\n\n@resourceLoader(\"spine\", [\"json\", \"bin\", \"skel\"])\nexport class SpineLoader extends Loader<SkeletonDataResource> {\n  static imageExtensions = [\"png\", \"jpg\", \"webp\", \"jpeg\", \"ktx\", \"ktx2\"];\n  static skeletonExtensions = [\"skel\", \"json\", \"bin\"];\n\n  static parseAndAssignSpineAsset(url: string, fileExtension: string | null, bundle: SpineAssetBundle) {\n    const { imageExtensions, skeletonExtensions } = SpineLoader;\n    const ext = SpineLoader.getUrlExtension(url, fileExtension);\n    if (!ext) return;\n  \n    if (skeletonExtensions.includes(ext)) {\n      bundle.skeletonPath = url;\n      bundle.skeletonExtension = ext;\n    }\n    if (ext === 'atlas') {\n      bundle.atlasPath = url;\n    }\n    if (imageExtensions.includes(ext)) {\n      bundle.imagePaths.push(url);\n      bundle.imageExtensions.push(ext);\n    }\n  }\n\n  static deriveAndAssignSpineAsset(url: string, fileExtension: string | null, bundle: SpineAssetBundle) {\n    const ext = SpineLoader.getUrlExtension(url, fileExtension);\n    if (!ext) return;\n    bundle.skeletonPath = url;\n    bundle.skeletonExtension = ext;\n    const extensionPattern: RegExp = /(\\.(json|bin|skel))$/;\n    let baseUrl;\n    if (extensionPattern.test(url)) {\n      baseUrl = url.replace(extensionPattern, '');\n    }\n    if (baseUrl) {\n      const atlasUrl = baseUrl + '.atlas';\n      bundle.atlasPath = atlasUrl;\n    }\n  }\n\n  static verifyFileExtensions(fileExtensions: string | string[], expectArray: boolean): string | string[] | null {\n    if (!fileExtensions) return null;\n    if (expectArray && !Array.isArray(fileExtensions)) {\n      console.error('Expect fileExtensions to be an array.');\n      return [];\n    } else if (!expectArray && typeof fileExtensions !== 'string') {\n      console.error('Expect fileExtensions to be a string.');\n      return null;\n    }\n    return fileExtensions;\n  }\n\n  static getUrlExtension(url: string, fileExtension: string): string | null {\n    if (fileExtension) {\n      return fileExtension;\n    }\n    const regex = /\\/([^\\/?#]+)\\.([a-zA-Z0-9]+)(\\?|#|$)|\\?[^#]*\\.([a-zA-Z0-9]+)(\\?|#|$)/;\n    const match = url.match(regex);\n    if (match) {\n      return match[2] || match[4];\n    }\n    return null;\n  }\n\n  load(\n    item: SpineLoadItem,\n    resourceManager: ResourceManager\n  ): AssetPromise<SkeletonDataResource> {\n    return new AssetPromise(async (resolve) => {\n      let resource: SkeletonDataResource;\n      if (item.urls) { // single url might be editor asset\n        resource = await this._handleOriginAsset(item, resourceManager);\n      } else {\n        const buffer: ArrayBuffer = await this.request(item.url, { type: 'arraybuffer' });\n        const reader = new BufferReader(new Uint8Array(buffer));\n        const header = reader.nextStr();\n        if (header.startsWith('spine')) {\n          resource = await this._handleEditorAsset(buffer, reader, header, resourceManager);\n        } else {\n          resource = await this._handleOriginAsset(item, resourceManager, buffer);\n        }\n      }\n      resolve(resource);\n    });\n  }\n\n  private async _handleEditorAsset(\n    buffer: ArrayBuffer, \n    reader: BufferReader, \n    header: string, \n    resourceManager: ResourceManager,\n  ): Promise<SkeletonDataResource> {\n    let skeletonRawData: ArrayBuffer | string;\n    let atlasRefId: string;\n    const type = header.startsWith('spine:skel') ? 'skel' : 'json';\n    const { engine } = resourceManager;\n    if (type === 'skel') {\n      atlasRefId = reader.nextStr();\n      skeletonRawData = reader.nextImageData();\n    } else {\n      const decoder = new TextDecoder('utf-8');\n      const text = decoder.decode(new Uint8Array(buffer));\n      const { data, atlas } = JSON.parse(text);\n      atlasRefId = atlas.refId;\n      skeletonRawData = data;\n    }\n    // @ts-ignore\n    const textureAtlas = await resourceManager.getResourceByRef({ refId: atlasRefId });\n    const skeletonData = createSkeletonData(textureAtlas, skeletonRawData, type);\n    return new SkeletonDataResource(engine, skeletonData);\n  }\n\n  private async _handleOriginAsset(\n    item: LoadItem, \n    resourceManager: ResourceManager, \n    buffer?: ArrayBuffer,\n  ): Promise<SkeletonDataResource> {\n    let { fileExtensions } = item.params || {};\n    let spineAssetBundle: SpineAssetBundle = {\n      skeletonPath: '',\n      skeletonExtension: '',\n      atlasPath: '',\n      imagePaths: [],\n      imageExtensions: [],\n    };\n    const { engine } = resourceManager;\n    if (buffer) { // single url\n      const fileExtension = SpineLoader.verifyFileExtensions(fileExtensions, false);\n      SpineLoader.deriveAndAssignSpineAsset(item.url, fileExtension as string, spineAssetBundle);\n      const { skeletonPath, atlasPath } = spineAssetBundle;\n      if (!skeletonPath || !atlasPath) {\n        throw new Error('Failed to load spine assets. Please check the file path and ensure the file extension is included.');\n      }\n      const textureAtlas = await loadTextureAtlas(atlasPath, engine);\n      const { data, type } = this._determineSkeletonDataType(buffer);\n      const skeletonData = createSkeletonData(textureAtlas, data, type);\n      return new SkeletonDataResource(engine, skeletonData); \n    } else { // multi url\n      fileExtensions = SpineLoader.verifyFileExtensions(fileExtensions, true);\n      for (let i = 0; i < item.urls.length; i += 1) {\n        const url = item.urls[i];\n        const extension = fileExtensions && fileExtensions[i] || null;\n        SpineLoader.parseAndAssignSpineAsset(url, extension, spineAssetBundle);\n      }\n      const { skeletonPath, atlasPath, imagePaths, skeletonExtension, imageExtensions }  = spineAssetBundle;\n      if (!skeletonPath || !atlasPath) {\n        throw new Error('Failed to load spine assets. Please check the file path and ensure the file extension is included.');\n      }\n      const skeletonPromise = skeletonExtension === 'json' ? this.request(skeletonPath, { type: 'text'}) : this.request(skeletonPath, { type: 'arraybuffer' });\n      const type = skeletonExtension === 'json' ? 'json' : 'skel';\n      let loadQueue: Promise<any>[] = [ skeletonPromise ];\n      let textureAtlas: TextureAtlas;\n      let skeletonTextData: string | ArrayBuffer;\n      if (imagePaths.length > 0) {\n        loadQueue = loadQueue.concat([\n          this.request(atlasPath, { type: 'text'}),\n          loadTexturesByPath(imagePaths, imageExtensions, engine),\n        ]);\n        let atlasText: string, textures: Texture2D[];\n        [skeletonTextData, atlasText, textures] = await Promise.all(loadQueue);\n        textureAtlas = createTextureAtlas(atlasText, textures);\n      } else {\n        loadQueue.push(loadTextureAtlas(atlasPath, engine));\n        [skeletonTextData, textureAtlas] = await Promise.all(loadQueue);\n      }\n      const skeletonData = createSkeletonData(textureAtlas, skeletonTextData, type);\n      return new SkeletonDataResource(engine, skeletonData); \n    }\n  }\n\n  private _determineSkeletonDataType(buffer: ArrayBuffer) {\n    let skeletonTextData: ArrayBuffer | string;\n    let type: 'json' | 'skel';\n    try {\n      const decoder = new TextDecoder('utf-8');\n      const jsonString = decoder.decode(buffer);\n      JSON.parse(jsonString);\n      skeletonTextData = jsonString;\n      type = 'json';\n    } catch (error) {\n      skeletonTextData = buffer;\n      type = 'skel';\n    }\n    return { data: skeletonTextData, type };\n  }\n  \n\n}\n","import {\n  AssetPromise,\n  Loader,\n  resourceLoader,\n  ResourceManager,\n  LoadItem,\n} from \"@galacean/engine\";\nimport { TextureAtlas } from \"@esotericsoftware/spine-core\";\nimport { createTextureAtlas } from \"./LoaderUtils\";\n\n\n@resourceLoader(\"EditorSpineAtlas\", [\"atlas\"])\nclass EditorSpineAtlasLoader extends Loader<TextureAtlas> {\n  load(\n    item: LoadItem,\n    resourceManager: ResourceManager\n  ): AssetPromise<TextureAtlas> {\n    return new AssetPromise(async (resolve) => {\n      const text = await this.request<string>(item.url, { type: \"text\" });\n      const { data: atlasText, textures: textureRefs } = JSON.parse(text);\n      // @ts-ignore\n      const promises = textureRefs.map(refItem => resourceManager.getResourceByRef({ refId: refItem.refId }));\n      const textures = await Promise.all(promises);\n      const textureAtlas = createTextureAtlas(atlasText, textures);\n      resolve(textureAtlas);\n    });\n  }\n}\n\nexport { EditorSpineAtlasLoader };\n","import \"./loader/SpineLoader\";\nimport \"./loader/EditorSpineAtlasLoader\";\nimport { Loader } from \"@galacean/engine\";\nimport { SpineAnimationRenderer } from \"./SpineAnimationRenderer\";\nexport { SpineAnimationRenderer } from \"./SpineAnimationRenderer\";\nexport { SkeletonDataResource } from \"./loader/SkeletonDataResource\";\nexport { createTextureAtlas } from \"./loader/LoaderUtils\";\nexport * from \"@esotericsoftware/spine-core\";\nexport const version = `__buildVersion`;\n\nLoader.registerClass(\"SpineAnimationRenderer\", SpineAnimationRenderer);\n\nconsole.log(`Galacean spine version: ${version}`);\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","SuppressedError","IntSet","array","Array","add","value","contains","this","undefined","remove","clear","StringSet","entries","size","addAll","values","oldSize","n","Color","g","b","a","static","constructor","set","clamp","setFromColor","setFromString","hex","charAt","substr","parseInt","rgba8888ToColor","color","rgb888ToColor","toRgb888","x","toString","slice","Number","fromString","MathUtils","PI","PI2","radiansToDegrees","degreesToRadians","min","max","cosDeg","degrees","Math","cos","degRad","sinDeg","sin","atan2Deg","y","atan2","signum","toInt","floor","ceil","cbrt","pow","abs","randomTriangular","randomTriangularWith","mode","u","random","sqrt","isPowerOfTwo","Interpolation","apply","start","end","applyInternal","Pow","power","super","PowOut","Utils","arrayCopy","source","sourceStart","dest","destStart","numElements","j","arrayFill","fromIndex","toIndex","setArraySize","ensureArrayCapacity","newArray","defaultValue","newFloatArray","SUPPORTS_TYPED_ARRAYS","Float32Array","newShortArray","Int16Array","toFloatArray","toSinglePrecision","fround","webkit602BugfixHelper","alpha","blend","element","identity","enumValue","type","name","toUpperCase","DebugUtils","logBones","skeleton","bones","bone","console","log","data","worldX","worldY","Pool","items","instantiator","obtain","pop","free","item","reset","push","freeAll","Vector2","normalize","len","TimeKeeper","maxDelta","framesPerSecond","delta","totalTime","lastTime","Date","now","frameCount","frameTime","update","WindowedMean","addedValues","lastValue","mean","dirty","windowSize","hasEnoughData","addValue","getMean","Attachment","Error","VertexAttachment","id","nextID","vertices","worldVerticesLength","timelineAttachment","computeWorldVertices","slot","count","worldVertices","offset","stride","deformArray","deform","v","w","vx","vy","skip","skeletonBones","wx","wy","weight","f","copyTo","attachment","Sequence","regions","digits","setupIndex","copy","index","sequenceIndex","region","updateRegion","getPath","basePath","result","frame","_nextID","SequenceMode","SequenceModeValues","hold","once","loop","pingpong","onceReverse","loopReverse","pingpongReverse","Animation","timelines","timelineIds","duration","setTimelines","getPropertyIds","hasTimeline","ids","time","events","direction","MixBlend","MixDirection","Property","rotate","scaleX","scaleY","shearX","shearY","inherit","rgb","rgb2","event","drawOrder","ikConstraint","transformConstraint","pathConstraintPosition","pathConstraintSpacing","pathConstraintMix","physicsConstraintInertia","physicsConstraintStrength","physicsConstraintDamping","physicsConstraintMass","physicsConstraintWind","physicsConstraintGravity","physicsConstraintMix","physicsConstraintReset","sequence","Timeline","propertyIds","frames","getFrameEntries","getFrameCount","getDuration","search1","search","step","CurveTimeline","curves","bezierCount","setLinear","setStepped","shrink","newCurves","setBezier","bezier","time1","value1","cx1","cy1","cx2","cy2","time2","value2","tmpx","tmpy","dddx","dddy","ddx","ddy","dx","dy","getBezierValue","frameIndex","valueOffset","CurveTimeline1","propertyId","setFrame","getCurveValue","ii","curveType","before","getRelativeValue","current","setup","first","replace","getAbsoluteValue","getAbsoluteValue2","getScaleValue","mixOut","s","CurveTimeline2","propertyId1","propertyId2","RotateTimeline","boneIndex","active","rotation","TranslateTimeline","t","TranslateXTimeline","TranslateYTimeline","ScaleTimeline","bx","by","ScaleXTimeline","ScaleYTimeline","ShearTimeline","ShearXTimeline","ShearYTimeline","InheritTimeline","RGBATimeline","slotIndex","slots","RGBTimeline","AlphaTimeline","RGBA2Timeline","r2","g2","b2","light","dark","darkColor","setupLight","setupDark","RGB2Timeline","AttachmentTimeline","attachmentNames","attachmentName","setAttachment","getAttachment","DeformTimeline","getCurvePercent","firedEvents","slotAttachment","vertexCount","vertexAttachment","setupVertices","lastVertices","percent","prevVertices","nextVertices","prev","EventTimeline","MAX_VALUE","DrawOrderTimeline","drawOrders","idx","drawOrderToSetupIndex","IkConstraintTimeline","constraintIndex","ikConstraintIndex","mix","softness","bendDirection","compress","stretch","constraint","ikConstraints","mixIn","TransformConstraintTimeline","transformConstraintIndex","mixRotate","mixX","mixY","mixScaleX","mixScaleY","mixShearY","transformConstraints","PathConstraintPositionTimeline","pathConstraintIndex","pathConstraints","position","PathConstraintSpacingTimeline","spacing","PathConstraintMixTimeline","PhysicsConstraintTimeline","physicsConstraintIndex","property","physicsConstraints","global","get","PhysicsConstraintInertiaTimeline","inertia","inertiaGlobal","PhysicsConstraintStrengthTimeline","strength","strengthGlobal","PhysicsConstraintDampingTimeline","damping","dampingGlobal","PhysicsConstraintMassTimeline","massInverse","massGlobal","PhysicsConstraintWindTimeline","wind","windGlobal","PhysicsConstraintGravityTimeline","gravity","gravityGlobal","PhysicsConstraintMixTimeline","mixGlobal","PhysicsConstraintResetTimeline","SequenceTimeline","ENTRIES","getSlotIndex","delay","MODE","DELAY","modeAndIndex","AnimationState","emptyAnimation","_emptyAnimation","tracks","timeScale","unkeyedState","listeners","queue","EventQueue","propertyIDs","animationsChanged","trackEntryPool","TrackEntry","animationLast","nextAnimationLast","trackLast","nextTrackLast","currentDelta","next","nextTime","trackTime","setCurrent","mixingFrom","mixTime","trackEnd","clearNext","updateMixingFrom","from","mixingTo","drain","to","finished","mixDuration","totalAlpha","interruptAlpha","_animationsChanged","applied","mixBlend","applyMixingFrom","attachments","alphaAttachmentThreshold","animationTime","getAnimationTime","applyTime","applyEvents","reverse","animation","timelineCount","timeline","applyAttachmentTimeline","timelineMode","shortestRotation","firstFrame","timelinesRotation","timelineBlend","SUBSEQUENT","applyRotateTimeline","queueEvents","setupState","SETUP","attachmentState","mixAttachmentThreshold","mixDrawOrderThreshold","alphaHold","alphaMix","eventThreshold","timelineHoldMix","FIRST","HOLD_SUBSEQUENT","HOLD_FIRST","holdMix","CURRENT","r1","total","diff","lastTotal","lastDiff","loops","dir","entry","animationStart","animationEnd","trackLastWrapped","complete","cycles","clearTracks","oldDrainDisabled","drainDisabled","clearTrack","trackIndex","interrupt","expandToIndex","previous","setAnimation","animationName","skeletonData","findAnimation","setAnimationWith","trackEntry","addAnimation","addAnimationWith","last","getTrackComplete","setEmptyAnimation","addEmptyAnimation","setEmptyAnimations","holdPrevious","getMix","dispose","computeHold","timelinesCount","outer","HOLD_MIX","getCurrent","addListener","listener","removeListener","indexOf","splice","clearListeners","clearListenerNotifications","_mixDuration","setMixDurationWithDelay","setAnimationLast","isComplete","resetRotationDirections","wasApplied","isNextReady","objects","animState","EventType","AnimationStateAdapter","AnimationStateData","animationToMixTime","defaultMix","setMix","fromName","toName","setMixWith","BoundingBoxAttachment","ClippingAttachment","endSlot","Texture","_image","image","getImage","TextureFilter","TextureWrap","Inherit","PositionMode","SpacingMode","RotateMode","Physics","BlendMode","AttachmentType","TextureRegion","texture","u2","v2","width","height","offsetX","offsetY","originalWidth","originalHeight","FakeTexture","setFilters","minFilter","magFilter","setWraps","uWrap","vWrap","TextureAtlas","pages","atlasText","reader","TextureAtlasReader","pageFields","page","Repeat","pma","regionFields","line","readLine","trim","readEntry","names","TextureAtlasRegion","field","entryValues","TextureAtlasPage","findRegion","setTextures","assetManager","pathPrefix","setTexture","lines","text","split","colon","lastMatch","comma","Nearest","ClampToEdge","MeshAttachment","path","regionUVs","uvs","triangles","hullLength","edges","parentMesh","tempColor","textureWidth","textureHeight","getParentMesh","setParentMesh","newLinkedMesh","PathAttachment","lengths","closed","constantSpeed","PointAttachment","computeWorldPosition","point","computeWorldRotation","RegionAttachment","regionScaleX","regionScaleY","localX","localY","localX2","localY2","radians","localXCos","localXSin","localYCos","localYSin","localX2Cos","localX2Sin","localY2Cos","localY2Sin","vertexOffset","AtlasAttachmentLoader","atlas","loadSequence","newRegionAttachment","skin","newMeshAttachment","newBoundingBoxAttachment","newPathAttachment","newPointAttachment","newClippingAttachment","BoneData","parent","Normal","skinRequired","icon","visible","Bone","children","ax","ay","arotation","ascaleX","ascaleY","ashearX","ashearY","sorted","setToSetupPose","isActive","physics","updateWorldTransformWith","updateWorldTransform","sx","sy","rx","ry","pa","pb","pc","pd","la","lb","lc","ld","OnlyTranslation","NoRotationOrReflection","prx","radDeg","NoScale","NoScaleOrReflection","za","zc","zb","zd","updateAppliedTransform","ra","rb","rc","rd","pid","ia","ib","ic","sa","det","getWorldRotationX","getWorldRotationY","getWorldScaleX","getWorldScaleY","worldToLocal","world","invDet","localToWorld","local","worldToParent","parentToWorld","worldToLocalRotation","worldRotation","localToWorldRotation","localRotation","rotateWorld","ConstraintData","order","AssetManagerBase","textureLoader","downloader","assets","errors","toLoad","loaded","Downloader","success","callback","asset","error","message","loadAll","Promise","resolve","reject","check","isLoadingComplete","hasErrors","requestAnimationFrame","setRawDataURI","rawDataUris","loadBinary","downloadBinary","status","responseText","loadText","downloadText","loadJson","downloadJson","loadTexture","window","navigator","document","fetch","then","response","ok","blob","createImageBitmap","premultiplyAlpha","colorSpaceConversion","bitmap","Image","crossOrigin","onload","onerror","src","loadTextureAtlas","fileAlias","lastIndexOf","substring","abort","imagePath","e","require","removeAll","getToLoad","getLoaded","keys","getErrors","callbacks","dataUriToString","dataUri","startsWith","base64Idx","atob","base64ToUint8Array","base64","binary_string","bytes","Uint8Array","charCodeAt","dataUriToUint8Array","url","finish","JSON","stringify","request","XMLHttpRequest","overrideMimeType","open","done","send","parse","responseType","args","Event","intValue","floatValue","stringValue","volume","balance","EventData","audioPath","IkConstraint","findBone","apply1","uniform","apply2","targetX","targetY","p","rotationIK","tx","ty","sc","dd","child","bendDir","px","py","psx","psy","csx","os1","os2","s2","cx","cy","cwx","cwy","pp","a1","a2","l1","l2","td","sd","acos","aa","bb","ta","c1","c2","q","r0","minAngle","minX","minDist","minY","maxAngle","maxX","maxDist","maxY","os","IkConstraintData","_target","boneData","PathConstraintData","slotData","positionMode","Fixed","spacingMode","rotateMode","Chain","offsetRotation","PathConstraint","spaces","positions","segments","findSlot","tangents","Tangent","scale","ChainScale","boneCount","spacesCount","Percent","setupLength","Proportional","sum","epsilon","lengthSpacing","Length","computeWorldPositions","boneX","boneY","tip","out","verticesLength","curveCount","prevCurve","NONE","multiplier","pathLength","o","curve","space","BEFORE","addBeforePosition","AFTER","addAfterPosition","addCurvePosition","x1","y1","x2","y2","dddfx","dddfy","ddfx","ddfy","dfx","dfy","curveLength","segment","temp","isNaN","tt","ttt","uu","uuu","ut","ut3","uut3","utt3","PhysicsConstraint","_bone","_reset","ux","uy","xOffset","xVelocity","yOffset","yVelocity","rotateOffset","rotateVelocity","scaleOffset","scaleVelocity","remaining","rotateOrShearX","l","none","limit","referenceScale","m","Skeleton","yDown","ca","mr","invPI2","h","pose","translate","Slot","getSkeleton","TransformConstraint","relative","applyRelativeLocal","applyAbsoluteLocal","applyRelativeWorld","applyAbsoluteWorld","tb","tc","degRadReflect","offsetShearY","offsetScaleX","offsetScaleY","_updateCache","_scaleY","ikConstraintData","transformConstraintData","pathConstraintData","physicsConstraintData","updateCache","skinBones","ikCount","transformCount","pathCount","physicsCount","constraintCount","sortIkConstraint","sortTransformConstraint","sortPathConstraint","sortPhysicsConstraint","sortBone","constraints","constrained","sortReset","slotBone","sortPathConstraintAttachment","defaultSkin","skins","sortPathConstraintAttachmentWith","pathBones","nn","rootBone","getRootBone","updatable","setBonesToSetupPose","setSlotsToSetupPose","boneName","slotName","setSkinByName","skinName","findSkin","setSkin","newSkin","attachAll","getAttachmentByName","findIkConstraint","constraintName","find","findTransformConstraint","findPathConstraint","findPhysicsConstraint","getBoundsRect","getBounds","clipper","POSITIVE_INFINITY","NEGATIVE_INFINITY","quadTriangles","mesh","clipStart","isClipping","clipTriangles","clippedVertices","clipEndWithSlot","clipEnd","physicsTranslate","physicsRotate","PhysicsConstraintData","SkeletonData","animations","version","hash","fps","imagesPath","findEvent","eventDataName","SkinEntry","Skin","addSkin","contained","getAttachments","copySkin","dictionary","removeAttachment","slotAttachments","getAttachmentsForSlot","oldSkin","SlotData","blendMode","TransformConstraintData","SkeletonBinary","attachmentLoader","linkedMeshes","readSkeletonData","binary","input","BinaryInput","lowHash","readInt32","highHash","readString","readFloat","nonessential","readBoolean","readInt","str","strings","readByte","readStringRef","flags","readUnsignedByte","readSkin","linkedMesh","skinIndex","inheritTimeline","eventName","readAnimation","slotCount","readAttachment","Region","readSequence","BoundingBox","readVertices","box","Mesh","readFloatArray","readShortArray","LinkedMesh","inheritTimelines","Path","Point","Clipping","endSlotIndex","clip","weighted","Vertices","weights","bonesArray","timelineType","frameLast","SLOT_ATTACHMENT","SLOT_RGBA","CURVE_STEPPED","CURVE_BEZIER","SLOT_RGB","SLOT_RGBA2","nr","ng","nb","na","nr2","ng2","nb2","SLOT_RGB2","SLOT_ALPHA","BONE_INHERIT","BONE_ROTATE","readTimeline1","BONE_TRANSLATE","readTimeline2","BONE_TRANSLATEX","BONE_TRANSLATEY","BONE_SCALE","BONE_SCALEX","BONE_SCALEY","BONE_SHEAR","BONE_SHEARX","BONE_SHEARY","mix2","softness2","mixRotate2","mixX2","mixY2","mixScaleX2","mixScaleY2","mixShearY2","PATH_POSITION","PATH_SPACING","PATH_MIX","PHYSICS_RESET","PHYSICS_INERTIA","PHYSICS_STRENGTH","PHYSICS_DAMPING","PHYSICS_MASS","PHYSICS_WIND","PHYSICS_GRAVITY","PHYSICS_MIX","iii","nnn","ATTACHMENT_DEFORM","deformLength","vn","ATTACHMENT_SEQUENCE","drawOrderCount","offsetCount","unchanged","originalIndex","unchangedIndex","eventCount","eventData","buffer","DataView","ArrayBuffer","getInt8","getUint8","readShort","getInt16","getInt32","optimizePositive","byteCount","chars","String","fromCharCode","getFloat32","inheritDeform","nvalue1","nvalue2","SkeletonBounds","boundingBoxes","polygons","polygonPool","updateAabb","boundingBox","polygon","aabbCompute","aabbContainsPoint","aabbIntersectsSegment","aabbIntersectsSkeleton","bounds","containsPoint","containsPointPolygon","prevIndex","inside","vertexY","prevY","vertexX","intersectsSegment","intersectsSegmentPolygon","width12","height12","det1","x3","y3","x4","y4","det2","width34","height34","det3","getPolygon","getWidth","getHeight","Triangulator","convexPolygons","convexPolygonsIndices","indicesArray","isConcaveArray","polygonIndicesPool","triangulate","verticesArray","indices","isConcave","p1","p2","p3","p1x","p1y","p2x","p2y","p3x","p3y","positiveArea","previousIndex","nextIndex","decompose","polygonIndices","fanBaseIndex","lastWinding","t1","t2","t3","merged","winding1","winding","winding2","firstIndex","lastIndex","prevPrevX","prevPrevY","prevX","firstX","firstY","secondX","secondY","otherIndices","otherFirstIndex","otherSecondIndex","otherLastIndex","otherPoly","SkeletonClipping","triangulator","clippingPolygon","clipOutput","clippedUVs","clippedTriangles","scratch","clipAttachment","clippingPolygons","makeClockwise","trianglesLength","twoColor","clipTrianglesRender","clipTrianglesNoRender","polygonsCount","clippedVerticesItems","clippedTrianglesItems","clipOutputLength","clipOutputCount","clipOutputItems","vertexSize","u1","v1","u3","v3","d0","d1","d2","d4","c0","clipTrianglesUnpacked","clippedUVSItems","clippedUVsItems","clippingArea","output","originalOutput","clipped","clippingVerticesLast","clippingVertices","edgeX","edgeY","ex","ey","outputStart","inputVertices","inputX","inputY","inputX2","inputY2","s1","ix","iy","verticeslength","area","lastX","other","SkeletonJson","json","root","skeletonMap","spine","getValue","images","audio","boneMap","parentName","slotMap","ik","constraintMap","transform","targetName","skinMap","entryName","eventMap","animationMap","map","scaledVertices","timelineName","timelineMap","keyMap","nextMap","newColor","readCurve","color2","newColor2","aFrame","attachmentsName","attachmentsMap","slotMapName","attachmentMapName","attachmentMap","timelineMapName","verticesValue","lastDelay","drawOrderMap","offsets","offsetMap","name1","name2","createSkeletonData","textureAtlas","skeletonTextData","skeletonFileType","atlasLoader","async","loadTexturesByPath","imagePaths","imageExtensions","engine","textures","texturePromises","ext","imageLoaderType","AssetType","Texture2D","KTX","KTX2","all","atlasPath","baseUrl","parsedUrl","URL","origin","pathname","endsWith","getBaseUrl","err","loadTexturePromises","textureUrl","createTextureAtlas","forEach","AdaptiveTexture","createAdaptiveTexture","resourceManager","load","generateMipmaps","filterMode","TextureFilterMode","MipMapLinearLinear","Trilinear","Bilinear","wrapModeU","_convertWrapMode","wrapModeV","wrap","TextureWrapMode","Clamp","MirroredRepeat","Mirror","ReturnablePool","initializeCount","_type","_lastElementIndex","elements","_elements","return","ClearablePool","_usedElementCount","usedElementCount","SourceAlpha","One","DestinationColor","Zero","OneMinusSourceColor","OneMinusSourceAlpha","BlendFactor","Add","BlendOperation","setBlendMode","material","renderState","blendState","targetBlendState","Additive","sourceColorBlendFactor","destinationColorBlendFactor","sourceAlphaBlendFactor","destinationAlphaBlendFactor","colorBlendOperation","alphaBlendOperation","Multiply","Screen","SubRenderItem","maxBoundsValue","Infinity","minBoundsValue","SpineGenerator","QUAD_TRIANGLES","VERTEX_SIZE","VERTEX_STRIDE","tempDark","tempVerts","tempBlendMode","tempTexture","subPrimitivePool","SubPrimitive","subRenderItemPool","Vector3","getMaxVertexCount","skinLen","vc","_getSkinVertexCount","buildPrimitive","renderer","useClipping","zSpacing","setting","_clipper","_separateSlots","_subRenderItems","_separateSlotTextureMap","indicesLength","maxSlotCount","_indices","_vertices","_subPrimitives","primitiveIndex","attachmentColor","z","numFloats","regionAttachment","meshAttachment","finalVertices","finalVerticesLength","finalIndices","finalIndicesLength","skeletonColor","slotColor","verts","indexStart","_expandByPoint","blendModeChanged","textureChanged","slotNeedSeparate","subPrimitive","renderItem","separateTexture","oldTexture","lastLen","curLen","_clearSubPrimitives","_addSubPrimitive","subTexture","has","instanceId","SpineAnimationRenderer","_materialCache","_createMaterialForTexture","setMaterial","_vertexBuffer","setData","_indexBuffer","addSeparateSlot","addSeparateSlotTexture","_getDefaultMaterial","shaderData","newMinX","newMinY","newMinZ","newMaxX","newMaxY","newMaxZ","QUAD_TRIANGLE_LENGTH","Map","SpineMaterial","Material","_spineVS","_spineFS","Shader","create","enabled","depthState","writeEnabled","rasterState","cullMode","CullMode","Off","renderQueueType","RenderQueueType","Transparent","Renderer","_spineGenerator","_positionVertexElement","VertexElement","VertexElementFormat","_colorVertexElement","Vector4","_uvVertexElement","_animationDataCache","defaultMaterial","_defaultMaterial","clone","destroy","isGCIgnored","resource","_resource","_state","_skeleton","_addResourceReferCount","animationData","maxCount","_createBuffer","_initializeDefaultState","_dirtyUpdateFlag","_onAnimationStart","_onAnimationComplete","state","entity","SpineRenderSetting","defaultState","DefaultState","_needResizeBuffer","_vertexCount","primitive","Primitive","_engine","_primitive","addVertexElement","warn","_onEnable","_isContainDirtyFlag","_onWorldVolumeChanged","_setDirtyFlagFalse","_calculateGeneratorBounds","_render","context","_materials","materials","renderElement","_renderElementPool","priority","_distanceForSort","subRenderElementPool","_subRenderElementPool","destroyed","shader","_meshMagentaMaterial","subRenderElement","addSubRenderElement","camera","_renderPipeline","pushRenderElement","_updateBounds","worldBounds","worldMatrix","_cloneTo","_onDestroy","_clearMaterialCache","Uint16Array","vertexStride","vertexBuffer","Buffer","BufferBindFlag","VertexBuffer","BufferUsage","Dynamic","indexBuffer","IndexBuffer","vertexBufferBinding","VertexBufferBinding","setVertexBufferBinding","indexBufferBinding","IndexBufferBinding","IndexFormat","UInt16","setIndexBufferBinding","getTexture","getBlendMode","delete","SpineAnimationUpdateFlags","RendererUpdateFlags","SkeletonDataResource","ReferResource","_skeletonData","_associationTextureInSkeletonData","_disassociationSuperResource","_clearAttachmentTextures","resources","_associationSuperResource","BufferReader","byteOffset","byteLength","_dataView","_position","nextUint16","getUint16","nextStr","strByteLength","uint8Array","decodeText","nextImageData","TextDecoder","decode","il","decodeURIComponent","encodeURIComponent","SpineLoader","Loader","skeletonExtensions","parseAndAssignSpineAsset","fileExtension","bundle","getUrlExtension","includes","skeletonPath","skeletonExtension","deriveAndAssignSpineAsset","extensionPattern","test","atlasUrl","verifyFileExtensions","fileExtensions","expectArray","isArray","match","AssetPromise","urls","_handleOriginAsset","header","_handleEditorAsset","skeletonRawData","atlasRefId","refId","getResourceByRef","params","spineAssetBundle","_determineSkeletonDataType","extension","loadQueue","concat","jsonString","EditorSpineAtlasLoader","textureRefs","promises","refItem","registerClass"],"mappings":"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"}