import { AssetPromise, Engine, Texture2D } from "@galacean/engine";
import { TextureAtlas, SkeletonData, Texture, TextureFilter, TextureWrap } from "@esotericsoftware/spine-core";
export declare function createSkeletonData(textureAtlas: TextureAtlas, skeletonTextData: string | ArrayBuffer, skeletonFileType: 'json' | 'skel'): SkeletonData;
export declare function loadTexturesByPath(imagePaths: string[], imageExtensions: string[], engine: Engine): Promise<Texture2D[]>;
export declare function loadTextureAtlas(atlasPath: string, engine: Engine): Promise<TextureAtlas>;
export declare function createTextureAtlas(atlasText: string, textures: Texture2D[]): TextureAtlas;
export declare function loadTexture(url: string, engine: Engine, imageLoaderType?: string): AssetPromise<Texture2D>;
export declare function createAdaptiveTexture(texture: Texture2D): AdaptiveTexture;
export declare function getBaseUrl(url: string): string;
export declare class AdaptiveTexture extends Texture {
    texture: Texture2D;
    constructor(image: HTMLImageElement | ImageBitmap, texture: Texture2D);
    getImage(): any;
    setFilters(minFilter: TextureFilter, magFilter: TextureFilter): void;
    setWraps(uWrap: TextureWrap, vWrap: TextureWrap): void;
    dispose(): void;
    private _convertWrapMode;
}
