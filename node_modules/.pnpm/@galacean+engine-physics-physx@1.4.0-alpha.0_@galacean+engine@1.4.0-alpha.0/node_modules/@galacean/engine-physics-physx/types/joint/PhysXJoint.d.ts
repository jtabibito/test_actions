import { IJoint } from "@galacean/engine-design";
import { Quaternion, Vector3 } from "@galacean/engine";
import { PhysXCollider } from "../PhysXCollider";
import { PhysXPhysics } from "../PhysXPhysics";
/**
 * a base interface providing common functionality for PhysX joints
 */
export declare class PhysXJoint implements IJoint {
    protected static _xAxis: Vector3;
    protected static _defaultVec: Vector3;
    protected static _defaultQuat: Quaternion;
    protected _pxJoint: any;
    protected _collider: PhysXCollider;
    private _connectedAnchor;
    private _breakForce;
    private _breakTorque;
    protected _physXPhysics: PhysXPhysics;
    constructor(physXPhysics: PhysXPhysics);
    /**
     * {@inheritDoc IJoint.setConnectedCollider }
     */
    setConnectedCollider(value: PhysXCollider): void;
    /**
     * {@inheritDoc IJoint.setConnectedAnchor }
     */
    setConnectedAnchor(value: Vector3): void;
    /**
     * {@inheritDoc IJoint.setConnectedMassScale }
     */
    setConnectedMassScale(value: number): void;
    /**
     * {@inheritDoc IJoint.setConnectedInertiaScale }
     */
    setConnectedInertiaScale(value: number): void;
    /**
     * {@inheritDoc IJoint.setMassScale }
     */
    setMassScale(value: number): void;
    /**
     * {@inheritDoc IJoint.setInertiaScale }
     */
    setInertiaScale(value: number): void;
    /**
     * {@inheritDoc IJoint.setBreakForce }
     */
    setBreakForce(value: number): void;
    /**
     * {@inheritDoc IJoint.setBreakTorque }
     */
    setBreakTorque(value: number): void;
    /**
     * Set the joint local pose for an actor.
     * @param actor 0 for the first actor, 1 for the second actor.
     * @param position the local position for the actor this joint
     * @param rotation the local rotation for the actor this joint
     */
    protected _setLocalPose(actor: number, position: Vector3, rotation: Quaternion): void;
}
