import { Vector3 } from "@galacean/engine";
import { ISphereColliderShape } from "@galacean/engine-design";
import { PhysXPhysics } from "../PhysXPhysics";
import { PhysXPhysicsMaterial } from "../PhysXPhysicsMaterial";
import { PhysXColliderShape } from "./PhysXColliderShape";
/**
 * Sphere collider shape in PhysX.
 */
export declare class PhysXSphereColliderShape extends PhysXColliderShape implements ISphereColliderShape {
    private _radius;
    private _maxScale;
    constructor(physXPhysics: PhysXPhysics, uniqueID: number, radius: number, material: PhysXPhysicsMaterial);
    /**
     * {@inheritDoc ISphereColliderShape.setRadius }
     */
    setRadius(value: number): void;
    /**
     * {@inheritDoc IColliderShape.setWorldScale }
     */
    setWorldScale(scale: Vector3): void;
}
