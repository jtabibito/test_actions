import { ICapsuleColliderShape } from "@galacean/engine-design";
import { Vector3 } from "@galacean/engine";
import { PhysXPhysics } from "../PhysXPhysics";
import { PhysXPhysicsMaterial } from "../PhysXPhysicsMaterial";
import { PhysXColliderShape } from "./PhysXColliderShape";
/**
 * Capsule collider shape in PhysX.
 */
export declare class PhysXCapsuleColliderShape extends PhysXColliderShape implements ICapsuleColliderShape {
    private _upAxis;
    private _sizeScale;
    constructor(physXPhysics: PhysXPhysics, uniqueID: number, radius: number, height: number, material: PhysXPhysicsMaterial);
    /**
     * {@inheritDoc ICapsuleColliderShape.setRadius }
     */
    setRadius(value: number): void;
    /**
     * {@inheritDoc ICapsuleColliderShape.setHeight }
     */
    setHeight(value: number): void;
    /**
     * {@inheritDoc ICapsuleColliderShape.setUpAxis }
     */
    setUpAxis(upAxis: ColliderShapeUpAxis): void;
    /**
     * {@inheritDoc IColliderShape.setWorldScale }
     */
    setWorldScale(scale: Vector3): void;
}
/**
 * The up axis of the collider shape.
 */
declare enum ColliderShapeUpAxis {
    /** Up axis is X. */
    X = 0,
    /** Up axis is Y. */
    Y = 1,
    /** Up axis is Z. */
    Z = 2
}
export {};
