{"version":3,"file":"SphereScript.js","sources":["../../src/SphereScript.ts"],"sourcesContent":["import {\n  Camera,\n  Color,\n  Component,\n  Entity,\n  Layer,\n  MathUtil,\n  Matrix,\n  Pointer,\n  Quaternion,\n  Ray,\n  Script,\n  TextRenderer,\n  Vector2,\n  Vector3\n} from \"@galacean/engine\";\n\n/** @internal */\nexport class SphereScript extends Script {\n  private static _startQuat: Quaternion = new Quaternion();\n  private static _startPointer: Vector2 = new Vector2();\n  private static _startPos: Vector3 = new Vector3();\n  private static _startAxis: Vector3 = new Vector3();\n  private static _tempMat: Matrix = new Matrix();\n\n  private static _vector: Vector3 = new Vector3();\n\n  private _isTriggered: boolean = false;\n  private _speedXFactor: number = 0.02;\n  private _speedYFactor: number = 0.004;\n\n  private _directionEntity: Entity;\n  private _endEntity: Entity;\n  private _xEntity: Entity;\n  private _yEntity: Entity;\n  private _zEntity: Entity;\n  private _roundEntity: Entity;\n  private _gizmoCamera: Camera;\n  private _gizmoCameraEntity: Entity;\n  private _textColor: Array<Color> = [];\n\n  private _sceneCamera: Camera;\n  private _sceneCameraEntity: Entity;\n\n  private _tempQuat: Quaternion = new Quaternion();\n  private _tempQuat2: Quaternion = new Quaternion();\n  private _deltaPointer: Vector2 = new Vector2();\n  private _tempMat: Matrix = new Matrix();\n  private _upVec: Vector3 = new Vector3(0, 1, 0);\n  private _topVec: Vector3 = new Vector3(0, 1, 0);\n  private _bottomVec: Vector3 = new Vector3(0, -1, 0);\n  private _target: Vector3 = SphereScript._vector;\n  private _currentPos: Vector3 = new Vector3();\n  private _rotateVec: Vector3 = new Vector3();\n  private _tempUpVec: Vector3 = new Vector3();\n  private _startRadian: number = 0;\n\n  private _ray: Ray = new Ray();\n  private _isBack: boolean = false;\n\n  private _disabledCompArray: Array<Component> = [];\n\n  /**\n   * @return scene camera\n   */\n  get camera(): Camera {\n    return this._sceneCamera;\n  }\n\n  set camera(camera: Camera) {\n    this._sceneCamera = camera;\n    this._sceneCameraEntity = this._sceneCamera.entity;\n  }\n\n  /**\n   * @return target point\n   */\n  get target(): Vector3 {\n    return this._target;\n  }\n\n  set target(value: Vector3) {\n    this._target.copyFrom(value);\n  }\n\n  override onAwake() {\n    const gizmoEntity = this.entity.parent;\n    this._directionEntity = gizmoEntity.findByName(\"direction\");\n    this._roundEntity = this.entity.findByName(\"round\");\n    this._endEntity = this._directionEntity.findByName(\"end\");\n    this._gizmoCameraEntity = gizmoEntity.findByName(\"gizmo-camera\");\n    this._gizmoCamera = this._gizmoCameraEntity.getComponent(Camera);\n\n    this._xEntity = this._endEntity.findByName(\"-x\").findByName(\"back\");\n    this._yEntity = this._endEntity.findByName(\"-y\").findByName(\"back\");\n    this._zEntity = this._endEntity.findByName(\"-z\").findByName(\"back\");\n\n    // original text color\n    this._getTextColor();\n  }\n\n  override onPointerEnter() {\n    this._roundEntity.isActive = true;\n    this._xEntity.isActive = true;\n    this._yEntity.isActive = true;\n    this._zEntity.isActive = true;\n  }\n\n  override onPointerExit() {\n    if (!this._isTriggered) {\n      this._roundEntity.isActive = false;\n      this._xEntity.isActive = false;\n      this._yEntity.isActive = false;\n      this._zEntity.isActive = false;\n    }\n  }\n\n  override onPointerDown(pointer: Pointer) {\n    this._disableComponent();\n    this._recoverTextColor();\n\n    // get targetPoint\n    SphereScript._startPos.copyFrom(this._sceneCameraEntity.transform.worldPosition);\n\n    SphereScript._startQuat.copyFrom(this._directionEntity.transform.worldRotationQuaternion);\n    SphereScript._startPointer.copyFrom(pointer.position);\n\n    this._tempUpVec.copyFrom(this._sceneCameraEntity.transform.worldUp);\n    this._isBack = this._tempUpVec.y <= 0;\n    this._upVec.copyFrom(this._isBack ? this._bottomVec : this._topVec);\n    SphereScript._startAxis.copyFrom(this._sceneCameraEntity.transform.worldForward);\n    Vector3.cross(SphereScript._startAxis, this._upVec, SphereScript._startAxis);\n\n    Vector3.subtract(SphereScript._startPos, this._target, this._tempUpVec);\n    const radius = this._tempUpVec.length();\n    const dot = Vector3.dot(this._tempUpVec, this._upVec);\n    if (this._isBack) {\n      this._startRadian = Math.PI + Math.acos(MathUtil.clamp(dot / radius, -1, 1));\n    } else {\n      this._startRadian = Math.acos(MathUtil.clamp(dot / radius, -1, 1));\n    }\n\n    this._isTriggered = true;\n    this._navigateCamera(pointer);\n  }\n\n  override onPointerDrag(pointer: Pointer) {\n    this._navigateCamera(pointer);\n  }\n\n  override onPointerUp(pointer: Pointer) {\n    if (this._isTriggered) {\n      this._gizmoCamera.screenPointToRay(pointer.position, this._ray);\n      const result = this.engine.physicsManager.raycast(this._ray, Number.MAX_VALUE, Layer.Everything);\n      if (!result) {\n        this._roundEntity.isActive = false;\n        this._xEntity.isActive = false;\n        this._yEntity.isActive = false;\n        this._zEntity.isActive = false;\n      }\n\n      this._isTriggered = false;\n      this._enableComponent();\n    }\n  }\n  override onUpdate() {\n    if (this._isTriggered) {\n      this._upVec.copyFrom(this._isBack ? this._bottomVec : this._topVec);\n      Matrix.lookAt(this._currentPos, this._target, this._upVec, this._tempMat);\n      this._tempMat.invert();\n      this._sceneCameraEntity.transform.worldMatrix = this._tempMat;\n    }\n    SphereScript._tempMat.copyFrom(this._sceneCamera.viewMatrix);\n    const { elements: ele } = SphereScript._tempMat;\n    // ignore translate\n    ele[12] = ele[13] = ele[14] = 0;\n    this._directionEntity.transform.worldMatrix = SphereScript._tempMat;\n  }\n\n  // delta x translate to rotation around axis y\n  // delta y translate to rotation around axis vertical to scene camera\n  private _navigateCamera(pointer: Pointer) {\n    const movePointer = pointer.position;\n    Vector2.subtract(SphereScript._startPointer, movePointer, this._deltaPointer);\n\n    let x = -this._deltaPointer.x * this._speedXFactor;\n    let y = -this._deltaPointer.y * this._speedYFactor;\n\n    const isBetween = this._startRadian - y > Math.PI && this._startRadian - y < 2 * Math.PI;\n\n    this._isBack = this._startRadian - y <= 0 || isBetween;\n\n    const { _tempQuat: tempQuat, _tempQuat2: tempQuat2 } = this;\n\n    Quaternion.rotationAxisAngle(SphereScript._startAxis, y, tempQuat);\n    Quaternion.rotationYawPitchRoll(x, 0, 0, tempQuat2);\n    Quaternion.multiply(tempQuat, tempQuat2, tempQuat);\n    Vector3.subtract(SphereScript._startPos, this._target, this._rotateVec);\n\n    Vector3.transformByQuat(this._rotateVec, tempQuat.invert(), this._currentPos);\n    Vector3.add(this._target, this._currentPos, this._currentPos);\n  }\n\n  private _getTextColor() {\n    const entities = this._endEntity.children;\n    for (let i = 0; i < entities.length; i++) {\n      const textEntity = entities[i].findByName(\"text\");\n      const textRenderer = textEntity.getComponent(TextRenderer);\n      const textColor = textRenderer.color.clone();\n      this._textColor.push(textColor);\n    }\n  }\n\n  private _recoverTextColor() {\n    const entities = this._endEntity.children;\n    for (let i = 0; i < entities.length; i++) {\n      const textEntity = entities[i].findByName(\"text\");\n      const textRenderer = textEntity.getComponent(TextRenderer);\n      textRenderer.color.copyFrom(this._textColor[i]);\n    }\n  }\n\n  private _disableComponent() {\n    const components = [];\n    this._sceneCameraEntity.getComponents(Script, components);\n    for (let i = 0; i < components.length; i++) {\n      const currentComponent = components[i];\n      const proto = Object.getPrototypeOf(currentComponent);\n      if (proto.onUpdate || proto.onLateUpdate || proto.onPhysicsUpdate) {\n        if (currentComponent.enabled) {\n          currentComponent.enabled = false;\n          this._disabledCompArray.push(currentComponent);\n        }\n      }\n    }\n  }\n\n  private _enableComponent() {\n    for (let i = 0; i < this._disabledCompArray.length; i++) {\n      const currentComponent = this._disabledCompArray[i];\n      currentComponent.enabled = true;\n    }\n  }\n}\n"],"names":["SphereScript","_isTriggered","_speedXFactor","_speedYFactor","_textColor","_tempQuat","Quaternion","_tempQuat2","_deltaPointer","Vector2","_tempMat","Matrix","_upVec","Vector3","_topVec","_bottomVec","_target","_vector","_currentPos","_rotateVec","_tempUpVec","_startRadian","_ray","Ray","_isBack","_disabledCompArray","onAwake","gizmoEntity","entity","parent","_directionEntity","findByName","_roundEntity","_endEntity","_gizmoCameraEntity","_gizmoCamera","getComponent","Camera","_xEntity","_yEntity","_zEntity","_getTextColor","onPointerEnter","isActive","onPointerExit","onPointerDown","pointer","_disableComponent","_recoverTextColor","_startPos","copyFrom","_sceneCameraEntity","transform","worldPosition","_startQuat","worldRotationQuaternion","_startPointer","position","worldUp","y","_startAxis","worldForward","cross","subtract","radius","length","dot","Math","PI","acos","MathUtil","clamp","_navigateCamera","onPointerDrag","onPointerUp","screenPointToRay","result","engine","physicsManager","raycast","Number","MAX_VALUE","Layer","Everything","_enableComponent","onUpdate","lookAt","invert","worldMatrix","_sceneCamera","viewMatrix","ele","elements","movePointer","x","isBetween","tempQuat","tempQuat2","rotationAxisAngle","rotationYawPitchRoll","multiply","transformByQuat","add","entities","children","i","textEntity","textRenderer","TextRenderer","textColor","color","clone","push","components","getComponents","Script","currentComponent","proto","Object","getPrototypeOf","onLateUpdate","onPhysicsUpdate","enabled","camera","target","value"],"mappings":"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"}