{"version":3,"file":"Utils.js","sources":["../../src/Utils.ts"],"sourcesContent":["import { Mesh, Engine, PrimitiveMesh, ModelMesh, Vector3 } from \"@galacean/engine\";\nimport { createCircleMesh } from \"./CircleMesh\";\nimport { PlainColorMaterial } from \"@galacean/engine-toolkit-custom-material\";\n\n/** @internal */\nexport class Utils {\n  public redMaterial: PlainColorMaterial;\n  public greenMaterial: PlainColorMaterial;\n  public blueMaterial: PlainColorMaterial;\n  public bgMaterial: PlainColorMaterial;\n  public greyMaterial: PlainColorMaterial;\n\n  public axisMesh: Mesh;\n  public endMesh: ModelMesh;\n  public bgMesh: ModelMesh;\n\n  public radius: number = 9.2;\n  public endRadius: number = 1.6;\n  public axisLength: number = this.radius - 2 * this.endRadius;\n  public endDist: number = this.radius - this.endRadius;\n\n  public xRotateVector: Vector3 = new Vector3();\n  public yRotateVector: Vector3 = new Vector3();\n  public zRotateVector: Vector3 = new Vector3();\n\n  public xTranslateVector: Vector3 = new Vector3();\n  public yTranslateVector: Vector3 = new Vector3();\n  public zTranslateVector: Vector3 = new Vector3();\n\n  public xEndTranslateVector: Vector3 = new Vector3();\n  public yEndTranslateVector: Vector3 = new Vector3();\n  public zEndTranslateVector: Vector3 = new Vector3();\n\n  constructor(engine: Engine) {\n    const redMaterial = new PlainColorMaterial(engine);\n    redMaterial.isTransparent = true;\n    redMaterial.baseColor.set(1.0, 0.25, 0.25, 1.0);\n    this.redMaterial = redMaterial;\n\n    const greenMaterial = new PlainColorMaterial(engine);\n    greenMaterial.isTransparent = true;\n    greenMaterial.baseColor.set(0.5, 0.8, 0.2, 1.0);\n    this.greenMaterial = greenMaterial;\n\n    const blueMaterial = new PlainColorMaterial(engine);\n    blueMaterial.isTransparent = true;\n    blueMaterial.baseColor.set(0.3, 0.5, 1.0, 1.0);\n    this.blueMaterial = blueMaterial;\n\n    const bgMaterial = new PlainColorMaterial(engine);\n    bgMaterial.isTransparent = true;\n    bgMaterial.baseColor.set(1, 1, 1, 0.1);\n    this.bgMaterial = bgMaterial;\n\n    const greyMaterial = new PlainColorMaterial(engine);\n    greyMaterial.isTransparent = true;\n    greyMaterial.baseColor.set(0.5, 0.5, 0.5, 1);\n    this.greyMaterial = greyMaterial;\n\n    this.axisMesh = PrimitiveMesh.createCylinder(engine, 0.12, 0.12, this.axisLength);\n\n    this.bgMesh = createCircleMesh(engine, this.radius, 144);\n    this.endMesh = createCircleMesh(engine, this.endRadius - 0.2);\n\n    this.xRotateVector = new Vector3(0, 0, 90);\n    this.yRotateVector = new Vector3(0, 90, 0);\n    this.zRotateVector = new Vector3(90, 0, 0);\n\n    this.xTranslateVector = new Vector3(this.axisLength * 0.5, 0, 0);\n    this.yTranslateVector = new Vector3(0, this.axisLength * 0.5, 0);\n    this.zTranslateVector = new Vector3(0, 0, this.axisLength * 0.5);\n\n    this.xEndTranslateVector = new Vector3(this.endDist, 0, 0);\n    this.yEndTranslateVector = new Vector3(0, this.endDist, 0);\n    this.zEndTranslateVector = new Vector3(0, 0, this.endDist);\n  }\n}\n"],"names":["Utils","engine","radius","endRadius","axisLength","endDist","xRotateVector","Vector3","yRotateVector","zRotateVector","xTranslateVector","yTranslateVector","zTranslateVector","xEndTranslateVector","yEndTranslateVector","zEndTranslateVector","redMaterial","PlainColorMaterial","isTransparent","baseColor","set","greenMaterial","blueMaterial","bgMaterial","greyMaterial","axisMesh","PrimitiveMesh","createCylinder","bgMesh","createCircleMesh","endMesh"],"mappings":"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"}