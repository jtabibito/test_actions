{"version":3,"file":"EndScript.js","sources":["../../src/EndScript.ts"],"sourcesContent":["import {\n  Camera,\n  Color,\n  Component,\n  Entity,\n  MathUtil,\n  Matrix,\n  Quaternion,\n  Script,\n  TextRenderer,\n  Vector3\n} from \"@galacean/engine\";\n\n/** @internal */\nexport class EndScript extends Script {\n  private static _vector: Vector3 = new Vector3();\n\n  private _flipView: boolean = false;\n  private _flipSpeed = 3.0;\n  private _progress: number = 0;\n\n  private _sceneCamera: Camera;\n  private _sceneCameraEntity: Entity;\n\n  private _backEntity: Entity;\n  private _textRenderer: TextRenderer;\n  private _textColor: Color = new Color();\n\n  private _target: Vector3 = EndScript._vector;\n\n  private _normalQuat: Quaternion = new Quaternion();\n  private _tempMat: Matrix = new Matrix();\n  private _targetMat: Matrix = new Matrix();\n  private _currentMat: Matrix = new Matrix();\n  private _startMat: Matrix = new Matrix();\n  private _tempVect: Vector3 = new Vector3();\n  private _tempEyeVect: Vector3 = new Vector3();\n  private _upVector: Vector3 = new Vector3(0, 1, 0);\n\n  private _disabledCompArray: Array<Component> = [];\n\n  private AxisFactor = {\n    x: {\n      upVector: this._upVector,\n      axis: \"x\",\n      factor: 1,\n      unit: new Vector3(0, 0.001, 0)\n    },\n    y: {\n      upVector: this._upVector,\n      axis: \"y\",\n      factor: 1,\n      unit: new Vector3(0, 0, 0.001)\n    },\n    z: {\n      upVector: this._upVector,\n      axis: \"z\",\n      factor: 1,\n      unit: new Vector3(0, 0.001, 0)\n    },\n    \"-x\": {\n      upVector: this._upVector,\n      axis: \"x\",\n      factor: -1,\n      unit: new Vector3(0, 0.001, 0)\n    },\n    \"-y\": {\n      upVector: new Vector3(0, -1, 0),\n      axis: \"y\",\n      factor: -1,\n      unit: new Vector3(0, 0, -0.001)\n    },\n    \"-z\": {\n      upVector: this._upVector,\n      axis: \"z\",\n      factor: -1,\n      unit: new Vector3(0, 0.001, 0)\n    }\n  };\n\n  /**\n   * @return scene camera\n   */\n  get camera(): Camera {\n    return this._sceneCamera;\n  }\n\n  set camera(camera: Camera) {\n    this._sceneCamera = camera;\n    this._sceneCameraEntity = this._sceneCamera.entity;\n  }\n\n  /**\n   * target point for gizmo, default (0,0,0)\n   * @return target point\n   */\n  get target(): Vector3 {\n    return this._target;\n  }\n\n  set target(value: Vector3) {\n    this._target.copyFrom(value);\n  }\n\n  override onAwake() {\n    const textEntity = this.entity.findByName(\"text\");\n    this._textRenderer = textEntity.getComponent(TextRenderer);\n    this._textColor.copyFrom(this._textRenderer.color);\n\n    this._backEntity = this.entity.findByName(\"back\");\n  }\n\n  override onPointerEnter() {\n    this._textRenderer.color.set(1, 1, 1, 1);\n    this._backEntity.isActive = true;\n  }\n\n  override onPointerExit() {\n    this._textRenderer.color.copyFrom(this._textColor);\n    this._backEntity.isActive = false;\n  }\n\n  override onPointerClick() {\n    this._disableComponent();\n\n    const currentAxisName = this.entity.name;\n    this._startMat = this._sceneCameraEntity.transform.worldMatrix.clone();\n    this._currentMat = this._sceneCameraEntity.transform.worldMatrix;\n    this._targetMat = this._getTargetMatrix(this._sceneCameraEntity, currentAxisName);\n\n    this._flipView = true;\n  }\n\n  override onUpdate(deltaTime: number) {\n    this.entity.transform.worldRotationQuaternion = this._normalQuat;\n\n    if (this._flipView) {\n      this._progress += deltaTime;\n      let t = MathUtil.clamp(this._progress * this._flipSpeed, 0, 1);\n      if (t >= 1) {\n        this._flipView = false;\n        this._progress = 0;\n\n        this._enableComponent();\n      }\n\n      Matrix.lerp(this._startMat, this._targetMat, t, this._currentMat);\n      this._sceneCameraEntity.transform.worldMatrix = this._currentMat;\n    }\n  }\n\n  private _getTargetMatrix(entity: Entity, axisName: string) {\n    const { _target: tempTargetVect, _tempEyeVect: tempEyeVect, _tempVect: tempVect, _tempMat: tempMat } = this;\n    const { upVector, factor, axis, unit } = this.AxisFactor[axisName];\n\n    Vector3.subtract(entity.transform.worldPosition, tempTargetVect, tempVect);\n    const radius = tempVect.length();\n    unit[axis] = factor * radius;\n\n    // get eye position\n    Vector3.add(unit, tempTargetVect, tempEyeVect);\n\n    // get worldMatrix for scene camera\n    Matrix.lookAt(tempEyeVect, tempTargetVect, upVector, tempMat);\n    tempMat.invert();\n    return tempMat;\n  }\n\n  private _disableComponent() {\n    const components = [];\n    this._sceneCameraEntity.getComponents(Script, components);\n    for (let i = 0; i < components.length; i++) {\n      const currentComponent = components[i];\n      const proto = Object.getPrototypeOf(currentComponent);\n      if (proto.onUpdate || proto.onLateUpdate || proto.onPhysicsUpdate) {\n        if (currentComponent.enabled) {\n          currentComponent.enabled = false;\n          this._disabledCompArray.push(currentComponent);\n        }\n      }\n    }\n  }\n\n  private _enableComponent() {\n    for (let i = 0; i < this._disabledCompArray.length; i++) {\n      const currentComponent = this._disabledCompArray[i];\n      currentComponent.enabled = true;\n    }\n  }\n}\n"],"names":["EndScript","_flipView","_flipSpeed","_progress","_textColor","Color","_target","_vector","_normalQuat","Quaternion","_tempMat","Matrix","_targetMat","_currentMat","_startMat","_tempVect","Vector3","_tempEyeVect","_upVector","_disabledCompArray","AxisFactor","x","upVector","axis","factor","unit","y","z","onAwake","textEntity","entity","findByName","_textRenderer","getComponent","TextRenderer","copyFrom","color","_backEntity","onPointerEnter","set","isActive","onPointerExit","onPointerClick","_disableComponent","currentAxisName","name","_sceneCameraEntity","transform","worldMatrix","clone","_getTargetMatrix","onUpdate","deltaTime","worldRotationQuaternion","t","MathUtil","clamp","_enableComponent","lerp","axisName","tempTargetVect","tempEyeVect","tempVect","tempMat","subtract","worldPosition","radius","length","add","lookAt","invert","components","getComponents","Script","i","currentComponent","proto","Object","getPrototypeOf","onLateUpdate","onPhysicsUpdate","enabled","push","camera","_sceneCamera","target","value"],"mappings":"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"}