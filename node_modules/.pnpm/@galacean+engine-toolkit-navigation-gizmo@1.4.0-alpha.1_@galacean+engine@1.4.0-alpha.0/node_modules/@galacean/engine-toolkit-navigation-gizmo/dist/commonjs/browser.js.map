{"version":3,"file":"browser.js","sources":["../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_assert_this_initialized.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_create_class.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_set_prototype_of.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_inherits.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_array_like_to_array.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_create_for_of_iterator_helper_loose.js","../../src/EndScript.ts","../../src/SphereScript.ts","../../src/CircleMesh.ts","../../src/Utils.ts","../../src/NavigationGizmo.ts"],"sourcesContent":["export function _assert_this_initialized(self) {\n    if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\n    return self;\n}\nexport { _assert_this_initialized as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _set_prototype_of } from \"./_set_prototype_of.js\";\n\nexport function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","import { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _create_for_of_iterator_helper_loose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (it) return (it = it.call(o)).next.bind(it);\n    // Fallback for engines without symbol support\n    if (Array.isArray(o) || (it = _unsupported_iterable_to_array(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n\n        var i = 0;\n\n        return function() {\n            if (i >= o.length) return { done: true };\n\n            return { done: false, value: o[i++] };\n        };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _create_for_of_iterator_helper_loose as _ };\n","import {\n  Camera,\n  Color,\n  Component,\n  Entity,\n  MathUtil,\n  Matrix,\n  Quaternion,\n  Script,\n  TextRenderer,\n  Vector3\n} from \"@galacean/engine\";\n\n/** @internal */\nexport class EndScript extends Script {\n  private static _vector: Vector3 = new Vector3();\n\n  private _flipView: boolean = false;\n  private _flipSpeed = 3.0;\n  private _progress: number = 0;\n\n  private _sceneCamera: Camera;\n  private _sceneCameraEntity: Entity;\n\n  private _backEntity: Entity;\n  private _textRenderer: TextRenderer;\n  private _textColor: Color = new Color();\n\n  private _target: Vector3 = EndScript._vector;\n\n  private _normalQuat: Quaternion = new Quaternion();\n  private _tempMat: Matrix = new Matrix();\n  private _targetMat: Matrix = new Matrix();\n  private _currentMat: Matrix = new Matrix();\n  private _startMat: Matrix = new Matrix();\n  private _tempVect: Vector3 = new Vector3();\n  private _tempEyeVect: Vector3 = new Vector3();\n  private _upVector: Vector3 = new Vector3(0, 1, 0);\n\n  private _disabledCompArray: Array<Component> = [];\n\n  private AxisFactor = {\n    x: {\n      upVector: this._upVector,\n      axis: \"x\",\n      factor: 1,\n      unit: new Vector3(0, 0.001, 0)\n    },\n    y: {\n      upVector: this._upVector,\n      axis: \"y\",\n      factor: 1,\n      unit: new Vector3(0, 0, 0.001)\n    },\n    z: {\n      upVector: this._upVector,\n      axis: \"z\",\n      factor: 1,\n      unit: new Vector3(0, 0.001, 0)\n    },\n    \"-x\": {\n      upVector: this._upVector,\n      axis: \"x\",\n      factor: -1,\n      unit: new Vector3(0, 0.001, 0)\n    },\n    \"-y\": {\n      upVector: new Vector3(0, -1, 0),\n      axis: \"y\",\n      factor: -1,\n      unit: new Vector3(0, 0, -0.001)\n    },\n    \"-z\": {\n      upVector: this._upVector,\n      axis: \"z\",\n      factor: -1,\n      unit: new Vector3(0, 0.001, 0)\n    }\n  };\n\n  /**\n   * @return scene camera\n   */\n  get camera(): Camera {\n    return this._sceneCamera;\n  }\n\n  set camera(camera: Camera) {\n    this._sceneCamera = camera;\n    this._sceneCameraEntity = this._sceneCamera.entity;\n  }\n\n  /**\n   * target point for gizmo, default (0,0,0)\n   * @return target point\n   */\n  get target(): Vector3 {\n    return this._target;\n  }\n\n  set target(value: Vector3) {\n    this._target.copyFrom(value);\n  }\n\n  override onAwake() {\n    const textEntity = this.entity.findByName(\"text\");\n    this._textRenderer = textEntity.getComponent(TextRenderer);\n    this._textColor.copyFrom(this._textRenderer.color);\n\n    this._backEntity = this.entity.findByName(\"back\");\n  }\n\n  override onPointerEnter() {\n    this._textRenderer.color.set(1, 1, 1, 1);\n    this._backEntity.isActive = true;\n  }\n\n  override onPointerExit() {\n    this._textRenderer.color.copyFrom(this._textColor);\n    this._backEntity.isActive = false;\n  }\n\n  override onPointerClick() {\n    this._disableComponent();\n\n    const currentAxisName = this.entity.name;\n    this._startMat = this._sceneCameraEntity.transform.worldMatrix.clone();\n    this._currentMat = this._sceneCameraEntity.transform.worldMatrix;\n    this._targetMat = this._getTargetMatrix(this._sceneCameraEntity, currentAxisName);\n\n    this._flipView = true;\n  }\n\n  override onUpdate(deltaTime: number) {\n    this.entity.transform.worldRotationQuaternion = this._normalQuat;\n\n    if (this._flipView) {\n      this._progress += deltaTime;\n      let t = MathUtil.clamp(this._progress * this._flipSpeed, 0, 1);\n      if (t >= 1) {\n        this._flipView = false;\n        this._progress = 0;\n\n        this._enableComponent();\n      }\n\n      Matrix.lerp(this._startMat, this._targetMat, t, this._currentMat);\n      this._sceneCameraEntity.transform.worldMatrix = this._currentMat;\n    }\n  }\n\n  private _getTargetMatrix(entity: Entity, axisName: string) {\n    const { _target: tempTargetVect, _tempEyeVect: tempEyeVect, _tempVect: tempVect, _tempMat: tempMat } = this;\n    const { upVector, factor, axis, unit } = this.AxisFactor[axisName];\n\n    Vector3.subtract(entity.transform.worldPosition, tempTargetVect, tempVect);\n    const radius = tempVect.length();\n    unit[axis] = factor * radius;\n\n    // get eye position\n    Vector3.add(unit, tempTargetVect, tempEyeVect);\n\n    // get worldMatrix for scene camera\n    Matrix.lookAt(tempEyeVect, tempTargetVect, upVector, tempMat);\n    tempMat.invert();\n    return tempMat;\n  }\n\n  private _disableComponent() {\n    const components = [];\n    this._sceneCameraEntity.getComponents(Script, components);\n    for (let i = 0; i < components.length; i++) {\n      const currentComponent = components[i];\n      const proto = Object.getPrototypeOf(currentComponent);\n      if (proto.onUpdate || proto.onLateUpdate || proto.onPhysicsUpdate) {\n        if (currentComponent.enabled) {\n          currentComponent.enabled = false;\n          this._disabledCompArray.push(currentComponent);\n        }\n      }\n    }\n  }\n\n  private _enableComponent() {\n    for (let i = 0; i < this._disabledCompArray.length; i++) {\n      const currentComponent = this._disabledCompArray[i];\n      currentComponent.enabled = true;\n    }\n  }\n}\n","import {\n  Camera,\n  Color,\n  Component,\n  Entity,\n  Layer,\n  MathUtil,\n  Matrix,\n  Pointer,\n  Quaternion,\n  Ray,\n  Script,\n  TextRenderer,\n  Vector2,\n  Vector3\n} from \"@galacean/engine\";\n\n/** @internal */\nexport class SphereScript extends Script {\n  private static _startQuat: Quaternion = new Quaternion();\n  private static _startPointer: Vector2 = new Vector2();\n  private static _startPos: Vector3 = new Vector3();\n  private static _startAxis: Vector3 = new Vector3();\n  private static _tempMat: Matrix = new Matrix();\n\n  private static _vector: Vector3 = new Vector3();\n\n  private _isTriggered: boolean = false;\n  private _speedXFactor: number = 0.02;\n  private _speedYFactor: number = 0.004;\n\n  private _directionEntity: Entity;\n  private _endEntity: Entity;\n  private _xEntity: Entity;\n  private _yEntity: Entity;\n  private _zEntity: Entity;\n  private _roundEntity: Entity;\n  private _gizmoCamera: Camera;\n  private _gizmoCameraEntity: Entity;\n  private _textColor: Array<Color> = [];\n\n  private _sceneCamera: Camera;\n  private _sceneCameraEntity: Entity;\n\n  private _tempQuat: Quaternion = new Quaternion();\n  private _tempQuat2: Quaternion = new Quaternion();\n  private _deltaPointer: Vector2 = new Vector2();\n  private _tempMat: Matrix = new Matrix();\n  private _upVec: Vector3 = new Vector3(0, 1, 0);\n  private _topVec: Vector3 = new Vector3(0, 1, 0);\n  private _bottomVec: Vector3 = new Vector3(0, -1, 0);\n  private _target: Vector3 = SphereScript._vector;\n  private _currentPos: Vector3 = new Vector3();\n  private _rotateVec: Vector3 = new Vector3();\n  private _tempUpVec: Vector3 = new Vector3();\n  private _startRadian: number = 0;\n\n  private _ray: Ray = new Ray();\n  private _isBack: boolean = false;\n\n  private _disabledCompArray: Array<Component> = [];\n\n  /**\n   * @return scene camera\n   */\n  get camera(): Camera {\n    return this._sceneCamera;\n  }\n\n  set camera(camera: Camera) {\n    this._sceneCamera = camera;\n    this._sceneCameraEntity = this._sceneCamera.entity;\n  }\n\n  /**\n   * @return target point\n   */\n  get target(): Vector3 {\n    return this._target;\n  }\n\n  set target(value: Vector3) {\n    this._target.copyFrom(value);\n  }\n\n  override onAwake() {\n    const gizmoEntity = this.entity.parent;\n    this._directionEntity = gizmoEntity.findByName(\"direction\");\n    this._roundEntity = this.entity.findByName(\"round\");\n    this._endEntity = this._directionEntity.findByName(\"end\");\n    this._gizmoCameraEntity = gizmoEntity.findByName(\"gizmo-camera\");\n    this._gizmoCamera = this._gizmoCameraEntity.getComponent(Camera);\n\n    this._xEntity = this._endEntity.findByName(\"-x\").findByName(\"back\");\n    this._yEntity = this._endEntity.findByName(\"-y\").findByName(\"back\");\n    this._zEntity = this._endEntity.findByName(\"-z\").findByName(\"back\");\n\n    // original text color\n    this._getTextColor();\n  }\n\n  override onPointerEnter() {\n    this._roundEntity.isActive = true;\n    this._xEntity.isActive = true;\n    this._yEntity.isActive = true;\n    this._zEntity.isActive = true;\n  }\n\n  override onPointerExit() {\n    if (!this._isTriggered) {\n      this._roundEntity.isActive = false;\n      this._xEntity.isActive = false;\n      this._yEntity.isActive = false;\n      this._zEntity.isActive = false;\n    }\n  }\n\n  override onPointerDown(pointer: Pointer) {\n    this._disableComponent();\n    this._recoverTextColor();\n\n    // get targetPoint\n    SphereScript._startPos.copyFrom(this._sceneCameraEntity.transform.worldPosition);\n\n    SphereScript._startQuat.copyFrom(this._directionEntity.transform.worldRotationQuaternion);\n    SphereScript._startPointer.copyFrom(pointer.position);\n\n    this._tempUpVec.copyFrom(this._sceneCameraEntity.transform.worldUp);\n    this._isBack = this._tempUpVec.y <= 0;\n    this._upVec.copyFrom(this._isBack ? this._bottomVec : this._topVec);\n    SphereScript._startAxis.copyFrom(this._sceneCameraEntity.transform.worldForward);\n    Vector3.cross(SphereScript._startAxis, this._upVec, SphereScript._startAxis);\n\n    Vector3.subtract(SphereScript._startPos, this._target, this._tempUpVec);\n    const radius = this._tempUpVec.length();\n    const dot = Vector3.dot(this._tempUpVec, this._upVec);\n    if (this._isBack) {\n      this._startRadian = Math.PI + Math.acos(MathUtil.clamp(dot / radius, -1, 1));\n    } else {\n      this._startRadian = Math.acos(MathUtil.clamp(dot / radius, -1, 1));\n    }\n\n    this._isTriggered = true;\n    this._navigateCamera(pointer);\n  }\n\n  override onPointerDrag(pointer: Pointer) {\n    this._navigateCamera(pointer);\n  }\n\n  override onPointerUp(pointer: Pointer) {\n    if (this._isTriggered) {\n      this._gizmoCamera.screenPointToRay(pointer.position, this._ray);\n      const result = this.engine.physicsManager.raycast(this._ray, Number.MAX_VALUE, Layer.Everything);\n      if (!result) {\n        this._roundEntity.isActive = false;\n        this._xEntity.isActive = false;\n        this._yEntity.isActive = false;\n        this._zEntity.isActive = false;\n      }\n\n      this._isTriggered = false;\n      this._enableComponent();\n    }\n  }\n  override onUpdate() {\n    if (this._isTriggered) {\n      this._upVec.copyFrom(this._isBack ? this._bottomVec : this._topVec);\n      Matrix.lookAt(this._currentPos, this._target, this._upVec, this._tempMat);\n      this._tempMat.invert();\n      this._sceneCameraEntity.transform.worldMatrix = this._tempMat;\n    }\n    SphereScript._tempMat.copyFrom(this._sceneCamera.viewMatrix);\n    const { elements: ele } = SphereScript._tempMat;\n    // ignore translate\n    ele[12] = ele[13] = ele[14] = 0;\n    this._directionEntity.transform.worldMatrix = SphereScript._tempMat;\n  }\n\n  // delta x translate to rotation around axis y\n  // delta y translate to rotation around axis vertical to scene camera\n  private _navigateCamera(pointer: Pointer) {\n    const movePointer = pointer.position;\n    Vector2.subtract(SphereScript._startPointer, movePointer, this._deltaPointer);\n\n    let x = -this._deltaPointer.x * this._speedXFactor;\n    let y = -this._deltaPointer.y * this._speedYFactor;\n\n    const isBetween = this._startRadian - y > Math.PI && this._startRadian - y < 2 * Math.PI;\n\n    this._isBack = this._startRadian - y <= 0 || isBetween;\n\n    const { _tempQuat: tempQuat, _tempQuat2: tempQuat2 } = this;\n\n    Quaternion.rotationAxisAngle(SphereScript._startAxis, y, tempQuat);\n    Quaternion.rotationYawPitchRoll(x, 0, 0, tempQuat2);\n    Quaternion.multiply(tempQuat, tempQuat2, tempQuat);\n    Vector3.subtract(SphereScript._startPos, this._target, this._rotateVec);\n\n    Vector3.transformByQuat(this._rotateVec, tempQuat.invert(), this._currentPos);\n    Vector3.add(this._target, this._currentPos, this._currentPos);\n  }\n\n  private _getTextColor() {\n    const entities = this._endEntity.children;\n    for (let i = 0; i < entities.length; i++) {\n      const textEntity = entities[i].findByName(\"text\");\n      const textRenderer = textEntity.getComponent(TextRenderer);\n      const textColor = textRenderer.color.clone();\n      this._textColor.push(textColor);\n    }\n  }\n\n  private _recoverTextColor() {\n    const entities = this._endEntity.children;\n    for (let i = 0; i < entities.length; i++) {\n      const textEntity = entities[i].findByName(\"text\");\n      const textRenderer = textEntity.getComponent(TextRenderer);\n      textRenderer.color.copyFrom(this._textColor[i]);\n    }\n  }\n\n  private _disableComponent() {\n    const components = [];\n    this._sceneCameraEntity.getComponents(Script, components);\n    for (let i = 0; i < components.length; i++) {\n      const currentComponent = components[i];\n      const proto = Object.getPrototypeOf(currentComponent);\n      if (proto.onUpdate || proto.onLateUpdate || proto.onPhysicsUpdate) {\n        if (currentComponent.enabled) {\n          currentComponent.enabled = false;\n          this._disabledCompArray.push(currentComponent);\n        }\n      }\n    }\n  }\n\n  private _enableComponent() {\n    for (let i = 0; i < this._disabledCompArray.length; i++) {\n      const currentComponent = this._disabledCompArray[i];\n      currentComponent.enabled = true;\n    }\n  }\n}\n","import { Vector3, Quaternion, Engine, ModelMesh, MeshTopology } from \"@galacean/engine\";\n\n/**\n * create a circle mesh\n * @param engine - Engine\n * @param radius - Circle radius\n * @param segments - Number of segments\n * @param center - Circle center\n * @param normal - Circle direction\n * @returns Circle model mesh\n */\nexport function createCircleMesh(\n  engine: Engine,\n  radius: number = 1,\n  segments: number = 48,\n  center: Vector3 = new Vector3(0, 0, 0),\n  normal: Vector3 = new Vector3(0, 0, 1)\n): ModelMesh {\n  const mesh = new ModelMesh(engine);\n\n  const indices = new Uint16Array(segments * 3);\n  const vertices: Array<Vector3> = [];\n  const startPoint = new Vector3(1, 0, 0).scale(radius);\n\n  const tempQuat = new Quaternion();\n  const tempVect = new Vector3();\n\n  for (let i = 1; i <= segments; i++) {\n    const start = (i - 1) * 3;\n    indices[start] = i;\n    indices[start + 1] = i + 1;\n    indices[start + 2] = 0;\n  }\n\n  vertices.push(center);\n\n  for (let s = 0; s <= segments; s++) {\n    const segment = (s / segments) * Math.PI * 2;\n    Quaternion.rotationAxisAngle(normal, segment, tempQuat);\n    Vector3.transformByQuat(startPoint, tempQuat, tempVect);\n    vertices[s + 1] = tempVect.clone();\n  }\n\n  mesh.setPositions(vertices);\n  mesh.setIndices(indices);\n\n  mesh.addSubMesh(0, indices.length, MeshTopology.Triangles);\n  mesh.uploadData(false);\n  return mesh;\n}\n","import { Mesh, Engine, PrimitiveMesh, ModelMesh, Vector3 } from \"@galacean/engine\";\nimport { createCircleMesh } from \"./CircleMesh\";\nimport { PlainColorMaterial } from \"@galacean/engine-toolkit-custom-material\";\n\n/** @internal */\nexport class Utils {\n  public redMaterial: PlainColorMaterial;\n  public greenMaterial: PlainColorMaterial;\n  public blueMaterial: PlainColorMaterial;\n  public bgMaterial: PlainColorMaterial;\n  public greyMaterial: PlainColorMaterial;\n\n  public axisMesh: Mesh;\n  public endMesh: ModelMesh;\n  public bgMesh: ModelMesh;\n\n  public radius: number = 9.2;\n  public endRadius: number = 1.6;\n  public axisLength: number = this.radius - 2 * this.endRadius;\n  public endDist: number = this.radius - this.endRadius;\n\n  public xRotateVector: Vector3 = new Vector3();\n  public yRotateVector: Vector3 = new Vector3();\n  public zRotateVector: Vector3 = new Vector3();\n\n  public xTranslateVector: Vector3 = new Vector3();\n  public yTranslateVector: Vector3 = new Vector3();\n  public zTranslateVector: Vector3 = new Vector3();\n\n  public xEndTranslateVector: Vector3 = new Vector3();\n  public yEndTranslateVector: Vector3 = new Vector3();\n  public zEndTranslateVector: Vector3 = new Vector3();\n\n  constructor(engine: Engine) {\n    const redMaterial = new PlainColorMaterial(engine);\n    redMaterial.isTransparent = true;\n    redMaterial.baseColor.set(1.0, 0.25, 0.25, 1.0);\n    this.redMaterial = redMaterial;\n\n    const greenMaterial = new PlainColorMaterial(engine);\n    greenMaterial.isTransparent = true;\n    greenMaterial.baseColor.set(0.5, 0.8, 0.2, 1.0);\n    this.greenMaterial = greenMaterial;\n\n    const blueMaterial = new PlainColorMaterial(engine);\n    blueMaterial.isTransparent = true;\n    blueMaterial.baseColor.set(0.3, 0.5, 1.0, 1.0);\n    this.blueMaterial = blueMaterial;\n\n    const bgMaterial = new PlainColorMaterial(engine);\n    bgMaterial.isTransparent = true;\n    bgMaterial.baseColor.set(1, 1, 1, 0.1);\n    this.bgMaterial = bgMaterial;\n\n    const greyMaterial = new PlainColorMaterial(engine);\n    greyMaterial.isTransparent = true;\n    greyMaterial.baseColor.set(0.5, 0.5, 0.5, 1);\n    this.greyMaterial = greyMaterial;\n\n    this.axisMesh = PrimitiveMesh.createCylinder(engine, 0.12, 0.12, this.axisLength);\n\n    this.bgMesh = createCircleMesh(engine, this.radius, 144);\n    this.endMesh = createCircleMesh(engine, this.endRadius - 0.2);\n\n    this.xRotateVector = new Vector3(0, 0, 90);\n    this.yRotateVector = new Vector3(0, 90, 0);\n    this.zRotateVector = new Vector3(90, 0, 0);\n\n    this.xTranslateVector = new Vector3(this.axisLength * 0.5, 0, 0);\n    this.yTranslateVector = new Vector3(0, this.axisLength * 0.5, 0);\n    this.zTranslateVector = new Vector3(0, 0, this.axisLength * 0.5);\n\n    this.xEndTranslateVector = new Vector3(this.endDist, 0, 0);\n    this.yEndTranslateVector = new Vector3(0, this.endDist, 0);\n    this.zEndTranslateVector = new Vector3(0, 0, this.endDist);\n  }\n}\n","import {\n  Camera,\n  CameraClearFlags,\n  Color,\n  Entity,\n  Font,\n  FontStyle,\n  Layer,\n  Material,\n  MeshRenderer,\n  Script,\n  SphereColliderShape,\n  StaticCollider,\n  TextHorizontalAlignment,\n  TextRenderer,\n  Vector2,\n  Vector3\n} from \"@galacean/engine\";\nimport { EndScript } from \"./EndScript\";\nimport { SphereScript } from \"./SphereScript\";\nimport { Utils } from \"./Utils\";\n\nfunction traverseEntity(entity: Entity, callback: (entity: Entity) => any) {\n  callback(entity);\n  for (const child of entity.children) {\n    traverseEntity(child, callback);\n  }\n}\n\nexport class NavigationGizmo extends Script {\n  private _sceneCamera: Camera;\n  private _gizmoLayer: Layer = Layer.Layer30;\n\n  private _gizmoCamera: Camera;\n  private _gizmoEntity: Entity;\n  private _utils: Utils;\n  private _target: Vector3 = new Vector3();\n\n  private _sphereScript: SphereScript;\n  private _endScript = {\n    X: EndScript,\n    Y: EndScript,\n    Z: EndScript,\n    \"-X\": EndScript,\n    \"-Y\": EndScript,\n    \"-Z\": EndScript\n  };\n\n  /**\n   * @position - gizmo position, the left upper point of the gizmo area, default (0, 0).\n   * Normalized expression, the upper left corner is (0, 0), and the lower right corner is (1, 1).\n   */\n  public position: Vector2 = new Vector2(0, 0);\n\n  /**\n   * @size gizmo size, the length and width of the gizmo area, default (0.12,0.12).\n   */\n  public size: Vector2 = new Vector2(0.12, 0.12);\n\n  /** scene camera\n   * @return current scene camera\n   */\n  get camera(): Camera {\n    return this._sceneCamera;\n  }\n\n  set camera(camera: Camera) {\n    let sceneCamera = this._sceneCamera;\n    if (sceneCamera !== camera) {\n      if (camera) {\n        sceneCamera = this._sceneCamera = camera;\n        this._sphereScript.camera = camera;\n        Object.keys(this._endScript).forEach((key) => {\n          this._endScript[key].camera = camera;\n        });\n      } else {\n        throw new Error(\"navigation gizmo needs scene camera\");\n      }\n    }\n  }\n\n  /**\n   * target point for gizmo, default (0,0,0)\n   * @return target point\n   */\n  get target(): Vector3 {\n    return this._target;\n  }\n\n  set target(value: Vector3) {\n    if (value !== this._target) {\n      this._target.copyFrom(value);\n    }\n  }\n\n  /**\n   * gizmo layer, default Layer30\n   */\n  get layer(): Layer {\n    return this._gizmoLayer;\n  }\n\n  set layer(layer: Layer) {\n    if (this._gizmoLayer !== layer) {\n      this._gizmoLayer = layer;\n      this._gizmoCamera.cullingMask = layer;\n\n      traverseEntity(this._gizmoEntity, (entity) => {\n        entity.layer = layer;\n      });\n    }\n  }\n\n  /**\n   * @return gizmo camera's priority, larger than any other camera in scene, default 100\n   */\n  get priority(): number {\n    return this._gizmoCamera.priority;\n  }\n\n  set priority(priority: number) {\n    this._gizmoCamera.priority = priority;\n  }\n\n  constructor(entity: Entity) {\n    super(entity);\n    if (!entity.engine.physicsManager) {\n      throw new Error(\"PhysicsManager is not initialized\");\n    }\n\n    this._utils = new Utils(this.engine);\n\n    this._gizmoEntity = entity.createChild(\"navigation-gizmo\");\n    this._gizmoEntity.layer = this._gizmoLayer;\n\n    const gizmoCameraEntity = this._gizmoEntity.createChild(\"gizmo-camera\");\n    gizmoCameraEntity.transform.setPosition(0, 0, 10);\n\n    const gizmoCamera = gizmoCameraEntity.addComponent(Camera);\n    gizmoCamera.isOrthographic = true;\n    gizmoCamera.cullingMask = this._gizmoLayer;\n    gizmoCamera.clearFlags = CameraClearFlags.Depth;\n    gizmoCamera.priority = 100;\n    this._gizmoCamera = gizmoCamera;\n\n    this._createGizmo();\n\n    this._setTarget = this._setTarget.bind(this);\n    //@ts-ignore\n    this._target._onValueChanged = this._setTarget;\n  }\n\n  override onUpdate() {\n    this._gizmoCamera.viewport.set(this.position.x, this.position.y, this.size.x, this.size.y);\n  }\n\n  private _createGizmo() {\n    const utils = this._utils;\n    // setup gizmo shape\n    const directionEntity = this._gizmoEntity.createChild(\"direction\");\n    const axisEntity = directionEntity.createChild(\"axis\");\n\n    // axis\n    const axisXEntity = axisEntity.createChild(\"x\");\n    const axisYEntity = axisEntity.createChild(\"y\");\n    const axisZEntity = axisEntity.createChild(\"z\");\n\n    this._createAxis(axisXEntity, utils.xRotateVector, utils.xTranslateVector, utils.redMaterial);\n    this._createAxis(axisYEntity, utils.yRotateVector, utils.yTranslateVector, utils.greenMaterial);\n    this._createAxis(axisZEntity, utils.zRotateVector, utils.zTranslateVector, utils.blueMaterial);\n\n    // end\n    const endEntity = directionEntity.createChild(\"end\");\n\n    const endXEntity = endEntity.createChild(\"x\");\n    const endYEntity = endEntity.createChild(\"y\");\n    const endZEntity = endEntity.createChild(\"z\");\n\n    this._createEnd(endXEntity, utils.xEndTranslateVector, utils.redMaterial, \"X\", new Color(1.0, 0.25, 0.25, 1.0));\n    this._createEnd(endYEntity, utils.yEndTranslateVector, utils.greenMaterial, \"Y\", new Color(0.5, 0.8, 0.2, 1.0));\n    this._createEnd(endZEntity, utils.zEndTranslateVector, utils.blueMaterial, \"Z\", new Color(0.3, 0.5, 1.0, 1.0));\n\n    const endNegativeXEntity = endEntity.createChild(\"-x\");\n    const endNegativeYEntity = endEntity.createChild(\"-y\");\n    const endNegativeZEntity = endEntity.createChild(\"-z\");\n\n    this._createEnd(\n      endNegativeXEntity,\n      utils.xEndTranslateVector.negate(),\n      utils.greyMaterial,\n      \"-X\",\n      new Color(1, 1, 1, 0)\n    );\n    this._createEnd(\n      endNegativeYEntity,\n      utils.yEndTranslateVector.negate(),\n      utils.greyMaterial,\n      \"-Y\",\n      new Color(1, 1, 1, 0)\n    );\n    this._createEnd(\n      endNegativeZEntity,\n      utils.zEndTranslateVector.negate(),\n      utils.greyMaterial,\n      \"-Z\",\n      new Color(1, 1, 1, 0)\n    );\n\n    // sphere behind\n    const sphereEntity = this._gizmoEntity.createChild(\"sphere\");\n    sphereEntity.transform.setPosition(0, 0, -(utils.radius + 0.5));\n\n    const sphereCollider = sphereEntity.addComponent(StaticCollider);\n    const sphereColliderShape = new SphereColliderShape();\n    sphereColliderShape.radius = utils.radius;\n    sphereCollider.addShape(sphereColliderShape);\n\n    const roundEntity = sphereEntity.createChild(\"round\");\n    const roundRenderer = roundEntity.addComponent(MeshRenderer);\n    roundRenderer.receiveShadows = false;\n    roundRenderer.castShadows = false;\n    roundRenderer.mesh = utils.bgMesh;\n    roundRenderer.setMaterial(utils.bgMaterial);\n    roundEntity.isActive = false;\n\n    this._sphereScript = sphereEntity.addComponent(SphereScript);\n  }\n\n  private _createAxis(entity: Entity, rotation: Vector3, position: Vector3, material: Material) {\n    entity.transform.setRotation(rotation.x, rotation.y, rotation.z);\n    entity.transform.setPosition(position.x, position.y, position.z);\n\n    const axisXRenderer = entity.addComponent(MeshRenderer);\n    axisXRenderer.receiveShadows = false;\n    axisXRenderer.castShadows = false;\n    axisXRenderer.mesh = this._utils.axisMesh;\n    axisXRenderer.setMaterial(material);\n  }\n\n  private _createEnd(entity: Entity, position: Vector3, material: Material, axisName: string, fontColor: Color) {\n    const utils = this._utils;\n\n    entity.transform.setPosition(position.x, position.y, position.z);\n\n    const sphereCollider = entity.addComponent(StaticCollider);\n    const colliderShape = new SphereColliderShape();\n    colliderShape.radius = utils.endRadius;\n    sphereCollider.addShape(colliderShape);\n\n    const renderEntity = entity.createChild(\"back\");\n    const axisRenderer = renderEntity.addComponent(MeshRenderer);\n    axisRenderer.receiveShadows = false;\n    axisRenderer.castShadows = false;\n    axisRenderer.mesh = utils.endMesh;\n    axisRenderer.setMaterial(material);\n    renderEntity.isActive = false;\n\n    const textEntity = entity.createChild(\"text\");\n    textEntity.transform.setPosition(0, 0, 0.05);\n    const axisXTextRenderer = textEntity.addComponent(TextRenderer);\n    axisXTextRenderer.receiveShadows = false;\n    axisXTextRenderer.castShadows = false;\n    axisXTextRenderer.font = Font.createFromOS(this.engine, \"Arial\");\n    axisXTextRenderer.text = axisName;\n    axisXTextRenderer.fontStyle = FontStyle.Bold;\n    axisXTextRenderer.fontSize = 200;\n\n    axisXTextRenderer.color.copyFrom(fontColor);\n    axisXTextRenderer.horizontalAlignment = TextHorizontalAlignment.Center;\n\n    this._endScript[axisName] = entity.addComponent(EndScript);\n  }\n\n  private _setTarget(): void {\n    this._sphereScript.target.copyFrom(this._target);\n    Object.keys(this._endScript).forEach((key) => {\n      this._endScript[key].target.copyFrom(this._target);\n    });\n  }\n}\n"],"names":["EndScript","_flipView","_flipSpeed","_progress","_textColor","Color","_target","_vector","_normalQuat","Quaternion","_tempMat","Matrix","_targetMat","_currentMat","_startMat","_tempVect","Vector3","_tempEyeVect","_upVector","_disabledCompArray","AxisFactor","x","upVector","axis","factor","unit","y","z","onAwake","textEntity","entity","findByName","_textRenderer","getComponent","TextRenderer","copyFrom","color","_backEntity","onPointerEnter","set","isActive","onPointerExit","onPointerClick","_disableComponent","currentAxisName","name","_sceneCameraEntity","transform","worldMatrix","clone","_getTargetMatrix","onUpdate","deltaTime","worldRotationQuaternion","t","MathUtil","clamp","_enableComponent","lerp","axisName","tempTargetVect","tempEyeVect","tempVect","tempMat","subtract","worldPosition","radius","length","add","lookAt","invert","components","getComponents","Script","i","currentComponent","proto","Object","getPrototypeOf","onLateUpdate","onPhysicsUpdate","enabled","push","camera","_sceneCamera","target","value","SphereScript","_isTriggered","_speedXFactor","_speedYFactor","_tempQuat","_tempQuat2","_deltaPointer","Vector2","_upVec","_topVec","_bottomVec","_currentPos","_rotateVec","_tempUpVec","_startRadian","_ray","Ray","_isBack","gizmoEntity","parent","_directionEntity","_roundEntity","_endEntity","_gizmoCameraEntity","_gizmoCamera","Camera","_xEntity","_yEntity","_zEntity","_getTextColor","onPointerDown","pointer","_recoverTextColor","_startPos","_startQuat","_startPointer","position","worldUp","_startAxis","worldForward","cross","dot","Math","PI","acos","_navigateCamera","onPointerDrag","onPointerUp","screenPointToRay","result","engine","physicsManager","raycast","Number","MAX_VALUE","Layer","Everything","viewMatrix","ele","elements","movePointer","isBetween","tempQuat","tempQuat2","rotationAxisAngle","rotationYawPitchRoll","multiply","transformByQuat","entities","children","textRenderer","textColor","createCircleMesh","segments","center","normal","mesh","ModelMesh","indices","Uint16Array","vertices","startPoint","scale","start","s","segment","setPositions","setIndices","addSubMesh","MeshTopology","Triangles","uploadData","Utils","endRadius","axisLength","endDist","xRotateVector","yRotateVector","zRotateVector","xTranslateVector","yTranslateVector","zTranslateVector","xEndTranslateVector","yEndTranslateVector","zEndTranslateVector","redMaterial","PlainColorMaterial","isTransparent","baseColor","greenMaterial","blueMaterial","bgMaterial","greyMaterial","axisMesh","PrimitiveMesh","createCylinder","bgMesh","endMesh","traverseEntity","callback","child","NavigationGizmo","_gizmoLayer","Layer30","_endScript","X","Y","Z","size","Error","_utils","_gizmoEntity","createChild","layer","gizmoCameraEntity","setPosition","gizmoCamera","addComponent","isOrthographic","cullingMask","clearFlags","CameraClearFlags","Depth","priority","_createGizmo","_setTarget","bind","_onValueChanged","viewport","utils","directionEntity","axisEntity","axisXEntity","axisYEntity","axisZEntity","_createAxis","endEntity","endXEntity","endYEntity","endZEntity","_createEnd","endNegativeXEntity","endNegativeYEntity","endNegativeZEntity","negate","sphereEntity","sphereCollider","StaticCollider","sphereColliderShape","SphereColliderShape","addShape","roundEntity","roundRenderer","MeshRenderer","receiveShadows","castShadows","setMaterial","_sphereScript","rotation","material","setRotation","axisXRenderer","fontColor","colliderShape","renderEntity","axisRenderer","axisXTextRenderer","font","Font","createFromOS","text","fontStyle","FontStyle","Bold","fontSize","horizontalAlignment","TextHorizontalAlignment","Center","keys","forEach","key","sceneCamera"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}