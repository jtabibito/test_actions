{"version":3,"file":"BoxSelectionControls.js","sources":["../../../src/box-selection/BoxSelectionControls.ts"],"sourcesContent":["import {\n  BoundingFrustum,\n  Vector3,\n  Matrix,\n  Camera,\n  Entity,\n  Plane,\n  CollisionUtil,\n  ContainmentType,\n  Script,\n  InputManager,\n  PointerButton,\n  WebGLEngine,\n  Vector2\n} from \"@galacean/engine\";\nimport { BoxSelectionComponent } from './BoxSelectionComponent';\nimport { BoxSelectionSSHelper } from \"./BoxSelectionSSHelper\";\nimport { IBoxSelectionHelper } from \"./types\";\n\nconst _frustum = new BoundingFrustum();\nconst _center = new Vector3();\nconst _tmpPoint = new Vector2();\nconst _vecNear = new Vector3();\nconst _vecTopLeft = new Vector3();\nconst _vecTopRight = new Vector3();\nconst _vecDownRight = new Vector3();\nconst _vecDownLeft = new Vector3();\nconst _vecFarTopLeft = new Vector3();\nconst _vecFarTopRight = new Vector3();\nconst _vecFarDownRight = new Vector3();\nconst _vecFarDownLeft = new Vector3();\nconst _vectemp1 = new Vector3();\nconst _vectemp2 = new Vector3();\nconst _vectemp3 = new Vector3();\n\nconst pojectInvertMatrix = new Matrix();\nfunction unproject(vec: Vector3, entity: Entity) {\n  Vector3.transformCoordinate(vec, pojectInvertMatrix, vec);\n  return Vector3.transformCoordinate(vec, entity.transform.worldMatrix, vec);\n}\n\nexport class BoxSelectionControls extends Script {\n  startPoint: Vector2 = new Vector2();\n  endPoint: Vector2 = new Vector2();\n  collection: Entity[] = [];\n  instances: any = {};\n  deep: number = Number.MAX_VALUE;\n  camera: Camera;\n  selectChildren: false;\n  input: InputManager;\n  isDeep = true;\n  helper: undefined | IBoxSelectionHelper;\n\n  override onAwake(): void {\n    const { engine, entity } = this;\n    this.camera = entity.getComponent(Camera);\n    this.input = engine.inputManager;\n    this.helper = new BoxSelectionSSHelper(this.engine as WebGLEngine, this.scene.getRootEntity()!);\n  }\n\n  override onUpdate() {\n    const p = this.input.pointers[0];\n    if (!p) {\n      return;\n    }\n    const canvas = this.engine.canvas;\n    if (this.input.isPointerDown(PointerButton.Primary)) {\n      const x = p.position.x / canvas.width * 2 - 1;\n      const y = 1 - p.position.y / canvas.height * 2;\n      this.startPoint.set(x, y);\n      this.helper?.onSelectStart(p.position);\n    }\n    if (this.input.isPointerUp(PointerButton.Primary)) {\n      const x = p.position.x / canvas.width * 2 - 1;\n      const y = 1 - p.position.y / canvas.height * 2;\n      this.endPoint.set(x, y);\n      this.helper?.onSelectEnd(p.position);\n    }\n    if (this.input.isPointerHeldDown(PointerButton.Primary)) {\n      const x = p.position.x / canvas.width * 2 - 1;\n      const y = 1 - p.position.y / canvas.height * 2;\n      this.endPoint.set(x, y);\n      this.select();\n      this.helper?.onSelecting(p.position);\n    }\n  }\n\n  select(startPoint?: Vector2, endPoint?: Vector2) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection.length = 0;\n\n    pojectInvertMatrix.copyFrom(this.camera.projectionMatrix);\n    pojectInvertMatrix.invert();\n    this.updateBoundingFrustum(this.startPoint, this.endPoint);\n    return this.searchChildInBoundingFrustum(_frustum, this.scene.getRootEntity()!, this.isDeep);\n  }\n\n  updateBoundingFrustum(startPoint: Vector2, endPoint: Vector2) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint;\n\n    // Avoid invalid BoundingFrustum\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n\n    if (!this.camera.isOrthographic) {\n      _tmpPoint.set(Math.min(startPoint.x, endPoint.x), Math.max(startPoint.y, endPoint.y));\n      endPoint.set(Math.max(startPoint.x, endPoint.x), Math.min(startPoint.y, endPoint.y));\n\n      this.entity.transform.worldMatrix.getTranslation(_vecNear);\n      _vecTopLeft.set(_tmpPoint.x, _tmpPoint.y, 0.5);\n      _vecTopRight.set(endPoint.x, _tmpPoint.y, 0);\n      _vecDownRight.set(endPoint.x, endPoint.y, 0.5);\n      _vecDownLeft.set(_tmpPoint.x, endPoint.y, 0);\n\n      unproject(_vecTopLeft, this.entity);\n      unproject(_vecTopRight, this.entity);\n      unproject(_vecDownRight, this.entity);\n      unproject(_vecDownLeft, this.entity);\n\n      _vectemp1.copyFrom(_vecTopLeft).subtract(_vecNear);\n      _vectemp2.copyFrom(_vecTopRight).subtract(_vecNear);\n      _vectemp3.copyFrom(_vecDownRight).subtract(_vecNear);\n      _vectemp1.normalize();\n      _vectemp2.normalize();\n      _vectemp3.normalize();\n\n      _vectemp1.scale(this.deep);\n      _vectemp2.scale(this.deep);\n      _vectemp3.scale(this.deep);\n      _vectemp1.add(_vecNear);\n      _vectemp2.add(_vecNear);\n      _vectemp3.add(_vecNear);\n\n      Plane.fromPoints(_vecNear, _vecTopLeft, _vecTopRight, _frustum.top);\n      Plane.fromPoints(_vecNear, _vecTopRight, _vecDownRight, _frustum.right);\n      Plane.fromPoints(_vecDownRight, _vecDownLeft, _vecNear, _frustum.bottom);\n      Plane.fromPoints(_vecDownLeft, _vecTopLeft, _vecNear, _frustum.left);\n      Plane.fromPoints(_vecTopRight, _vecDownRight, _vecDownLeft, _frustum.near);\n      Plane.fromPoints(_vectemp3, _vectemp2, _vectemp1, _frustum.far);\n      _frustum.far.normal.scale(-1);\n    } else {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n\n      _vecTopLeft.set(left, top, - 1);\n      _vecTopRight.set(right, top, - 1);\n      _vecDownRight.set(right, down, - 1);\n      _vecDownLeft.set(left, down, - 1);\n\n      _vecFarTopLeft.set(left, top, 1);\n      _vecFarTopRight.set(right, top, 1);\n      _vecFarDownRight.set(right, down, 1);\n      _vecFarDownLeft.set(left, down, 1);\n\n      unproject(_vecTopLeft, this.entity);\n      unproject(_vecTopRight, this.entity);\n      unproject(_vecDownRight, this.entity);\n      unproject(_vecDownLeft, this.entity);\n\n      unproject(_vecFarTopLeft, this.entity);\n      unproject(_vecFarTopRight, this.entity);\n      unproject(_vecFarDownRight, this.entity);\n      unproject(_vecFarDownLeft, this.entity);\n\n      Plane.fromPoints(_vecTopLeft, _vecFarTopLeft, _vecFarTopRight, _frustum.top);\n      Plane.fromPoints(_vecTopRight, _vecFarTopRight, _vecFarDownRight, _frustum.right);\n      Plane.fromPoints(_vecFarDownRight, _vecFarDownLeft, _vecDownLeft, _frustum.bottom);\n      Plane.fromPoints(_vecFarDownLeft, _vecFarTopLeft, _vecTopLeft, _frustum.left);\n      Plane.fromPoints(_vecTopRight, _vecDownRight, _vecDownLeft, _frustum.near);\n      Plane.fromPoints(_vecFarDownRight, _vecFarTopRight, _vecFarTopLeft, _frustum.far);\n      _frustum.far.normal.scale(-1);\n    }\n  }\n\n  searchChildInBoundingFrustum(frustum: BoundingFrustum, entity: Entity, isDeep: boolean = false) {\n    let c = entity.getComponent(BoxSelectionComponent);\n    if (c && c.enabled) {\n      _center.copyFrom(entity.transform.worldPosition);\n      c.isSelect = CollisionUtil.frustumContainsPoint(frustum, _center) !== ContainmentType.Disjoint;\n      if (c.isSelect) {\n        this.collection.push(entity);\n      }\n    }\n    const len = entity.children.length;\n    if (isDeep && len) {\n      for (let x = 0; x < len; x++) {\n        this.searchChildInBoundingFrustum(frustum, entity.children[x], isDeep);\n      }\n    }\n    return this.collection;\n  }\n}\n"],"names":["_frustum","BoundingFrustum","_center","Vector3","_tmpPoint","Vector2","_vecNear","_vecTopLeft","_vecTopRight","_vecDownRight","_vecDownLeft","_vecFarTopLeft","_vecFarTopRight","_vecFarDownRight","_vecFarDownLeft","_vectemp1","_vectemp2","_vectemp3","pojectInvertMatrix","Matrix","unproject","vec","entity","transformCoordinate","transform","worldMatrix","BoxSelectionControls","startPoint","endPoint","collection","instances","deep","Number","MAX_VALUE","isDeep","onAwake","engine","camera","getComponent","Camera","input","inputManager","helper","BoxSelectionSSHelper","scene","getRootEntity","onUpdate","p","pointers","canvas","isPointerDown","PointerButton","Primary","x","position","width","y","height","set","onSelectStart","isPointerUp","onSelectEnd","isPointerHeldDown","select","onSelecting","length","copyFrom","projectionMatrix","invert","updateBoundingFrustum","searchChildInBoundingFrustum","EPSILON","isOrthographic","Math","min","max","getTranslation","subtract","normalize","scale","add","Plane","fromPoints","top","right","bottom","left","near","far","normal","down","frustum","c","BoxSelectionComponent","enabled","worldPosition","isSelect","CollisionUtil","frustumContainsPoint","ContainmentType","Disjoint","push","len","children","Script"],"mappings":"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"}