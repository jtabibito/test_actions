{"version":3,"file":"ControlFreePointer.js","sources":["../../../src/inputDevice/ControlFreePointer.ts"],"sourcesContent":["import { InputManager, PointerButton, Vector3 } from \"@galacean/engine\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { IControlInput } from \"./IControlInput\";\n\nenum DeltaType {\n  Moving,\n  Distance,\n  None\n}\nexport class ControlFreePointer implements IControlInput {\n  private _deltaType: DeltaType = DeltaType.Moving;\n  private _handlerType: ControlHandlerType = ControlHandlerType.None;\n  private _frameIndex: number = 0;\n  private _lastUsefulFrameIndex: number = -1;\n  onUpdateHandler(input: InputManager): ControlHandlerType {\n    ++this._frameIndex;\n    if (input.pointers.length === 1) {\n      if (input.isPointerHeldDown(PointerButton.Primary)) {\n        this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n      } else {\n        const { deltaPosition } = input.pointers[0];\n        if ((deltaPosition.x !== 0 || deltaPosition.y !== 0) && input.isPointerUp(PointerButton.Primary)) {\n          this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n        } else {\n          this._updateType(ControlHandlerType.None, DeltaType.None);\n        }\n      }\n    } else {\n      this._updateType(ControlHandlerType.None, DeltaType.None);\n    }\n    return this._handlerType;\n  }\n\n  onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    const { _frameIndex: frameIndex } = this;\n    switch (this._deltaType) {\n      case DeltaType.Moving:\n        if (this._lastUsefulFrameIndex === frameIndex - 1) {\n          const { deltaPosition } = control.input.pointers[0];\n          outDelta.x = deltaPosition.x;\n          outDelta.y = deltaPosition.y;\n        } else {\n          outDelta.x = 0;\n          outDelta.y = 0;\n        }\n        break;\n      default:\n        break;\n    }\n    this._lastUsefulFrameIndex = frameIndex;\n  }\n\n  private _updateType(handlerType: ControlHandlerType, deltaType: DeltaType) {\n    if (this._handlerType !== handlerType || this._deltaType !== deltaType) {\n      this._handlerType = handlerType;\n      this._deltaType = deltaType;\n      this._lastUsefulFrameIndex = -1;\n    }\n  }\n}\n"],"names":["DeltaType","ControlFreePointer","_deltaType","_handlerType","ControlHandlerType","None","_frameIndex","_lastUsefulFrameIndex","onUpdateHandler","input","pointers","length","isPointerHeldDown","PointerButton","Primary","_updateType","ROTATE","deltaPosition","x","y","isPointerUp","onUpdateDelta","control","outDelta","frameIndex","handlerType","deltaType"],"mappings":"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"}