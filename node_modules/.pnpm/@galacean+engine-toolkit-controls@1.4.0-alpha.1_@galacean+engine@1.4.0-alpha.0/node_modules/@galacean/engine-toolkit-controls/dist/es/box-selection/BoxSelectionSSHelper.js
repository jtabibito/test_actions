import { MeshRenderer, Entity, Vector2 } from '@galacean/engine';
import { PlaneMesh } from './PlaneMesh.js';
import { BoxSelectionSSMaterial } from './BoxSelectionSSMaterial.js';
import '../_create_class-8d4b456b.js';
import '../_inherits-5a51c3d0.js';

// draw according to screen space
var BoxSelectionSSHelper = /*#__PURE__*/ function() {
    function BoxSelectionSSHelper(engine, sceneRoot) {
        this.engine = engine;
        this.element = new Entity(engine);
        this.sceneRoot = sceneRoot;
        this.startPoint = new Vector2();
        this.pointBottomLeft = new Vector2();
        this.pointTopRight = new Vector2();
        this.input = engine.inputManager;
        this.init();
    }
    var _proto = BoxSelectionSSHelper.prototype;
    _proto.init = function init() {
        var renderer = this.element.addComponent(MeshRenderer);
        renderer.receiveShadows = false;
        renderer.castShadows = false;
        renderer.mesh = PlaneMesh.createPlane(this.engine); // PrimitiveMesh.createPlane is xoz plane, but we need xoy plane
        this.material = new BoxSelectionSSMaterial(this.engine);
        renderer.setMaterial(this.material);
        this.element.transform.rotation.x = Math.PI * 0.5;
    };
    _proto.onSelectStart = function onSelectStart(vec2) {
        this.startPoint.x = vec2.x;
        this.startPoint.y = this.engine.canvas.height - vec2.y;
        this.sceneRoot.addChild(this.element);
    };
    _proto.onSelecting = function onSelecting(vec2) {
        this.pointTopRight.x = Math.max(this.startPoint.x, vec2.x);
        this.pointTopRight.y = Math.max(this.startPoint.y, this.engine.canvas.height - vec2.y);
        this.pointBottomLeft.x = Math.min(this.startPoint.x, vec2.x);
        this.pointBottomLeft.y = Math.min(this.startPoint.y, this.engine.canvas.height - vec2.y);
        this.material.maxPoint = this.pointTopRight;
        this.material.minPoint = this.pointBottomLeft;
    };
    _proto.onSelectEnd = function onSelectEnd() {
        this.sceneRoot.removeChild(this.element);
    };
    return BoxSelectionSSHelper;
}();

export { BoxSelectionSSHelper };
//# sourceMappingURL=BoxSelectionSSHelper.js.map
