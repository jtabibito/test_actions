import { ShaderRange } from "../../common/ShaderRange";
export declare class BlockInfo {
    readonly sourceFile: string;
    readonly rangeInFile?: ShaderRange;
    readonly sourceMap?: PpSourceMap;
    constructor(sourceFile?: string, rangeInFile?: ShaderRange, sourceMap?: PpSourceMap);
}
export declare class MapRange {
    sourceLoc: {
        block: BlockInfo;
        rangeInBlock: ShaderRange;
    };
    generatedLoc: {
        start: number;
        end: number;
    };
    constructor(sourceBlock: BlockInfo, rangeInBlock: ShaderRange, generatedLoc: {
        start: number;
        end: number;
    });
    getSourceIndex(generatedIdx: number): {
        sourceFile: string;
        index: number;
    };
}
export default class PpSourceMap {
    readonly mapRanges: MapRange[];
    static rangeContains(range: MapRange["generatedLoc"], index: number): boolean;
    addMapRange(mapRange: MapRange): void;
    /**
     * @returns index
     */
    map(index: number): {
        sourceFile: string;
        index: number;
    };
}
