import { TokenType } from "../common";
export type Terminal = TokenType;
export declare enum ENonTerminal {
    START = 2000,
    gs_shader_program = 2001,
    global_declaration = 2002,
    variable_declaration = 2003,
    array_specifier_list = 2004,
    array_specifier = 2005,
    ext_builtin_type_specifier_nonarray = 2006,
    precision_specifier = 2007,
    variable_identifier = 2008,
    variable_identifier_node = 2009,
    primary_expression = 2010,
    postfix_expression = 2011,
    integer_expression = 2012,
    function_call = 2013,
    function_call_generic = 2014,
    function_call_header_no_parameters = 2015,
    function_call_header_with_parameters = 2016,
    function_call_parameter_list = 2017,
    function_call_header = 2018,
    function_identifier = 2019,
    constructor_identifier = 2020,
    unary_expression = 2021,
    unary_operator = 2022,
    multiplicative_expression = 2023,
    additive_expression = 2024,
    shift_expression = 2025,
    relational_expression = 2026,
    equality_expression = 2027,
    and_expression = 2028,
    inclusive_or_expression = 2029,
    exclusive_or_expression = 2030,
    logical_and_expression = 2031,
    logical_xor_expression = 2032,
    logical_or_expression = 2033,
    conditional_expression = 2034,
    assignment_expression = 2035,
    assignment_operator = 2036,
    expression = 2037,
    integer_constant_expression = 2038,
    integer_constant_expression_operator = 2039,
    declaration = 2040,
    function_prototype = 2041,
    function_declarator = 2042,
    function_header_with_parameters = 2043,
    function_header = 2044,
    function_parameter_list = 2045,
    parameter_declarator = 2046,
    parameter_declaration = 2047,
    parameter_qualifier = 2048,
    parameter_type_specifier = 2049,
    init_declarator_list = 2050,
    single_declaration = 2051,
    fully_specified_type = 2052,
    type_qualifier = 2053,
    single_type_qualifier = 2054,
    storage_qualifier = 2055,
    precision_qualifier = 2056,
    interpolation_qualifier = 2057,
    invariant_qualifier = 2058,
    type_specifier = 2059,
    type_specifier_nonarray = 2060,
    type_specifier_no_prec = 2061,
    basic_type = 2062,
    struct_specifier = 2063,
    struct_declaration_list = 2064,
    struct_declaration = 2065,
    struct_declarator_list = 2066,
    struct_declarator = 2067,
    identifier_list = 2068,
    decl_identifier = 2069,
    initializer = 2070,
    initializer_list = 2071,
    declaration_statement = 2072,
    simple_statement = 2073,
    compound_statement_no_scope = 2074,
    statement_with_scope = 2075,
    compound_statement = 2076,
    statement = 2077,
    statement_list = 2078,
    iteration_statement_no_new_scope = 2079,
    expression_statement = 2080,
    selection_statement = 2081,
    selection_rest_statement = 2082,
    condition = 2083,
    conditionopt = 2084,
    iteration_statement = 2085,
    for_init_statement = 2086,
    for_rest_statement = 2087,
    jump_statement = 2088,
    external_declaration = 2089,
    function_definition = 2090,
    field_selection = 2091,
    bool_constant = 2092,
    function_identifier_node = 2093,
    typename_identifier_node = 2094,
    scope_brace = 2095,
    scope_end_brace = 2096,
    _ignore = 2097
}
export type GrammarSymbol = Terminal | ENonTerminal;
export type Derivation = GrammarSymbol[];
