import { ENonTerminal } from "./GrammarSymbol";
import { BaseToken } from "../common/BaseToken";
import { GalaceanDataType } from "../common";
import { ASTNode, TreeNode } from "./AST";
export type TraceStackItem = ENonTerminal | BaseToken;
export declare class SymbolType {
    type: GalaceanDataType;
    arraySpecifier?: ASTNode.ArraySpecifier;
    typeLexeme: string;
    constructor(type: GalaceanDataType, typeLexeme: string, arraySpecifier?: ASTNode.ArraySpecifier);
}
export declare class StructProp implements IParamInfo {
    typeInfo: SymbolType;
    ident: BaseToken;
    astNode: ASTNode.StructDeclarator;
    constructor(type: SymbolType, ident: BaseToken);
}
export type NodeChild = TreeNode | BaseToken;
export type IParamInfo = {
    ident: BaseToken;
    typeInfo: SymbolType;
    astNode: TreeNode;
};
