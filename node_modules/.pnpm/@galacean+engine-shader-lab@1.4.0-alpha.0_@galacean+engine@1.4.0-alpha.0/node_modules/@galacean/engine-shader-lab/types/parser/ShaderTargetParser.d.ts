import { Grammar } from "./Grammar";
import { BaseToken } from "../common/BaseToken";
import { StateActionTable, StateGotoTable } from "../lalr/types";
import { ASTNode } from "./AST";
import SematicAnalyzer from "./SemanticAnalyzer";
/**
 * The syntax parser and sematic analyzer of `ShaderLab` compiler
 */
export declare class ShaderTargetParser {
    readonly actionTable: StateActionTable;
    readonly gotoTable: StateGotoTable;
    readonly grammar: Grammar;
    readonly sematicAnalyzer: SematicAnalyzer;
    private _traceBackStack;
    private get curState();
    private get stateActionTable();
    private get stateGotoTable();
    static _singleton: ShaderTargetParser;
    static create(): ShaderTargetParser;
    private constructor();
    parse(tokens: Generator<BaseToken, BaseToken>): ASTNode.GLShaderProgram | null;
    private _printStack;
}
