import { GalaceanDataType } from "../../common";
import { EShaderStage } from "../../common/Enums";
export declare enum EGenType {
    GenType = 200,
    GenIntType = 201,
    GenUintType = 202,
    GenBoolType = 203,
    Mat = 204,
    BoolVec = 205,
    IntVec = 206,
    UintVec = 207,
    Vec = 208,
    GVec4 = 209,
    GSampler2D = 210,
    GSampler3D = 211,
    GSamplerCube = 212,
    GSampler2DArray = 213
}
export type NonGenericGalaceanType = Exclude<GalaceanDataType, string>;
type BuiltinType = NonGenericGalaceanType | EGenType;
export declare class BuiltinFunction {
    private _returnType;
    ident: string;
    readonly args: BuiltinType[];
    readonly scope: EShaderStage;
    private constructor();
    static getReturnType(fn: BuiltinFunction, genType?: NonGenericGalaceanType): NonGenericGalaceanType;
    static _create(ident: string, returnType: BuiltinType, ...args: BuiltinType[]): void;
    static _createWithScop(ident: string, returnType: BuiltinType, scope: EShaderStage, ...args: BuiltinType[]): void;
    static getFn(ident: string, ...args: BuiltinType[]): {
        fun: BuiltinFunction;
        genType: Exclude<GalaceanDataType, string>;
    } | undefined;
}
export {};
