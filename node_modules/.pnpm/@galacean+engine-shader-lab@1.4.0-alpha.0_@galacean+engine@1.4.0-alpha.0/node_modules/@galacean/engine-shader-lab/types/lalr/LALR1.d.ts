import { Grammar } from "../parser/Grammar";
import { ENonTerminal, Terminal } from "../parser/GrammarSymbol";
import { StateActionTable, StateGotoTable } from "./types";
/**
 * The [LALR1](https://web.stanford.edu/class/archive/cs/cs143/cs143.1128/handouts/140%20LALR%20Parsing.pdf) Parser generator
 */
export declare class LALR1 {
    readonly firstSetMap: Map<ENonTerminal, Set<Terminal>>;
    readonly followSetMap: Map<ENonTerminal, Set<Terminal>>;
    readonly actionTable: StateActionTable;
    readonly gotoTable: StateGotoTable;
    private grammar;
    /** For circle detect */
    private _firstSetNTStack;
    constructor(grammar: Grammar);
    generate(): void;
    private buildStateTable;
    private _extendState;
    private _closure;
    private _extendStateItem;
    private _inferNextState;
    /** Resolve shift-reduce/reduce-reduce conflict detect */
    private _addAction;
    private computeFirstSet;
    private _computeFirstSetForNT;
}
