import { Terminal } from "../parser/GrammarSymbol";
import Production from "./Production";
export default class StateItem {
    static _id: number;
    readonly production: Production;
    readonly position: number;
    readonly lookaheadSet: Set<Terminal>;
    readonly id: number;
    _needReInfer: boolean;
    get needReInfer(): boolean;
    set needReInfer(v: boolean);
    get curSymbol(): import("../parser/GrammarSymbol").GrammarSymbol;
    get nextSymbol(): import("../parser/GrammarSymbol").GrammarSymbol;
    constructor(production: Production, position: number, lookahead: Iterable<Terminal>);
    addLookahead(ts: Iterable<Terminal>): void;
    symbolByOffset(offset: number): import("../parser/GrammarSymbol").GrammarSymbol;
    canReduce(): boolean;
    advance(): StateItem;
    toString(): string;
}
