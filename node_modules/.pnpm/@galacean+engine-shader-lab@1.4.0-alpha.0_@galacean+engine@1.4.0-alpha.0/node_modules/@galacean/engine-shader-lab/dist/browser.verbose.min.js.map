{"version":3,"file":"browser.verbose.min.js","sources":["../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_array_like_to_array.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_create_for_of_iterator_helper_loose.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_set_prototype_of.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_inherits.js","../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs","../src/common/ShaderRange.ts","../src/common/Keywords.ts","../src/common/types.ts","../src/GSError.ts","../src/lalr/types.ts","../src/parser/symbolTable/SymbolInfo.ts","../src/parser/GrammarSymbol.ts","../src/common/Enums.ts","../src/parser/AST.ts","../src/preprocessor/constants.ts","../src/common/ShaderPosition.ts","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_instanceof.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_is_native_reflect_construct.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_construct.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_get_prototype_of.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_wrap_native_super.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_is_native_function.js","../src/ShaderLabUtils.ts","../src/common/BaseToken.ts","../src/lexer/Utils.ts","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_create_class.js","../src/common/BaseScanner.ts","../src/lexer/Lexer.ts","../src/parser/ShaderInfo.ts","../src/parser/symbolTable/SymbolDataType.ts","../src/parser/symbolTable/FnSymbol.ts","../src/parser/symbolTable/StructSymbol.ts","../src/common/BaseSymbolTable.ts","../src/parser/symbolTable/SymbolTable.ts","../src/parser/symbolTable/VarSymbol.ts","../src/parser/SemanticAnalyzer.ts","../src/lalr/Production.ts","../src/parser/Grammar.ts","../src/parser/builtin/functions.ts","../src/parser/builtin/variables.ts","../src/lalr/StateItem.ts","../src/lalr/State.ts","../src/ParserUtils.ts","../src/parser/types.ts","../src/lalr/Utils.ts","../src/lalr/CFG.ts","../src/lalr/LALR1.ts","../src/parser/ShaderTargetParser.ts","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_type_of.js","../src/preprocessor/MacroDefine.ts","../src/preprocessor/sourceMap/index.ts","../src/preprocessor/Utils.ts","../src/preprocessor/PpScanner.ts","../src/preprocessor/PpParser.ts","../src/preprocessor/Preprocessor.ts","../src/codeGen/VisitorContext.ts","../src/codeGen/GLESVisitor.ts","../src/codeGen/CodeGenVisitor.ts","../src/codeGen/GLES100.ts","../src/codeGen/GLES300.ts","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_extends.js","../src/contentParser/KeywordMap.ts","../src/contentParser/Scanner.ts","../src/contentParser/SymbolTable.ts","../src/contentParser/ShaderContentParser.ts","../src/ShaderLab.ts","../src/index.ts"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _create_for_of_iterator_helper_loose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (it) return (it = it.call(o)).next.bind(it);\n    // Fallback for engines without symbol support\n    if (Array.isArray(o) || (it = _unsupported_iterable_to_array(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n\n        var i = 0;\n\n        return function() {\n            if (i >= o.length) return { done: true };\n\n            return { done: false, value: o[i++] };\n        };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _create_for_of_iterator_helper_loose as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _ as _set_prototype_of } from \"./_set_prototype_of.js\";\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","import { IPoolElement } from \"@galacean/engine\";\nimport { ShaderPosition } from \"./ShaderPosition\";\n\nexport class ShaderRange implements IPoolElement {\n  public start: ShaderPosition;\n  public end: ShaderPosition;\n\n  set(start: ShaderPosition, end: ShaderPosition) {\n    this.start = start;\n    this.end = end;\n  }\n\n  dispose(): void {\n    this.start.dispose();\n    this.end.dispose();\n  }\n}\n","export enum EKeyword {\n  ATTRIBUTE = 0,\n  CONST,\n  BOOL,\n  FLOAT,\n  DOUBLE,\n  INT,\n  UINT,\n  BREAK,\n  CONTINUE,\n  DO,\n  ELSE,\n  FOR,\n  IF,\n  WHILE,\n  DISCARD,\n  RETURN,\n  BVEC2,\n  BVEC3,\n  BVEC4,\n  IVEC2,\n  IVEC3,\n  IVEC4,\n  UVEC2,\n  UVEC3,\n  UVEC4,\n  VEC2,\n  VEC3,\n  VEC4,\n  MAT2,\n  MAT3,\n  MAT4,\n  MAT2X3,\n  MAT2X4,\n  MAT3X2,\n  MAT3X4,\n  MAT4X2,\n  MAT4X3,\n  IN,\n  OUT,\n  INOUT,\n  CENTROID,\n  SAMPLER2D,\n  SAMPLER3D,\n  SAMPLER_CUBE,\n  SAMPLER2D_SHADOW,\n  SAMPLER_CUBE_SHADOW,\n  SAMPLER2D_ARRAY,\n  SAMPLER2D_ARRAY_SHADOW,\n  I_SAMPLER2D,\n  I_SAMPLER3D,\n  I_SAMPLER_CUBE,\n  I_SAMPLER2D_ARRAY,\n  U_SAMPLER2D,\n  U_SAMPLER3D,\n  U_SAMPLER_CUBE,\n  U_SAMPLER2D_ARRAY,\n  STRUCT,\n  VOID,\n  TRUE,\n  FALSE,\n  PRECISION,\n  PRECISE,\n  HIGHP,\n  MEDIUMP,\n  LOWP,\n  INVARIANT,\n  SMOOTH,\n  FLAT,\n  NOPERSPECTIVE,\n\n  // galacean internals\n  GS_RenderQueueType,\n  GS_BlendState,\n  GS_DepthState,\n  GS_StencilState,\n  GS_RasterState,\n  GS_EditorProperties,\n  GS_EditorMacros,\n  GS_Editor,\n  GS_Tags,\n  GS_ReplacementTag,\n  GS_LightMode,\n  GS_PipelineStage,\n  GS_VertexShader,\n  GS_FragmentShader,\n  GS_SubShader,\n  GS_Pass,\n  GS_BlendFactor,\n  GS_BlendOperation,\n  GS_Bool,\n  GS_Number,\n  GS_Color,\n  GS_CompareFunction,\n  GS_StencilOperation,\n  GS_CullMode,\n  GS_UsePass\n}\n","import { EKeyword } from \"./Keywords\";\n\nexport const KeywordTable = new Map<string, EKeyword>([\n  [\"attribute\", EKeyword.ATTRIBUTE],\n  [\"const\", EKeyword.CONST],\n  [\"bool\", EKeyword.BOOL],\n  [\"float\", EKeyword.FLOAT],\n  [\"double\", EKeyword.DOUBLE],\n  [\"int\", EKeyword.INT],\n  [\"uint\", EKeyword.UINT],\n  [\"break\", EKeyword.BREAK],\n  [\"continue\", EKeyword.CONTINUE],\n  [\"do\", EKeyword.DO],\n  [\"else\", EKeyword.ELSE],\n  [\"for\", EKeyword.FOR],\n  [\"if\", EKeyword.IF],\n  [\"while\", EKeyword.WHILE],\n  [\"discard\", EKeyword.DISCARD],\n  [\"return\", EKeyword.RETURN],\n  [\"bvec2\", EKeyword.BVEC2],\n  [\"bvec3\", EKeyword.BVEC3],\n  [\"bvec4\", EKeyword.BVEC4],\n  [\"ivec2\", EKeyword.IVEC2],\n  [\"ivec3\", EKeyword.IVEC3],\n  [\"ivec4\", EKeyword.IVEC4],\n  [\"uvec2\", EKeyword.UVEC2],\n  [\"uvec3\", EKeyword.UVEC3],\n  [\"uvec4\", EKeyword.UVEC4],\n  [\"vec2\", EKeyword.VEC2],\n  [\"vec3\", EKeyword.VEC3],\n  [\"vec4\", EKeyword.VEC4],\n  [\"mat2\", EKeyword.MAT2],\n  [\"mat3\", EKeyword.MAT3],\n  [\"mat4\", EKeyword.MAT4],\n  [\"in\", EKeyword.IN],\n  [\"out\", EKeyword.OUT],\n  [\"inout\", EKeyword.INOUT],\n  [\"sampler2D\", EKeyword.SAMPLER2D],\n  [\"samplerCube\", EKeyword.SAMPLER_CUBE],\n  [\"sampler3D\", EKeyword.SAMPLER3D],\n  [\"sampler2DShadow\", EKeyword.SAMPLER2D_SHADOW],\n  [\"samplerCubeShadow\", EKeyword.SAMPLER_CUBE_SHADOW],\n  [\"sampler2DArray\", EKeyword.SAMPLER2D_ARRAY],\n  [\"sampler2DArrayShadow\", EKeyword.SAMPLER2D_ARRAY_SHADOW],\n  [\"isampler2D\", EKeyword.I_SAMPLER2D],\n  [\"isampler3D\", EKeyword.I_SAMPLER3D],\n  [\"isamplerCube\", EKeyword.I_SAMPLER_CUBE],\n  [\"isampler2DArray\", EKeyword.I_SAMPLER2D_ARRAY],\n  [\"usampler2D\", EKeyword.U_SAMPLER2D],\n  [\"usampler3D\", EKeyword.U_SAMPLER3D],\n  [\"usamplerCube\", EKeyword.U_SAMPLER_CUBE],\n  [\"usampler2DArray\", EKeyword.U_SAMPLER2D_ARRAY],\n  [\"struct\", EKeyword.STRUCT],\n  [\"void\", EKeyword.VOID],\n  [\"true\", EKeyword.TRUE],\n  [\"false\", EKeyword.FALSE],\n  [\"precision\", EKeyword.PRECISION],\n  [\"precise\", EKeyword.PRECISE],\n  [\"highp\", EKeyword.HIGHP],\n  [\"mediump\", EKeyword.MEDIUMP],\n  [\"lowp\", EKeyword.LOWP],\n  [\"invariant\", EKeyword.INVARIANT],\n  [\"flat\", EKeyword.FLAT],\n  [\"smooth\", EKeyword.SMOOTH],\n  [\"noperspective\", EKeyword.NOPERSPECTIVE],\n  [\"centroid\", EKeyword.CENTROID]\n]);\n\nexport enum ETokenType {\n  ID = 1000,\n  FLOAT_CONSTANT,\n  INT_CONSTANT,\n  STRING_CONST,\n  /** << */\n  LEFT_OP,\n  /** \\>> */\n  RIGHT_OP,\n  /** ++ */\n  INC_OP,\n  /** -- */\n  DEC_OP,\n  /** <= */\n  LE_OP,\n  /** \\>= */\n  GE_OP,\n  /** == */\n  EQ_OP,\n  /** != */\n  NE_OP,\n  /** && */\n  AND_OP,\n  /** || */\n  OR_OP,\n  /** ^^ */\n  XOR_OP,\n  /** *= */\n  MUL_ASSIGN,\n  /** /= */\n  DIV_ASSIGN,\n  /** += */\n  ADD_ASSIGN,\n  /** -= */\n  SUB_ASSIGN,\n  /** %= */\n  MOD_ASSIGN,\n  /** <<= */\n  LEFT_ASSIGN,\n  /** >>= */\n  RIGHT_ASSIGN,\n  /** &= */\n  AND_ASSIGN,\n  /** ^= */\n  XOR_ASSIGN,\n  /** |= */\n  OR_ASSIGN,\n  /** ( */\n  LEFT_PAREN,\n  /** ) */\n  RIGHT_PAREN,\n  /** [ */\n  LEFT_BRACKET,\n  /** ] */\n  RIGHT_BRACKET,\n  /** { */\n  LEFT_BRACE,\n  /** } */\n  RIGHT_BRACE,\n  /** . */\n  DOT,\n  /** , */\n  COMMA,\n  COLON,\n  /** = */\n  EQUAL,\n  SEMICOLON,\n  /** ! */\n  BANG,\n  /** \\- */\n  DASH,\n  /** ~ */\n  TILDE,\n  PLUS,\n  /** \\* */\n  STAR,\n  /** / */\n  SLASH,\n  /** % */\n  PERCENT,\n  /** < */\n  LEFT_ANGLE,\n  /** \\> */\n  RIGHT_ANGLE,\n  VERTICAL_BAR,\n  /** ^ */\n  CARET,\n  /** & */\n  AMPERSAND,\n  /** ? */\n  QUESTION,\n\n  NOT_WORD,\n\n  /** ε */\n  EPSILON = 1998,\n  EOF = 1999\n}\n\nexport const TypeAny = 3000;\n\nexport type GalaceanDataType =\n  | EKeyword.VOID\n  | EKeyword.FLOAT\n  | EKeyword.BOOL\n  | EKeyword.INT\n  | EKeyword.UINT\n  | EKeyword.VEC2\n  | EKeyword.VEC3\n  | EKeyword.VEC4\n  | EKeyword.BVEC2\n  | EKeyword.BVEC3\n  | EKeyword.BVEC4\n  | EKeyword.IVEC2\n  | EKeyword.IVEC3\n  | EKeyword.IVEC4\n  | EKeyword.UVEC2\n  | EKeyword.UVEC3\n  | EKeyword.UVEC4\n  | EKeyword.MAT2\n  | EKeyword.MAT3\n  | EKeyword.MAT4\n  | EKeyword.MAT2X3\n  | EKeyword.MAT2X4\n  | EKeyword.MAT3X2\n  | EKeyword.MAT3X4\n  | EKeyword.MAT4X2\n  | EKeyword.MAT4X3\n  | EKeyword.SAMPLER2D\n  | EKeyword.SAMPLER3D\n  | EKeyword.SAMPLER_CUBE\n  | EKeyword.SAMPLER2D_SHADOW\n  | EKeyword.SAMPLER_CUBE_SHADOW\n  | EKeyword.SAMPLER2D_ARRAY\n  | EKeyword.SAMPLER2D_ARRAY_SHADOW\n  | EKeyword.I_SAMPLER2D\n  | EKeyword.I_SAMPLER3D\n  | EKeyword.I_SAMPLER_CUBE\n  | EKeyword.I_SAMPLER2D_ARRAY\n  | EKeyword.U_SAMPLER2D\n  | EKeyword.U_SAMPLER3D\n  | EKeyword.U_SAMPLER_CUBE\n  | EKeyword.U_SAMPLER2D_ARRAY\n  | typeof TypeAny\n  | string;\n\nexport type TokenType = ETokenType | EKeyword;\n","// #if _VERBOSE\nimport { ShaderPosition } from \"./common/ShaderPosition\";\nimport { ShaderRange } from \"./common/ShaderRange\";\n\nexport class GSError extends Error {\n  static wrappingLineCount = 2;\n\n  constructor(\n    name: GSErrorName,\n    message: string,\n    public readonly location: ShaderRange | ShaderPosition,\n    public readonly source: string,\n    public readonly file?: string\n  ) {\n    super(message);\n    this.name = name;\n  }\n\n  override toString(): string {\n    let start: ShaderPosition, end: ShaderPosition;\n    const { message, location, source } = this;\n    if (!source) {\n      return message;\n    }\n\n    if (location instanceof ShaderPosition) {\n      start = end = location;\n    } else {\n      start = location.start;\n      end = location.end;\n    }\n    const lines = source.split(\"\\n\");\n\n    let diagnosticMessage = `${this.name}: ${message}\\n\\n`;\n    const lineSplit = \"|···\";\n\n    const wrappingLineCount = GSError.wrappingLineCount;\n    for (let i = start.line - wrappingLineCount, n = end.line + wrappingLineCount; i <= n; i++) {\n      const line = lines[i];\n      diagnosticMessage += lineSplit + `${line}\\n`;\n\n      if (i < start.line || i > end.line) continue;\n\n      let remarkStart = 0;\n      let remarkEnd = line.length;\n      let paddingLength = lineSplit.length;\n      if (i === start.line) {\n        remarkStart = start.column;\n        paddingLength += start.column;\n      } else if (i === end.line) {\n        remarkEnd = end.column;\n      }\n      const remarkLength = Math.max(remarkEnd - remarkStart, 1);\n\n      diagnosticMessage += \" \".repeat(paddingLength) + \"^\".repeat(remarkLength) + \"\\n\";\n    }\n\n    return diagnosticMessage;\n  }\n}\n\n// #endif\nexport enum GSErrorName {\n  PreprocessorError = \"PreprocessorError\",\n  CompilationError = \"CompilationError\",\n  ScannerError = \"ScannerError\"\n}\n","import { ENonTerminal, Terminal } from \"../parser/GrammarSymbol\";\n\nexport type StateActionTable = Map<number /** state ID */, ActionTable>;\nexport type ActionTable = Map<Terminal, ActionInfo>;\nexport type StateGotoTable = Map<number /** state ID */, GotoTable>;\nexport type GotoTable = Map<ENonTerminal, number /** state ID */>;\n\nexport enum EAction {\n  Shift = 0,\n  Reduce,\n  Accept\n}\n\nexport interface ActionInfo {\n  action: EAction;\n  target?: number;\n}\n","import { IBaseSymbol } from \"../../common/BaseSymbolTable\";\nimport { ASTNode } from \"../AST\";\nimport { SymbolDataType } from \"./SymbolDataType\";\n\nexport enum ESymbolType {\n  VAR,\n  FN,\n  STRUCT\n}\n\ntype SymbolAstNode =\n  | ASTNode.Initializer\n  | ASTNode.StructSpecifier\n  | ASTNode.FunctionDefinition\n  | ASTNode.ParameterDeclarator\n  | ASTNode.InitDeclaratorList\n  | ASTNode.VariableDeclaration;\n\nexport class SymbolInfo implements IBaseSymbol {\n  constructor(\n    public readonly ident: string,\n    public readonly symbolType: ESymbolType,\n    public readonly astNode?: SymbolAstNode,\n    public readonly dataType?: SymbolDataType\n  ) {}\n}\n","import { TokenType } from \"../common\";\n\nexport type Terminal = TokenType;\n\nexport enum ENonTerminal {\n  START = 2000,\n  // galacean\n  gs_shader_program,\n\n  // glsl\n  global_declaration,\n  variable_declaration,\n  array_specifier_list,\n  array_specifier,\n  ext_builtin_type_specifier_nonarray,\n  precision_specifier,\n  variable_identifier,\n  variable_identifier_node,\n  primary_expression,\n  postfix_expression,\n  integer_expression,\n  function_call,\n  function_call_generic,\n  function_call_header_no_parameters,\n  function_call_header_with_parameters,\n  function_call_parameter_list,\n  function_call_header,\n  function_identifier,\n  constructor_identifier,\n  unary_expression,\n  unary_operator,\n  multiplicative_expression,\n  additive_expression,\n  shift_expression,\n  relational_expression,\n  equality_expression,\n  and_expression,\n  inclusive_or_expression,\n  exclusive_or_expression,\n  logical_and_expression,\n  logical_xor_expression,\n  logical_or_expression,\n  conditional_expression,\n  assignment_expression,\n  assignment_operator,\n  expression,\n  integer_constant_expression,\n  integer_constant_expression_operator,\n  declaration,\n  function_prototype,\n  function_declarator,\n  function_header_with_parameters,\n  function_header,\n  function_parameter_list,\n  parameter_declarator,\n  parameter_declaration,\n  parameter_qualifier,\n  parameter_type_specifier,\n  init_declarator_list,\n  single_declaration,\n  fully_specified_type,\n  type_qualifier,\n  single_type_qualifier,\n  storage_qualifier,\n  precision_qualifier,\n  interpolation_qualifier,\n  invariant_qualifier,\n  type_specifier,\n  type_specifier_nonarray,\n  type_specifier_no_prec,\n  basic_type,\n  struct_specifier,\n  struct_declaration_list,\n  struct_declaration,\n  struct_declarator_list,\n  struct_declarator,\n  identifier_list,\n  decl_identifier,\n  initializer,\n  initializer_list,\n  declaration_statement,\n  simple_statement,\n  compound_statement_no_scope,\n  statement_with_scope,\n  compound_statement,\n  statement,\n  statement_list,\n  iteration_statement_no_new_scope,\n  expression_statement,\n  selection_statement,\n  selection_rest_statement,\n  condition,\n  conditionopt,\n  iteration_statement,\n  for_init_statement,\n  for_rest_statement,\n  jump_statement,\n  external_declaration,\n  function_definition,\n  field_selection,\n  bool_constant,\n  function_identifier_node,\n  typename_identifier_node,\n  scope_brace,\n  scope_end_brace,\n\n  _ignore\n}\n\nexport type GrammarSymbol = Terminal | ENonTerminal;\n\nexport type Derivation = GrammarSymbol[];\n","export enum EShaderStage {\n  VERTEX,\n  FRAGMENT,\n  ALL\n}\n","// #if _VERBOSE\nimport { BuiltinFunction, BuiltinVariable, NonGenericGalaceanType } from \"./builtin\";\n// #endif\nimport { CodeGenVisitor } from \"../codeGen\";\nimport { ENonTerminal } from \"./GrammarSymbol\";\nimport { BaseToken as Token } from \"../common/BaseToken\";\nimport { EKeyword, ETokenType, TokenType, ShaderRange, GalaceanDataType, TypeAny } from \"../common\";\nimport SematicAnalyzer from \"./SemanticAnalyzer\";\nimport { ShaderData } from \"./ShaderInfo\";\nimport { ESymbolType, FnSymbol, StructSymbol, VarSymbol } from \"./symbolTable\";\nimport { ParserUtils } from \"../ParserUtils\";\nimport { IParamInfo, NodeChild, StructProp, SymbolType } from \"./types\";\nimport { ClearableObjectPool, IPoolElement } from \"@galacean/engine\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n\nexport abstract class TreeNode implements IPoolElement {\n  /** The non-terminal in grammar. */\n  nt: ENonTerminal;\n  private _children: NodeChild[];\n  private _location: ShaderRange;\n\n  get children() {\n    return this._children;\n  }\n\n  get location() {\n    return this._location;\n  }\n\n  set(loc: ShaderRange, children: NodeChild[], nt: ENonTerminal) {\n    this.nt = nt;\n    this._location = loc;\n    this._children = children;\n  }\n\n  dispose(): void {}\n\n  // Visitor pattern interface for code generation\n  codeGen(visitor: CodeGenVisitor) {\n    return visitor.defaultCodeGen(this.children);\n  }\n\n  semanticAnalyze(sa: SematicAnalyzer) {}\n}\n\nexport namespace ASTNode {\n  export type ASTNodePool = ClearableObjectPool<\n    { set: (loc: ShaderRange, children: NodeChild[]) => void } & IPoolElement & TreeNode\n  >;\n\n  export function _unwrapToken(node: NodeChild) {\n    if (node instanceof Token) {\n      return node;\n    }\n    throw \"not token\";\n  }\n\n  export function get(pool: ASTNodePool, sa: SematicAnalyzer, loc: ShaderRange, children: NodeChild[]) {\n    const node = pool.get();\n    node.set(loc, children);\n    node.semanticAnalyze(sa);\n    sa.semanticStack.push(node);\n  }\n\n  export class TrivialNode extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(TrivialNode);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal._ignore);\n    }\n  }\n\n  export class ScopeBrace extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ScopeBrace);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.scope_brace);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      sa.newScope();\n    }\n  }\n\n  export class ScopeEndBrace extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ScopeEndBrace);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.scope_end_brace);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      sa.dropScope();\n    }\n  }\n\n  export class JumpStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(JumpStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.jump_statement);\n    }\n\n    // #if _VERBOSE\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (ASTNode._unwrapToken(this.children![0]).type === EKeyword.RETURN) {\n        // TODO: check the equality of function return type declared and this type.\n      }\n    }\n    // #endif\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitJumpStatement(this);\n    }\n  }\n\n  // #if _VERBOSE\n  export class ConditionOpt extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ConditionOpt);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.conditionopt);\n    }\n  }\n\n  export class ForRestStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ForRestStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.for_rest_statement);\n    }\n  }\n\n  export class Condition extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(Condition);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.condition);\n    }\n  }\n\n  export class ForInitStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ForInitStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.for_init_statement);\n    }\n  }\n\n  export class IterationStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(IterationStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.iteration_statement);\n    }\n  }\n\n  export class SelectionStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(SelectionStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.selection_statement);\n    }\n  }\n\n  export class ExpressionStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ExpressionStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.expression_statement);\n    }\n  }\n  // #endif\n\n  export abstract class ExpressionAstNode extends TreeNode {\n    protected _type?: GalaceanDataType;\n    set type(t: GalaceanDataType | undefined) {\n      this._type = t;\n    }\n    get type() {\n      return this._type ?? TypeAny;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[], nt: ENonTerminal) {\n      super.set(loc, children, nt);\n      this._type = undefined;\n    }\n  }\n\n  // #if _VERBOSE\n  export class InitializerList extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(InitializerList);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.initializer_list);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const init = this.children[0] as Initializer | InitializerList;\n      this.type = init.type;\n    }\n  }\n\n  export class Initializer extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(Initializer);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.initializer);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<AssignmentExpression>this.children[0]).type;\n      } else {\n        this.type = (<InitializerList>this.children[1]).type;\n      }\n    }\n  }\n  // #endif\n\n  export class SingleDeclaration extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(SingleDeclaration);\n\n    typeSpecifier: TypeSpecifier;\n    arraySpecifier?: ArraySpecifier;\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.single_declaration);\n      this.typeSpecifier = undefined;\n      this.arraySpecifier = undefined;\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const fullyType = this.children[0] as FullySpecifiedType;\n      const id = this.children[1] as Token;\n      this.typeSpecifier = fullyType.typeSpecifier;\n\n      let sm: VarSymbol;\n      if (this.children.length === 2 || this.children.length === 4) {\n        const symbolType = new SymbolType(fullyType.type, fullyType.typeSpecifier.lexeme);\n        const initializer = this.children[3] as Initializer;\n\n        sm = new VarSymbol(id.lexeme, symbolType, false, initializer);\n      } else {\n        const arraySpecifier = this.children[2] as ArraySpecifier;\n        this.arraySpecifier = arraySpecifier;\n        const symbolType = new SymbolType(fullyType.type, fullyType.typeSpecifier.lexeme, arraySpecifier);\n        const initializer = this.children[4] as Initializer;\n\n        sm = new VarSymbol(id.lexeme, symbolType, false, initializer);\n      }\n      sa.symbolTable.insert(sm);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitSingleDeclaration(this);\n    }\n  }\n\n  export class FullySpecifiedType extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FullySpecifiedType);\n\n    get qualifierList() {\n      if (this.children.length > 1) {\n        return (<TypeQualifier>this.children[0]).qualifierList;\n      }\n    }\n\n    get typeSpecifier() {\n      return (this.children.length === 1 ? this.children[0] : this.children[1]) as TypeSpecifier;\n    }\n\n    get type() {\n      return this.typeSpecifier.type;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.fully_specified_type);\n    }\n  }\n\n  export class TypeQualifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(TypeQualifier);\n\n    qualifierList: EKeyword[];\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.type_qualifier);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length > 1) {\n        this.qualifierList = [\n          ...(<TypeQualifier>this.children[0]).qualifierList,\n          (<SingleTypeQualifier>this.children[1]).qualifier\n        ];\n      } else {\n        this.qualifierList = [(<SingleTypeQualifier>this.children[0]).qualifier];\n      }\n    }\n  }\n\n  export class SingleTypeQualifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(SingleTypeQualifier);\n\n    qualifier: EKeyword;\n    lexeme: string;\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.single_type_qualifier);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const child = this.children[0];\n      if (child instanceof Token) {\n        this.qualifier = child.type as EKeyword;\n        this.lexeme = child.lexeme;\n      } else {\n        this.qualifier = (<BasicTypeQualifier>child).qualifier;\n        this.lexeme = (<BasicTypeQualifier>child).lexeme;\n      }\n    }\n  }\n\n  abstract class BasicTypeQualifier extends TreeNode {\n    get qualifier(): EKeyword {\n      return (<Token>this.children[0]).type as EKeyword;\n    }\n    get lexeme(): string {\n      return (<Token>this.children[0]).lexeme;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[], nt: ENonTerminal) {\n      super.set(loc, children, nt);\n    }\n  }\n\n  // #if _VERBOSE\n  export class StorageQualifier extends BasicTypeQualifier {\n    static pool = ShaderLabUtils.createObjectPool(StorageQualifier);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.storage_qualifier);\n    }\n  }\n\n  export class PrecisionQualifier extends BasicTypeQualifier {\n    static pool = ShaderLabUtils.createObjectPool(PrecisionQualifier);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.precision_qualifier);\n    }\n  }\n\n  export class InterpolationQualifier extends BasicTypeQualifier {\n    static pool = ShaderLabUtils.createObjectPool(InterpolationQualifier);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.interpolation_qualifier);\n    }\n  }\n\n  export class InvariantQualifier extends BasicTypeQualifier {\n    static pool = ShaderLabUtils.createObjectPool(InvariantQualifier);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.invariant_qualifier);\n    }\n  }\n  // #endif\n\n  export class TypeSpecifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(TypeSpecifier);\n\n    get type(): GalaceanDataType {\n      return (this.children![0] as TypeSpecifierNonArray).type;\n    }\n    get lexeme(): string {\n      return (this.children![0] as TypeSpecifierNonArray).lexeme;\n    }\n    get arraySize(): number {\n      return (this.children?.[1] as ArraySpecifier)?.size;\n    }\n\n    get isCustom() {\n      return typeof this.type === \"string\";\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.type_specifier);\n    }\n  }\n\n  export class ArraySpecifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ArraySpecifier);\n\n    get size(): number | undefined {\n      const integerConstantExpr = this.children[1] as IntegerConstantExpression;\n      return integerConstantExpr.value;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.array_specifier);\n    }\n  }\n\n  export class IntegerConstantExpressionOperator extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(IntegerConstantExpressionOperator);\n\n    compute: (a: number, b: number) => number;\n    get lexeme(): string {\n      return (this.children[0] as Token).lexeme;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.integer_constant_expression_operator);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const operator = this.children[0] as Token;\n      switch (operator.type) {\n        case ETokenType.PLUS:\n          this.compute = (a, b) => a + b;\n          break;\n        case ETokenType.DASH:\n          this.compute = (a, b) => a - b;\n          break;\n        case ETokenType.STAR:\n          this.compute = (a, b) => a * b;\n          break;\n        case ETokenType.SLASH:\n          this.compute = (a, b) => a / b;\n          break;\n        case ETokenType.PERCENT:\n          this.compute = (a, b) => a % b;\n          break;\n        default:\n          sa.error(operator.location, `not implemented operator ${operator.lexeme}`);\n      }\n    }\n  }\n\n  export class IntegerConstantExpression extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(IntegerConstantExpression);\n\n    value?: number;\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.integer_constant_expression);\n      this.value = undefined;\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        const child = this.children[0];\n        if (child instanceof Token) {\n          this.value = Number(child.lexeme);\n        }\n        // #if _VERBOSE\n        else {\n          const id = child as VariableIdentifier;\n          if (!id.symbolInfo) {\n            sa.error(id.location, \"Undeclared symbol:\", id.lexeme);\n          }\n          if (!ParserUtils.typeCompatible(EKeyword.INT, id.typeInfo)) {\n            sa.error(id.location, \"Invalid integer.\");\n            return;\n          }\n        }\n        // #endif\n      }\n    }\n  }\n\n  export class TypeSpecifierNonArray extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(TypeSpecifierNonArray);\n\n    type: GalaceanDataType;\n    lexeme: string;\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.type_specifier_nonarray);\n      const tt = children[0];\n      if (tt instanceof Token) {\n        this.type = tt.lexeme;\n        this.lexeme = tt.lexeme;\n      } else {\n        this.type = (tt as ExtBuiltinTypeSpecifierNonArray).type as GalaceanDataType;\n        this.lexeme = (tt as ExtBuiltinTypeSpecifierNonArray).lexeme;\n      }\n    }\n  }\n\n  export class ExtBuiltinTypeSpecifierNonArray extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ExtBuiltinTypeSpecifierNonArray);\n\n    type: TokenType;\n    lexeme: string;\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.ext_builtin_type_specifier_nonarray);\n      const token = this.children[0] as Token;\n      this.type = token.type;\n      this.lexeme = token.lexeme;\n    }\n  }\n\n  export class InitDeclaratorList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(InitDeclaratorList);\n\n    get typeInfo(): SymbolType {\n      if (this.children.length === 1) {\n        const singleDecl = this.children[0] as SingleDeclaration;\n        return new SymbolType(\n          singleDecl.typeSpecifier.type,\n          singleDecl.typeSpecifier.lexeme,\n          singleDecl.arraySpecifier\n        );\n      }\n\n      const initDeclList = this.children[0] as InitDeclaratorList;\n      return initDeclList.typeInfo;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.init_declarator_list);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      let sm: VarSymbol;\n      if (this.children.length === 3 || this.children.length === 5) {\n        const id = this.children[2] as Token;\n        sm = new VarSymbol(id.lexeme, this.typeInfo, false, this);\n        sa.symbolTable.insert(sm);\n      } else if (this.children.length === 4 || this.children.length === 6) {\n        const typeInfo = this.typeInfo;\n        const arraySpecifier = this.children[3] as ArraySpecifier;\n        // #if _VERBOSE\n        if (typeInfo.arraySpecifier && arraySpecifier) {\n          sa.error(arraySpecifier.location, \"Array of array is not supported.\");\n        }\n        // #endif\n        typeInfo.arraySpecifier = arraySpecifier;\n        const id = this.children[2] as Token;\n        sm = new VarSymbol(id.lexeme, typeInfo, false, this);\n        sa.symbolTable.insert(sm);\n      }\n    }\n  }\n\n  export class IdentifierList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(IdentifierList);\n\n    get idList(): Token[] {\n      if (this.children.length === 2) {\n        return [this.children[1] as Token];\n      }\n      return [...(<IdentifierList>this.children[0]).idList, this.children[2] as Token];\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.identifier_list);\n    }\n  }\n\n  export class Declaration extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(Declaration);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.declaration);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitDeclaration(this);\n    }\n  }\n\n  export class FunctionProtoType extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionProtoType);\n\n    private get declarator() {\n      return this.children[0] as FunctionDeclarator;\n    }\n\n    get ident() {\n      return this.declarator.ident;\n    }\n\n    get returnType() {\n      return this.declarator.returnType;\n    }\n\n    get parameterList() {\n      return this.declarator.parameterInfoList;\n    }\n\n    get paramSig() {\n      return this.declarator.paramSig;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_prototype);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitFunctionProtoType(this);\n    }\n  }\n\n  export class FunctionDeclarator extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionDeclarator);\n\n    private get header() {\n      return this.children[0] as FunctionHeader;\n    }\n\n    private get parameterList() {\n      return this.children[1] as FunctionParameterList | undefined;\n    }\n\n    get ident() {\n      return this.header.ident;\n    }\n\n    get returnType() {\n      return this.header.returnType;\n    }\n\n    get parameterInfoList() {\n      return this.parameterList?.parameterInfoList;\n    }\n\n    get paramSig() {\n      return this.parameterList?.paramSig;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_declarator);\n    }\n  }\n\n  export class FunctionHeader extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionHeader);\n\n    get ident() {\n      return this.children[1] as Token;\n    }\n    get returnType() {\n      return this.children[0] as FullySpecifiedType;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_header);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      sa.newScope();\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitFunctionHeader(this);\n    }\n  }\n\n  export class FunctionParameterList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionParameterList);\n\n    get parameterInfoList(): IParamInfo[] {\n      if (this.children.length === 1) {\n        const decl = this.children[0] as ParameterDeclaration;\n        return [{ ident: decl.ident, typeInfo: decl.typeInfo, astNode: decl }];\n      }\n      const list = this.children[0] as FunctionParameterList;\n      const decl = this.children[2] as ParameterDeclaration;\n      return [...list.parameterInfoList, { ident: decl.ident, typeInfo: decl.typeInfo, astNode: decl }];\n    }\n\n    get paramSig(): GalaceanDataType[] {\n      if (this.children.length === 1) {\n        const decl = this.children[0] as ParameterDeclaration;\n        return [decl.typeInfo.type];\n      } else {\n        const list = this.children[0] as FunctionParameterList;\n        const decl = this.children[2] as ParameterDeclaration;\n        return list.paramSig.concat([decl.typeInfo.type]);\n      }\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_parameter_list);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitFunctionParameterList(this);\n    }\n  }\n\n  export class ParameterDeclaration extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ParameterDeclaration);\n\n    get typeQualifier() {\n      if (this.children.length === 2) return this.children[0] as TypeQualifier;\n    }\n\n    private get parameterDeclarator() {\n      if (this.children.length === 1) return this.children[0] as ParameterDeclarator;\n      return this.children[1] as ParameterDeclarator;\n    }\n\n    get typeInfo() {\n      return this.parameterDeclarator.typeInfo;\n    }\n\n    get ident() {\n      return this.parameterDeclarator.ident;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.parameter_declaration);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      let declarator: ParameterDeclarator;\n      if (this.children.length === 1) {\n        declarator = this.children[0] as ParameterDeclarator;\n      } else {\n        declarator = this.children[1] as ParameterDeclarator;\n      }\n      const varSymbol = new VarSymbol(declarator.ident.lexeme, declarator.typeInfo, false, this);\n      sa.symbolTable.insert(varSymbol);\n    }\n  }\n\n  export class ParameterDeclarator extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(ParameterDeclarator);\n\n    get ident() {\n      return this.children[1] as Token;\n    }\n\n    get typeInfo(): SymbolType {\n      const typeSpecifier = this.children[0] as TypeSpecifier;\n      const arraySpecifier = this.children[2] as ArraySpecifier;\n      return new SymbolType(typeSpecifier.type, typeSpecifier.lexeme, arraySpecifier);\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.parameter_declarator);\n    }\n  }\n\n  // #if _VERBOSE\n  export class SimpleStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(SimpleStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.simple_statement);\n    }\n  }\n\n  export class CompoundStatement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(CompoundStatement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.compound_statement);\n    }\n  }\n  // #endif\n\n  export class CompoundStatementNoScope extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(CompoundStatementNoScope);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.compound_statement_no_scope);\n    }\n  }\n\n  // #if _VERBOSE\n  export class Statement extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(Statement);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.statement);\n    }\n  }\n  // #endif\n\n  export class StatementList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(StatementList);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.statement_list);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitStatementList(this);\n    }\n  }\n\n  export class FunctionDefinition extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionDefinition);\n\n    get protoType() {\n      return this.children[0] as FunctionProtoType;\n    }\n\n    get statements() {\n      return this.children[1] as CompoundStatementNoScope;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_definition);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      sa.dropScope();\n      const sm = new FnSymbol(this.protoType.ident.lexeme, this);\n      sa.symbolTable.insert(sm);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitFunctionDefinition(this);\n    }\n  }\n\n  export class FunctionCall extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionCall);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_call);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      this.type = (this.children[0] as FunctionCallGeneric).type;\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitFunctionCall(this);\n    }\n  }\n\n  export class FunctionCallGeneric extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionCallGeneric);\n\n    fnSymbol: FnSymbol | StructSymbol | undefined;\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_call_generic);\n      this.fnSymbol = undefined;\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const functionIdentifier = this.children[0] as FunctionIdentifier;\n      if (functionIdentifier.isBuiltin) {\n        this.type = functionIdentifier.ident;\n      } else {\n        const fnIdent = <string>functionIdentifier.ident;\n\n        let paramSig: NonGenericGalaceanType[] | undefined;\n        if (this.children.length === 4) {\n          const paramList = this.children[2];\n          if (paramList instanceof FunctionCallParameterList) {\n            paramSig = paramList.paramSig as any;\n          }\n        }\n        // #if _VERBOSE\n        const builtinFn = BuiltinFunction.getFn(fnIdent, ...(paramSig ?? []));\n        if (builtinFn) {\n          this.type = BuiltinFunction.getReturnType(builtinFn.fun, builtinFn.genType);\n          return;\n        }\n        // #endif\n\n        const fnSymbol = sa.symbolTable.lookup({ ident: fnIdent, symbolType: ESymbolType.FN, signature: paramSig });\n        if (!fnSymbol) {\n          // #if _VERBOSE\n          sa.error(this.location, \"No overload function type found: \", functionIdentifier.ident);\n          // #endif\n          return;\n        }\n        this.type = fnSymbol?.dataType?.type;\n        this.fnSymbol = fnSymbol as FnSymbol;\n      }\n    }\n  }\n\n  export class FunctionCallParameterList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionCallParameterList);\n\n    get paramSig(): GalaceanDataType[] | undefined {\n      if (this.children.length === 1) {\n        const expr = this.children[0] as AssignmentExpression;\n        if (expr.type == undefined) return [TypeAny];\n        return [expr.type];\n      } else {\n        const list = this.children[0] as FunctionCallParameterList;\n        const decl = this.children[2] as AssignmentExpression;\n        if (list.paramSig == undefined || decl.type == undefined) {\n          return [TypeAny];\n        } else {\n          return list.paramSig.concat([decl.type]);\n        }\n      }\n    }\n\n    get paramNodes(): AssignmentExpression[] {\n      if (this.children.length === 1) {\n        return [this.children[0] as AssignmentExpression];\n      } else {\n        const list = this.children[0] as FunctionCallParameterList;\n        const decl = this.children[2] as AssignmentExpression;\n\n        return list.paramNodes.concat([decl]);\n      }\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_call_parameter_list);\n    }\n  }\n\n  export class PrecisionSpecifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(PrecisionSpecifier);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.precision_specifier);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      sa.shaderData.globalPrecisions.push(this);\n    }\n  }\n\n  export class FunctionIdentifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(FunctionIdentifier);\n\n    get ident() {\n      const ty = this.children[0] as TypeSpecifier;\n      return ty.type;\n    }\n\n    get lexeme() {\n      const ty = this.children[0] as TypeSpecifier;\n      return ty.lexeme;\n    }\n\n    get isBuiltin() {\n      return typeof this.ident !== \"string\";\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.function_identifier);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {}\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitFunctionIdentifier(this);\n    }\n  }\n\n  export class AssignmentExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(AssignmentExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.assignment_expression);\n    }\n\n    // #if _VERBOSE\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        const expr = this.children[0] as ConditionalExpression;\n        this.type = expr.type ?? TypeAny;\n      } else {\n        const expr = this.children[2] as AssignmentExpression;\n        this.type = expr.type ?? TypeAny;\n      }\n    }\n    // #endif\n  }\n\n  // #if _VERBOSE\n  export class AssignmentOperator extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(AssignmentOperator);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.assignment_operator);\n    }\n  }\n  // #endif\n\n  export class Expression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(Expression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.expression);\n    }\n\n    // #if _VERBOSE\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        const expr = this.children[0] as AssignmentExpression;\n        this.type = expr.type;\n      } else {\n        const expr = this.children[2] as AssignmentExpression;\n        this.type = expr.type;\n      }\n    }\n    // #endif\n  }\n\n  export class PrimaryExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(PrimaryExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.primary_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        const id = this.children[0];\n        if (id instanceof VariableIdentifier) {\n          this.type = id.typeInfo ?? TypeAny;\n        } else {\n          switch ((<Token>id).type) {\n            case ETokenType.INT_CONSTANT:\n              this._type = EKeyword.INT;\n              break;\n            case ETokenType.FLOAT_CONSTANT:\n              this.type = EKeyword.FLOAT;\n              break;\n            case EKeyword.TRUE:\n            case EKeyword.FALSE:\n              this.type = EKeyword.BOOL;\n              break;\n          }\n        }\n      } else {\n        const expression = this.children[1] as Expression;\n        this.type = expression.type;\n      }\n    }\n  }\n\n  export class PostfixExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(PostfixExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.postfix_expression);\n      if (this.children.length === 1) {\n        const child = this.children[0] as PrimaryExpression | FunctionCall;\n        this.type = child.type;\n      }\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitPostfixExpression(this);\n    }\n  }\n\n  // #if _VERBOSE\n  export class UnaryOperator extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(UnaryOperator);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.unary_operator);\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class UnaryExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(UnaryExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.unary_expression);\n      this.type = (this.children[0] as PostfixExpression).type;\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class MultiplicativeExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(MultiplicativeExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.multiplicative_expression);\n      if (this.children.length === 1) {\n        this.type = (this.children[0] as UnaryExpression).type;\n      } else {\n        const exp1 = this.children[0] as MultiplicativeExpression;\n        const exp2 = this.children[2] as UnaryExpression;\n        if (exp1.type === exp2.type) {\n          this.type = exp1.type;\n        }\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class AdditiveExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(AdditiveExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.additive_expression);\n      if (this.children.length === 1) {\n        this.type = (this.children[0] as MultiplicativeExpression).type;\n      } else {\n        const exp1 = this.children[0] as AdditiveExpression;\n        const exp2 = this.children[2] as MultiplicativeExpression;\n        if (exp1.type === exp2.type) {\n          this.type = exp1.type;\n        }\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class ShiftExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(ShiftExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.shift_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const expr = this.children[0] as ExpressionAstNode;\n      this.type = expr.type;\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class RelationalExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(RelationalExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.relational_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<ShiftExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.BOOL;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class EqualityExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(EqualityExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.equality_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<RelationalExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.BOOL;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class AndExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(AndExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.and_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<AndExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.UINT;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class ExclusiveOrExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(ExclusiveOrExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.exclusive_or_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<AndExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.UINT;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class InclusiveOrExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(InclusiveOrExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.inclusive_or_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<ExclusiveOrExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.UINT;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class LogicalAndExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(LogicalAndExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.logical_and_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<InclusiveOrExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.BOOL;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class LogicalXorExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(LogicalXorExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.logical_xor_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<LogicalAndExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.BOOL;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class LogicalOrExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(LogicalOrExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.logical_or_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<LogicalXorExpression>this.children[0]).type;\n      } else {\n        this.type = EKeyword.BOOL;\n      }\n    }\n  }\n  // #endif\n\n  // #if _VERBOSE\n  export class ConditionalExpression extends ExpressionAstNode {\n    static pool = ShaderLabUtils.createObjectPool(ConditionalExpression);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.conditional_expression);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 1) {\n        this.type = (<LogicalOrExpression>this.children[0]).type;\n      }\n    }\n  }\n  // #endif\n\n  export class StructSpecifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(StructSpecifier);\n\n    ident?: Token;\n\n    get propList(): StructProp[] {\n      const declList = (this.children.length === 6 ? this.children[3] : this.children[2]) as StructDeclarationList;\n      return declList.propList;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.struct_specifier);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      if (this.children.length === 6) {\n        this.ident = this.children[1] as Token;\n        sa.symbolTable.insert(new StructSymbol(this.ident.lexeme, this));\n      }\n    }\n  }\n\n  export class StructDeclarationList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(StructDeclarationList);\n\n    get propList(): StructProp[] {\n      if (this.children.length === 1) {\n        return (<StructDeclaration>this.children[0]).propList;\n      }\n      const list = this.children[0] as StructDeclarationList;\n      const decl = this.children[1] as StructDeclaration;\n      return [list.propList, decl.propList].flat();\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.struct_declaration_list);\n    }\n  }\n\n  export class StructDeclaration extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(StructDeclaration);\n\n    get typeSpecifier() {\n      if (this.children.length === 3) {\n        return this.children[0] as TypeSpecifier;\n      }\n      return this.children[1] as TypeSpecifier;\n    }\n\n    get declaratorList() {\n      if (this.children.length === 3) {\n        return this.children[1] as StructDeclaratorList;\n      }\n      return this.children[2] as StructDeclaratorList;\n    }\n\n    get propList(): StructProp[] {\n      const ret: StructProp[] = [];\n      for (let i = 0; i < this.declaratorList.declaratorList.length; i++) {\n        const declarator = this.declaratorList.declaratorList[i];\n        const typeInfo = new SymbolType(this.typeSpecifier.type, this.typeSpecifier.lexeme, declarator.arraySpecifier);\n        const prop = new StructProp(typeInfo, declarator.ident);\n        ret.push(prop);\n      }\n      return ret;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.struct_declaration);\n    }\n  }\n\n  export class StructDeclaratorList extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(StructDeclaratorList);\n\n    get declaratorList(): StructDeclarator[] {\n      if (this.children.length === 1) {\n        return [this.children[0] as StructDeclarator];\n      } else {\n        const list = this.children[0] as StructDeclaratorList;\n        return [...list.declaratorList, <StructDeclarator>this.children[1]];\n      }\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.struct_declarator_list);\n    }\n  }\n\n  export class StructDeclarator extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(StructDeclarator);\n\n    get ident() {\n      return this.children[0] as Token;\n    }\n\n    get arraySpecifier(): ArraySpecifier | undefined {\n      return this.children[1] as ArraySpecifier;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.struct_declarator);\n    }\n  }\n\n  export class VariableDeclaration extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(VariableDeclaration);\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.variable_declaration);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const type = this.children[0] as FullySpecifiedType;\n      const ident = this.children[1] as Token;\n      let sm: VarSymbol;\n      sm = new VarSymbol(ident.lexeme, new SymbolType(type.type, type.typeSpecifier.lexeme), true, this);\n\n      sa.symbolTable.insert(sm);\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitGlobalVariableDeclaration(this);\n    }\n  }\n\n  export class VariableIdentifier extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(VariableIdentifier);\n\n    symbolInfo:\n      | VarSymbol\n      // #if _VERBOSE\n      | BuiltinVariable\n      // #endif\n      | null;\n\n    get lexeme(): string {\n      return (<Token>this.children[0]).lexeme;\n    }\n\n    get typeInfo(): GalaceanDataType {\n      if (this.symbolInfo instanceof VarSymbol) return this.symbolInfo.dataType.type;\n      return this.symbolInfo?.type;\n    }\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.variable_identifier);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      const token = this.children[0] as Token;\n\n      // #if _VERBOSE\n      const builtinVar = BuiltinVariable.getVar(token.lexeme);\n      if (builtinVar) {\n        this.symbolInfo = builtinVar;\n        return;\n      }\n      // #endif\n\n      this.symbolInfo = sa.symbolTable.lookup({ ident: token.lexeme, symbolType: ESymbolType.VAR }) as VarSymbol;\n      // #if _VERBOSE\n      if (!this.symbolInfo) {\n        sa.error(this.location, \"undeclared identifier:\", token.lexeme);\n      }\n      // #endif\n    }\n\n    override codeGen(visitor: CodeGenVisitor): string {\n      return visitor.visitVariableIdentifier(this);\n    }\n  }\n\n  export class GLShaderProgram extends TreeNode {\n    static pool = ShaderLabUtils.createObjectPool(GLShaderProgram);\n\n    shaderData: ShaderData;\n\n    override set(loc: ShaderRange, children: NodeChild[]) {\n      super.set(loc, children, ENonTerminal.gs_shader_program);\n    }\n\n    override semanticAnalyze(sa: SematicAnalyzer): void {\n      this.shaderData = sa.shaderData;\n      this.shaderData.symbolTable = sa.symbolTable._scope;\n    }\n  }\n}\n","export enum EPpToken {\n  id,\n  line_remain,\n  chunk,\n  int_constant,\n  string_const,\n  /** \\>> */\n  right_op,\n  /** << */\n  left_op,\n  left_paren,\n  right_paren,\n  /** \\>= */\n  ge,\n  /** <= */\n  le,\n  /** == */\n  eq,\n  /** != */\n  neq,\n  /** && */\n  and,\n  /** || */\n  or,\n  /** < */\n  left_angle,\n  /** \\> */\n  right_angle,\n  /** \\* */\n  star,\n  /** + */\n  plus,\n  /** \\- */\n  dash,\n  /** ! */\n  bang,\n  /** \\/ */\n  slash,\n  /** % */\n  percent,\n\n  EOF = 100\n}\n\nexport enum EPpKeyword {\n  define = 101,\n  undef,\n  if,\n  ifdef,\n  ifndef,\n  else,\n  elif,\n  endif,\n  include,\n\n  defined\n}\n\nexport const PpKeyword = new Map<string, EPpKeyword>([\n  [\"#define\", EPpKeyword.define],\n  [\"#undef\", EPpKeyword.undef],\n  [\"#if\", EPpKeyword.if],\n  [\"#ifdef\", EPpKeyword.ifdef],\n  [\"#ifndef\", EPpKeyword.ifndef],\n  [\"#else\", EPpKeyword.else],\n  [\"#elif\", EPpKeyword.elif],\n  [\"#endif\", EPpKeyword.endif],\n  [\"#include\", EPpKeyword.include],\n  [\"defined\", EPpKeyword.defined]\n]);\n\nexport type PpConstant = boolean | number;\n","import { IPoolElement } from \"@galacean/engine\";\n\nexport class ShaderPosition implements IPoolElement {\n  index: number;\n  // #if _VERBOSE\n  line: number;\n  column: number;\n  // #endif\n\n  set(\n    index: number,\n    // #if _VERBOSE\n    line: number,\n    column: number\n    // #endif\n  ) {\n    this.index = index;\n    // #if _VERBOSE\n    this.line = line;\n    this.column = column;\n    // #endif\n  }\n\n  dispose(): void {\n    this.index = 0;\n    // #if _VERBOSE\n    this.line = 0;\n    this.column = 0;\n    // #endif\n  }\n}\n","function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else return left instanceof right;\n}\nexport { _instanceof as _ };\n","function _is_native_reflect_construct() {\n    // Since Reflect.construct can't be properly polyfilled, some\n    // implementations (e.g. core-js@2) don't set the correct internal slots.\n    // Those polyfills don't allow us to subclass built-ins, so we need to\n    // use our fallback implementation.\n    try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Boolean object.\n        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (_) {}\n    return (_is_native_reflect_construct = function() {\n        return !!result;\n    })();\n}\n\nexport { _is_native_reflect_construct as _ };\n","import { _ as _is_native_reflect_construct } from \"./_is_native_reflect_construct.js\";\nimport { _ as _set_prototype_of } from \"./_set_prototype_of.js\";\nfunction _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct()) _construct = Reflect.construct;\n    else {\n        _construct = function construct(Parent, args, Class) {\n            var a = [null];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n\n            if (Class) _set_prototype_of(instance, Class.prototype);\n\n            return instance;\n        };\n    }\n\n    return _construct.apply(null, arguments);\n}\nexport { _construct as _ };\n","function _get_prototype_of(o) {\n    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n\n    return _get_prototype_of(o);\n}\nexport { _get_prototype_of as _ };\n","import { _ as _construct } from \"./_construct.js\";\nimport { _ as _get_prototype_of } from \"./_get_prototype_of.js\";\nimport { _ as _is_native_function } from \"./_is_native_function.js\";\nimport { _ as _set_prototype_of } from \"./_set_prototype_of.js\";\n\nfunction _wrap_native_super(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    _wrap_native_super = function(Class) {\n        if (Class === null || !_is_native_function(Class)) return Class;\n        if (typeof Class !== \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n\n        function Wrapper() {\n            return _construct(Class, arguments, _get_prototype_of(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });\n\n        return _set_prototype_of(Wrapper, Class);\n    };\n\n    return _wrap_native_super(Class);\n}\nexport { _wrap_native_super as _ };\n","function _is_native_function(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nexport { _is_native_function as _ };\n","import { ClearableObjectPool, IPoolElement } from \"@galacean/engine\";\nimport { GSErrorName } from \"./GSError\";\nimport { ShaderRange } from \"./common/ShaderRange\";\nimport { ShaderPosition } from \"./common/ShaderPosition\";\n// #if _VERBOSE\nimport { GSError } from \"./GSError\";\n// #endif\n\nexport class ShaderLabUtils {\n  private static _shaderLabObjectPoolSet: ClearableObjectPool<IPoolElement>[] = [];\n\n  static createObjectPool<T extends IPoolElement>(type: new () => T) {\n    const pool = new ClearableObjectPool<T>(type);\n    ShaderLabUtils._shaderLabObjectPoolSet.push(pool);\n    return pool;\n  }\n\n  static clearAllShaderLabObjectPool() {\n    for (let i = 0, n = ShaderLabUtils._shaderLabObjectPoolSet.length; i < n; i++) {\n      ShaderLabUtils._shaderLabObjectPoolSet[i].clear();\n    }\n  }\n\n  static createGSError(\n    message: string,\n    errorName: GSErrorName,\n    source: string,\n    location: ShaderRange | ShaderPosition,\n    file?: string\n  ): Error {\n    // #if _VERBOSE\n    return new GSError(errorName, message, location, source, file);\n    // #else\n    return new Error(`[${errorName}]: ${message}`);\n    // #endif\n  }\n}\n","import { ETokenType } from \"./types\";\nimport { ShaderRange, ShaderPosition } from \".\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { IPoolElement } from \"@galacean/engine\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n\nexport class BaseToken<T extends number = number> implements IPoolElement {\n  static pool = ShaderLabUtils.createObjectPool(BaseToken);\n\n  type: T;\n  lexeme: string;\n  location: ShaderRange;\n\n  set(type: T, lexeme: string, start?: ShaderPosition);\n  set(type: T, lexeme: string, location?: ShaderRange);\n  set(type: T, lexeme: string, arg?: ShaderRange | ShaderPosition) {\n    this.type = type;\n    this.lexeme = lexeme;\n    if (arg) {\n      if (arg instanceof ShaderRange) {\n        this.location = arg as ShaderRange;\n      } else {\n        const end = ShaderLab.createPosition(\n          arg.index + lexeme.length,\n          // #if _VERBOSE\n          arg.line,\n          arg.column + lexeme.length\n          // #endif\n        );\n        this.location = ShaderLab.createRange(arg, end);\n      }\n    }\n  }\n\n  dispose(): void {}\n}\n\nexport const EOF = new BaseToken();\nEOF.set(ETokenType.EOF, \"/EOF\");\n","import { ETokenType, TokenType } from \"../common/types\";\n\nexport default class LexerUtils {\n  static numRegex = /\\d/;\n  static letterRegex = /\\w/;\n  static alphaRegex = /[a-zA-Z_]/;\n  static numOrLetterRegex = /(\\d|\\w)/;\n\n  static isNum(char: string) {\n    return this.numRegex.test(char);\n  }\n\n  static isLetter(char: string) {\n    return this.letterRegex.test(char);\n  }\n\n  static isAlpha(char: string) {\n    return this.alphaRegex.test(char);\n  }\n\n  static isNumOrLetter(char: string) {\n    return this.numOrLetterRegex.test(char);\n  }\n\n  static isKeyword(tt: TokenType) {\n    return tt < ETokenType.ID;\n  }\n}\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { ETokenType, ShaderRange, ShaderPosition } from \".\";\nimport { GSErrorName } from \"../GSError\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { BaseToken } from \"./BaseToken\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n\nexport type OnToken = (token: BaseToken, scanner: BaseScanner) => void;\n\n/**\n * @internal\n */\nexport default class BaseScanner {\n  private static _spaceCharsWithBreak = [\" \", \"\\t\", \"\\n\"];\n  private static _spaceChars = [\" \", \"\\t\"];\n  private static _checkIsIn(checked: string, chars: string[]): boolean {\n    for (let i = 0; i < chars.length; i++) {\n      if (checked === chars[i]) {\n        return true;\n      }\n      continue;\n    }\n    return false;\n  }\n\n  protected _currentIndex = 0;\n  protected _source: string;\n\n  // #if _VERBOSE\n  protected _column = 0;\n  protected _line = 0;\n  // #endif\n\n  get current(): number {\n    return this._currentIndex;\n  }\n\n  get source(): string {\n    return this._source;\n  }\n\n  getCurPosition(): ShaderPosition {\n    return ShaderLab.createPosition(\n      this._currentIndex,\n      // #if _VERBOSE\n      this._line,\n      this._column\n      // #endif\n    );\n  }\n\n  // #if _VERBOSE\n  get line() {\n    return this._line;\n  }\n\n  get column() {\n    return this._column;\n  }\n  // #endif\n\n  protected readonly _keywordsMap: Map<string, number>;\n\n  constructor(source: string, kws: Map<string, number> = new Map()) {\n    this._source = source;\n    this._keywordsMap = kws;\n  }\n\n  isEnd(): boolean {\n    return this._currentIndex >= this._source.length;\n  }\n\n  getCurChar(): string {\n    return this._source[this._currentIndex];\n  }\n\n  advance(count = 1): void {\n    for (let i = 0; i < count; i++) {\n      this._advance();\n    }\n  }\n\n  _advance(): void {\n    if (this.isEnd()) {\n      return;\n    }\n\n    // #if _VERBOSE\n    if (this.getCurChar() === \"\\n\") {\n      this._line += 1;\n      this._column = 0;\n    } else {\n      this._column += 1;\n    }\n    // #endif\n\n    this._currentIndex++;\n  }\n\n  skipSpace(includeLineBreak: boolean): void {\n    const spaceChars = includeLineBreak ? BaseScanner._spaceCharsWithBreak : BaseScanner._spaceChars;\n    let curChar = this.getCurChar();\n\n    while (BaseScanner._checkIsIn(curChar, spaceChars)) {\n      this._advance();\n      curChar = this.getCurChar();\n    }\n  }\n\n  skipCommentsAndSpace(): ShaderRange | undefined {\n    this.skipSpace(true);\n    if (this.peek(2) === \"//\") {\n      const start = this.getCurPosition();\n      this.advance(2);\n      // single line comments\n      while (this.getCurChar() !== \"\\n\") this._advance();\n      this.skipCommentsAndSpace();\n      return ShaderLab.createRange(start, this.getCurPosition());\n    } else if (this.peek(2) === \"/*\") {\n      const start = this.getCurPosition();\n      this.advance(2);\n      //  multi-line comments\n      while (this.peek(2) !== \"*/\" && !this.isEnd()) this._advance();\n      this.advance(2);\n      this.skipCommentsAndSpace();\n      return ShaderLab.createRange(start, this.getCurPosition());\n    }\n  }\n\n  peek(to: number): string {\n    const offset = this._currentIndex;\n    return this._source.substring(offset, offset + to);\n  }\n\n  scanText(text: string) {\n    this.skipCommentsAndSpace();\n    const peek = this.peek(text.length);\n    if (peek !== text) {\n      this.throwError(this.getCurPosition(), `Expect text \"${text}\", but got \"${peek}\"`);\n    }\n    this.advance(text.length);\n  }\n\n  throwError(pos: ShaderPosition | ShaderRange, ...msgs: any[]) {\n    const error = ShaderLabUtils.createGSError(msgs.join(\" \"), GSErrorName.ScannerError, this._source, pos);\n    throw error;\n  }\n\n  scanPairedText(left: string, right: string, balanced = false, skipLeading = false) {\n    if (!skipLeading) {\n      this.scanText(left);\n    }\n    const start = this._currentIndex;\n    let level = balanced ? 1 : 0;\n    while (this.peek(right.length) !== right || level !== 0) {\n      if (this.isEnd()) return;\n      if (balanced) {\n        if (this.peek(left.length) === left) {\n          level += 1;\n          this.advance(left.length);\n          continue;\n        } else if (this.peek(right.length) === right) {\n          level -= 1;\n          if (level === 0) break;\n          this.advance(right.length);\n          continue;\n        }\n      }\n      this.advance(right.length);\n    }\n    this.advance(right.length);\n    return this._source.substring(start, this._currentIndex - right.length);\n  }\n\n  scanToken(onToken?: OnToken, splitCharRegex = /\\w/) {\n    this.skipCommentsAndSpace();\n    const start = this.getCurPosition();\n    if (this.isEnd()) return;\n    while (splitCharRegex.test(this.getCurChar()) && !this.isEnd()) this._advance();\n    const end = this.getCurPosition();\n\n    if (start.index === end.index) {\n      this._advance();\n      const token = BaseToken.pool.get();\n      token.set(ETokenType.NOT_WORD, this._source[start.index], start);\n      onToken?.(token, this);\n      return token;\n    }\n\n    const lexeme = this._source.substring(start.index, end.index);\n    const tokenType = this._keywordsMap.get(lexeme) ?? ETokenType.ID;\n    const range = ShaderLab.createRange(start, end);\n    const token = BaseToken.pool.get();\n    token.set(tokenType, lexeme, range);\n    onToken?.(token, this);\n    return token;\n  }\n}\n","import { ShaderRange, ShaderPosition } from \"../common\";\nimport { ETokenType, KeywordTable } from \"../common\";\nimport { EOF, BaseToken } from \"../common/BaseToken\";\nimport LexerUtils from \"./Utils\";\nimport BaseScanner from \"../common/BaseScanner\";\nimport { ShaderLab } from \"../ShaderLab\";\n\n/**\n * The Lexer of ShaderLab Compiler\n */\nexport class Lexer extends BaseScanner {\n  reset(source: string) {\n    this._source = source;\n    this._currentIndex = 0;\n    // #if _VERBOSE\n    this._line = this._column = 0;\n    // #endif\n  }\n\n  *tokenize() {\n    while (!this.isEnd()) {\n      yield this.scanToken();\n    }\n    return EOF;\n  }\n\n  override skipSpace() {\n    while (/\\s/.test(this.getCurChar())) {\n      this.advance();\n    }\n  }\n\n  override scanToken(): BaseToken {\n    this.skipCommentsAndSpace();\n    if (this.isEnd()) {\n      return EOF;\n    }\n\n    if (LexerUtils.isAlpha(this.getCurChar())) {\n      return this._scanWord();\n    }\n    if (LexerUtils.isNum(this.getCurChar())) {\n      return this._scanNum();\n    }\n\n    const start = this._getPosition();\n    const token = BaseToken.pool.get();\n\n    switch (this.getCurChar()) {\n      case \"<\":\n        this.advance();\n        if (this.getCurChar() === \"<\") {\n          this.advance();\n          if (this.getCurChar() === \"=\") {\n            this.advance();\n            token.set(ETokenType.LEFT_ASSIGN, \"<<=\", start);\n            break;\n          }\n          token.set(ETokenType.LEFT_OP, \"<<\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.LE_OP, \"<=\", start);\n          break;\n        }\n        token.set(ETokenType.LEFT_ANGLE, \"<\", start);\n        break;\n\n      case \">\":\n        this.advance();\n        if (this.getCurChar() === \">\") {\n          this.advance();\n          if (this.getCurChar() === \"=\") {\n            this.advance();\n            token.set(ETokenType.RIGHT_ASSIGN, \">>=\", start);\n            break;\n          }\n          token.set(ETokenType.RIGHT_OP, \">>\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.GE_OP, \">=\", start);\n          break;\n        }\n        token.set(ETokenType.RIGHT_ANGLE, \">\", start);\n        break;\n\n      case \"+\":\n        this.advance();\n        if (this.getCurChar() === \"+\") {\n          this.advance();\n          token.set(ETokenType.INC_OP, \"++\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.ADD_ASSIGN, \"+=\", start);\n          break;\n        }\n        token.set(ETokenType.PLUS, \"+\", start);\n        break;\n\n      case \"-\":\n        this.advance();\n        if (this.getCurChar() === \"-\") {\n          this.advance();\n          token.set(ETokenType.DEC_OP, \"--\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.SUB_ASSIGN, \"-=\", start);\n          break;\n        }\n        token.set(ETokenType.DASH, \"-\", start);\n        break;\n\n      case \"=\":\n        this.advance();\n        if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.EQ_OP, \"==\", start);\n          break;\n        }\n        token.set(ETokenType.EQUAL, \"=\", start);\n        break;\n\n      case \"!\":\n        this.advance();\n        if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.NE_OP, \"!=\", start);\n          break;\n        }\n        token.set(ETokenType.BANG, \"!\", start);\n        break;\n\n      case \"&\":\n        this.advance();\n        if (this.getCurChar() === \"&\") {\n          this.advance();\n          token.set(ETokenType.AND_OP, \"&&\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.ADD_ASSIGN, \"&=\", start);\n          break;\n        }\n        token.set(ETokenType.AMPERSAND, \"&\", start);\n        break;\n\n      case \"|\":\n        this.advance();\n        if (this.getCurChar() === \"|\") {\n          this.advance();\n          token.set(ETokenType.OR_OP, \"||\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.OR_ASSIGN, \"|=\", start);\n          break;\n        }\n        token.set(ETokenType.VERTICAL_BAR, \"|\", start);\n        break;\n\n      case \"^\":\n        this.advance();\n        if (this.getCurChar() === \"^\") {\n          this.advance();\n          token.set(ETokenType.XOR_OP, \"^^\", start);\n          break;\n        } else if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.XOR_ASSIGN, \"^=\", start);\n          break;\n        }\n        token.set(ETokenType.CARET, \"^\", start);\n        break;\n\n      case \"*\":\n        this.advance();\n        if (this.getCurChar() === \"=\") {\n          this.advance();\n          token.set(ETokenType.MUL_ASSIGN, \"*=\", start);\n          break;\n        }\n\n        token.set(ETokenType.STAR, \"*\", start);\n        break;\n\n      case \"/\":\n        this.advance();\n        if (this.getCurChar() === \"=\") {\n          this.advance();\n\n          token.set(ETokenType.DIV_ASSIGN, \"/=\", start);\n          break;\n        }\n\n        token.set(ETokenType.SLASH, \"/\", start);\n        break;\n\n      case \"%\":\n        this.advance();\n        if (this.getCurChar() === \"=\") {\n          this.advance();\n\n          token.set(ETokenType.MOD_ASSIGN, \"%=\", start);\n          break;\n        }\n\n        token.set(ETokenType.PERCENT, \"%\", start);\n        break;\n\n      case \"(\":\n        this.advance();\n\n        token.set(ETokenType.LEFT_PAREN, \"(\", start);\n        break;\n      case \")\":\n        this.advance();\n\n        token.set(ETokenType.RIGHT_PAREN, \")\", start);\n        break;\n      case \"{\":\n        this.advance();\n\n        token.set(ETokenType.LEFT_BRACE, \"{\", start);\n        break;\n      case \"}\":\n        this.advance();\n\n        token.set(ETokenType.RIGHT_BRACE, \"}\", start);\n        break;\n      case \"[\":\n        this.advance();\n\n        token.set(ETokenType.LEFT_BRACKET, \"[\", start);\n        break;\n      case \"]\":\n        this.advance();\n\n        token.set(ETokenType.RIGHT_BRACKET, \"]\", start);\n        break;\n      case \".\":\n        this.advance();\n        if (LexerUtils.isNum(this.getCurChar())) {\n          return this._scanNumAfterDot();\n        }\n\n        token.set(ETokenType.DOT, \".\", start);\n        break;\n      case \",\":\n        this.advance();\n\n        token.set(ETokenType.COMMA, \",\", start);\n        break;\n      case \":\":\n        this.advance();\n\n        token.set(ETokenType.COLON, \":\", start);\n        return token;\n      case \";\":\n        this.advance();\n\n        token.set(ETokenType.SEMICOLON, \";\", start);\n        break;\n      case \"~\":\n        this.advance();\n\n        token.set(ETokenType.TILDE, \"~\", start);\n        break;\n      case \"?\":\n        this.advance();\n\n        token.set(ETokenType.QUESTION, \"?\", start);\n        break;\n      case '\"':\n        this.advance();\n        return this._scanStringConst();\n\n      default:\n        this.throwError(this.getCurPosition(), `Unexpected character ${this.getCurChar()}`);\n    }\n    return token;\n  }\n\n  private _scanStringConst() {\n    const start = this._getPosition();\n    const buffer: string[] = [];\n    while (this.getCurChar() !== '\"') {\n      buffer.push(this.getCurChar());\n      this.advance();\n    }\n    this.advance();\n    const range = ShaderLab.createRange(start, this._getPosition());\n\n    const token = BaseToken.pool.get();\n    token.set(ETokenType.STRING_CONST, buffer.join(\"\"), range);\n    return token;\n  }\n\n  private _scanNumAfterDot() {\n    const buffer = [\".\"];\n    while (LexerUtils.isNum(this.getCurChar())) {\n      buffer.push(this.getCurChar());\n      this.advance();\n    }\n\n    const token = BaseToken.pool.get();\n    token.set(ETokenType.FLOAT_CONSTANT, buffer.join(\"\"), this._getPosition(1));\n    return token;\n  }\n\n  private _getPosition(offset /** offset from starting point */ = 0) {\n    return ShaderLab.createPosition(\n      this.current - offset,\n      // #if _VERBOSE\n      this._line,\n      this._column - offset\n      // #endif\n    );\n  }\n\n  private _scanWord() {\n    const buffer: string[] = [this.getCurChar()];\n    const start = this._getPosition();\n    this.advance();\n    while (LexerUtils.isLetter(this.getCurChar())) {\n      buffer.push(this.getCurChar());\n      this.advance();\n    }\n    const word = buffer.join(\"\");\n    const kt = KeywordTable.get(word);\n    if (kt) {\n      const token = BaseToken.pool.get();\n      token.set(kt, word, start);\n      return token;\n    }\n\n    const token = BaseToken.pool.get();\n    token.set(ETokenType.ID, word, start);\n    return token;\n  }\n\n  private _scanNum() {\n    const buffer: string[] = [];\n    while (LexerUtils.isNum(this.getCurChar())) {\n      buffer.push(this.getCurChar());\n      this.advance();\n    }\n    if (this.getCurChar() === \".\") {\n      buffer.push(this.getCurChar());\n      this.advance();\n      while (LexerUtils.isNum(this.getCurChar())) {\n        buffer.push(this.getCurChar());\n        this.advance();\n      }\n      this._scanFloatSuffix(buffer);\n\n      const token = BaseToken.pool.get();\n      token.set(ETokenType.FLOAT_CONSTANT, buffer.join(\"\"), this._getPosition(buffer.length));\n      return token;\n    } else {\n      if (this.getCurChar() === \"e\" || this.getCurChar() === \"E\") {\n        this._scanFloatSuffix(buffer);\n\n        const token = BaseToken.pool.get();\n        token.set(ETokenType.FLOAT_CONSTANT, buffer.join(\"\"), this._getPosition(buffer.length));\n        return token;\n      } else {\n        this._scanIntegerSuffix(buffer);\n\n        const token = BaseToken.pool.get();\n        token.set(ETokenType.INT_CONSTANT, buffer.join(\"\"), this._getPosition(buffer.length));\n        return token;\n      }\n    }\n  }\n\n  private _scanFloatSuffix(buffer: string[]) {\n    if (this.getCurChar() === \"e\" || this.getCurChar() === \"E\") {\n      buffer.push(this.getCurChar());\n      this.advance();\n      if (this.getCurChar() === \"+\" || this.getCurChar() === \"-\") {\n        buffer.push(this.getCurChar());\n        this.advance();\n      }\n      if (!LexerUtils.isNum(this.getCurChar()))\n        this.throwError(this.getCurPosition(), \"lexing error, invalid exponent suffix.\");\n      while (LexerUtils.isNum(this.getCurChar())) {\n        buffer.push(this.getCurChar());\n        this.advance();\n      }\n    }\n    if (this.getCurChar() === \"f\" || this.getCurChar() === \"F\") {\n      buffer.push(this.getCurChar());\n      this.advance();\n    }\n  }\n\n  private _scanIntegerSuffix(buffer: string[]) {\n    if (this.getCurChar() === \"u\" || this.getCurChar() === \"U\") {\n      buffer.push(this.getCurChar());\n      this.advance();\n    }\n  }\n}\n","import { ASTNode } from \"./AST\";\nimport { SymbolTable } from \"../parser/symbolTable\";\n\nexport class ShaderData {\n  symbolTable: SymbolTable;\n\n  vertexMain: ASTNode.FunctionDefinition;\n  fragmentMain: ASTNode.FunctionDefinition;\n\n  globalPrecisions: ASTNode.PrecisionSpecifier[] = [];\n}\n","import { GalaceanDataType } from \"../../common\";\nimport { ASTNode } from \"../AST\";\n\nexport class SymbolDataType {\n  constructor(\n    public type: GalaceanDataType,\n    public typeLexeme: string,\n    public arraySpecifier?: ASTNode.ArraySpecifier\n  ) {}\n}\n","import { ASTNode } from \"../AST\";\nimport { SymbolDataType } from \"./SymbolDataType\";\nimport { ESymbolType, SymbolInfo } from \"./SymbolInfo\";\n\nexport class FnSymbol extends SymbolInfo {\n  declare astNode: ASTNode.FunctionDefinition;\n\n  constructor(lexeme: string, astNode: ASTNode.FunctionDefinition) {\n    const type = new SymbolDataType(\n      astNode.protoType.returnType.type,\n      astNode.protoType.returnType.typeSpecifier.lexeme\n    );\n    super(lexeme, ESymbolType.FN, astNode, type);\n  }\n}\n","import { ASTNode } from \"../AST\";\nimport { ESymbolType, SymbolInfo } from \"./SymbolInfo\";\n\nexport class StructSymbol extends SymbolInfo {\n  declare astNode: ASTNode.StructSpecifier;\n\n  constructor(lexeme: string, astNode: ASTNode.StructSpecifier) {\n    super(lexeme, ESymbolType.STRUCT, astNode);\n  }\n}\n","import { Logger } from \"@galacean/engine\";\nimport { GalaceanDataType } from \"./types\";\n\nexport interface IBaseSymbol {\n  readonly ident: string;\n}\n\n/**\n * The base class of `SymbolTable`\n */\nexport abstract class BaseSymbolTable<T extends IBaseSymbol = IBaseSymbol> {\n  protected _table: Map<string, T[]> = new Map();\n\n  /**\n   * Check the equality of two symbol.\n   */\n  abstract symbolEqualCheck(exist: T, newSymbol: T): boolean;\n\n  insert(sm: T) {\n    const entry = this._table.get(sm.ident) ?? [];\n    for (let i = 0; i < entry.length; i++) {\n      if (this.symbolEqualCheck(entry[i], sm)) {\n        Logger.warn(\"replace symbol:\", sm.ident);\n        entry[i] = sm;\n        return;\n      }\n    }\n    entry.push(sm);\n    this._table.set(sm.ident, entry);\n  }\n\n  lookup<R = T>(sm: T & { signature?: GalaceanDataType[] }): R {\n    const entry = this._table.get(sm.ident) ?? [];\n    for (const item of entry) {\n      if (this.symbolEqualCheck(item, sm)) return item as unknown as R;\n    }\n  }\n}\n\nexport class SymbolTableStack<S extends IBaseSymbol, T extends BaseSymbolTable<S>> {\n  private _stack: T[] = [];\n\n  get _scope() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  newScope(scope: T) {\n    this._stack.push(scope);\n  }\n\n  clear() {\n    this._stack.length = 0;\n  }\n\n  dropScope() {\n    this._stack.pop();\n  }\n\n  insert(sm: S) {\n    this._scope.insert(sm);\n  }\n\n  lookup(sm: S & { signature?: GalaceanDataType[] }) {\n    for (let i = this._stack.length - 1; i >= 0; i--) {\n      const scope = this._stack[i];\n      const ret = scope.lookup(sm);\n      if (ret) return ret;\n    }\n  }\n}\n","import { GalaceanDataType, TypeAny } from \"../../common\";\nimport { BaseSymbolTable } from \"../../common/BaseSymbolTable\";\nimport { ASTNode } from \"../AST\";\nimport { FnSymbol } from \"./FnSymbol\";\nimport { ESymbolType, SymbolInfo } from \"./SymbolInfo\";\n\nexport class SymbolTable extends BaseSymbolTable<SymbolInfo> {\n  override symbolEqualCheck(exist: SymbolInfo, newSymbol: SymbolInfo & { signature?: GalaceanDataType[] }): boolean {\n    if (exist.symbolType !== newSymbol.symbolType) return false;\n    if (newSymbol.symbolType === ESymbolType.FN) {\n      if (!newSymbol.astNode && !newSymbol.signature) return true;\n\n      const existParams = (exist.astNode as ASTNode.FunctionDefinition).protoType.paramSig;\n      const newSymbolParams =\n        newSymbol.signature ?? (newSymbol.astNode as ASTNode.FunctionDefinition).protoType.paramSig;\n      if (existParams.length !== newSymbolParams.length) return false;\n      for (let i = 0; i < existParams.length; i++) {\n        if (existParams[i] === TypeAny || newSymbolParams[i] === TypeAny) continue;\n        if (existParams[i] !== newSymbolParams[i]) return false;\n      }\n    }\n    return true;\n  }\n\n  getAllFnSymbols(fnIdent: string): FnSymbol[] {\n    const entries = this._table.get(fnIdent) ?? [];\n    return entries.filter((item) => item.symbolType === ESymbolType.FN) as FnSymbol[];\n  }\n}\n","import { ASTNode } from \"../AST\";\nimport { SymbolDataType } from \"./SymbolDataType\";\nimport { ESymbolType, SymbolInfo } from \"./SymbolInfo\";\n\nexport class VarSymbol extends SymbolInfo {\n  declare astNode:\n    | ASTNode.Initializer\n    | ASTNode.ParameterDeclarator\n    | ASTNode.InitDeclaratorList\n    | ASTNode.VariableDeclaration;\n\n  readonly isGlobalVariable: boolean;\n\n  constructor(\n    ident: string,\n    dataType: SymbolDataType,\n    isGlobalVariable: boolean,\n    initAst:\n      | ASTNode.Initializer\n      | ASTNode.ParameterDeclarator\n      | ASTNode.InitDeclaratorList\n      | ASTNode.VariableDeclaration\n  ) {\n    super(ident, ESymbolType.VAR, initAst, dataType);\n    this.isGlobalVariable = isGlobalVariable;\n  }\n}\n","import { ShaderRange } from \"../common\";\nimport { TreeNode } from \"./AST\";\nimport { GSErrorName } from \"../GSError\";\nimport { ShaderData } from \"./ShaderInfo\";\nimport { SymbolInfo, SymbolTable } from \"../parser/symbolTable\";\nimport { NodeChild } from \"./types\";\nimport { SymbolTableStack } from \"../common/BaseSymbolTable\";\nimport { ShaderLab } from \"../ShaderLab\";\n// #if _VERBOSE\nimport { GSError } from \"../GSError\";\n// #endif\n\nexport type TranslationRule<T = any> = (sa: SematicAnalyzer, ...tokens: NodeChild[]) => T;\n\n/**\n * The semantic analyzer of `ShaderLab` compiler.\n * - Build symbol table\n * - Static analysis\n */\nexport default class SematicAnalyzer {\n  semanticStack: TreeNode[] = [];\n  acceptRule?: TranslationRule = undefined;\n  symbolTable: SymbolTableStack<SymbolInfo, SymbolTable> = new SymbolTableStack();\n  private _shaderData = new ShaderData();\n\n  // #if _VERBOSE\n  readonly errors: GSError[] = [];\n  // #endif\n\n  get shaderData() {\n    return this._shaderData;\n  }\n\n  private _translationRuleTable: Map<number /** production id */, TranslationRule> = new Map();\n\n  constructor() {\n    this.newScope();\n  }\n\n  reset() {\n    this.semanticStack.length = 0;\n    this._shaderData = new ShaderData();\n    this.symbolTable.clear();\n    this.newScope();\n    // #if _VERBOSE\n    this.errors.length = 0;\n    // #endif\n  }\n\n  newScope() {\n    const scope = new SymbolTable();\n    this.symbolTable.newScope(scope);\n  }\n\n  dropScope() {\n    return this.symbolTable.dropScope();\n  }\n\n  addTranslationRule(pid: number, rule: TranslationRule) {\n    this._translationRuleTable.set(pid, rule);\n  }\n\n  getTranslationRule(pid: number) {\n    return this._translationRuleTable.get(pid);\n  }\n\n  error(loc: ShaderRange, ...param: any[]) {\n    // #if _VERBOSE\n    const err = new GSError(GSErrorName.CompilationError, param.join(\"\"), loc, ShaderLab._processingPassText);\n    this.errors.push(err);\n    return err;\n    // #else\n    throw new Error(param.join(\"\"));\n    // #endif\n  }\n}\n","import { ENonTerminal, GrammarSymbol } from \"../parser/GrammarSymbol\";\n\nexport default class Production {\n  private static _id = 0;\n  static pool: Map<number, Production> = new Map();\n\n  readonly goal: ENonTerminal;\n  readonly derivation: GrammarSymbol[];\n  readonly id: number;\n\n  constructor(goal: ENonTerminal, derivation: GrammarSymbol[]) {\n    this.goal = goal;\n    this.derivation = derivation;\n    this.id = Production._id++;\n    Production.pool.set(this.id, this);\n  }\n}\n","import { ETokenType } from \"../common\";\nimport { ENonTerminal, GrammarSymbol } from \"./GrammarSymbol\";\nimport Production from \"../lalr/Production\";\n\nexport class Grammar {\n  readonly productions: Production[];\n\n  readonly startSymbol: ENonTerminal;\n\n  static create(start: ENonTerminal, productions: GrammarSymbol[][]) {\n    const _ps = productions.map((gsl) => {\n      return new Production(<ENonTerminal>gsl[0], gsl.slice(1));\n    });\n    return new Grammar(start, _ps);\n  }\n\n  constructor(start: ENonTerminal, productions: Production[]) {\n    this.startSymbol = start;\n    productions.unshift(new Production(ENonTerminal.START, [start]));\n    this.productions = productions;\n  }\n\n  getProductionList(nonTerminal: ENonTerminal) {\n    return this.productions.filter((item) => item.goal === nonTerminal);\n  }\n\n  isNullableNT(NT: ENonTerminal) {\n    return this.productions.find((item) => item.goal === NT && item.derivation[0] === ETokenType.EPSILON);\n  }\n\n  getProductionByID(pid: number) {\n    return Production.pool.get(pid);\n  }\n}\n","import { EKeyword, GalaceanDataType, TypeAny } from \"../../common\";\nimport { EShaderStage } from \"../../common/Enums\";\n\nexport enum EGenType {\n  GenType = 200,\n  GenIntType,\n  GenUintType,\n  GenBoolType,\n  Mat,\n  BoolVec,\n  IntVec,\n  UintVec,\n  Vec,\n  GVec4,\n  GSampler2D,\n  GSampler3D,\n  GSamplerCube,\n  GSampler2DArray\n}\n\nexport type NonGenericGalaceanType = Exclude<GalaceanDataType, string>;\ntype BuiltinType = NonGenericGalaceanType | EGenType;\n\nfunction isGenericType(t: BuiltinType) {\n  return t >= EGenType.GenType && t <= EGenType.GSampler2DArray;\n}\n\nconst BuiltinFunctionTable: Map<string, BuiltinFunction[]> = new Map();\n\nexport class BuiltinFunction {\n  private _returnType: BuiltinType;\n  ident: string;\n  readonly args: BuiltinType[];\n  readonly scope: EShaderStage;\n\n  private constructor(ident: string, returnType: BuiltinType, scope: EShaderStage, ...args: BuiltinType[]) {\n    this.ident = ident;\n    this._returnType = returnType;\n    this.args = args;\n    this.scope = scope;\n  }\n\n  static getReturnType(fn: BuiltinFunction, genType?: NonGenericGalaceanType) {\n    if (!isGenericType(fn._returnType)) return fn._returnType as NonGenericGalaceanType;\n    return genType;\n  }\n\n  static _create(ident: string, returnType: BuiltinType, ...args: BuiltinType[]) {\n    const fn = new BuiltinFunction(ident, returnType, EShaderStage.ALL, ...args);\n    const list = BuiltinFunctionTable.get(ident) ?? [];\n    list.push(fn);\n    BuiltinFunctionTable.set(ident, list);\n  }\n\n  static _createWithScop(ident: string, returnType: BuiltinType, scope: EShaderStage, ...args: BuiltinType[]) {\n    const fn = new BuiltinFunction(ident, returnType, scope, ...args);\n    const list = BuiltinFunctionTable.get(ident) ?? [];\n    list.push(fn);\n    BuiltinFunctionTable.set(ident, list);\n  }\n\n  static getFn(\n    ident: string,\n    ...args: BuiltinType[]\n  ): { fun: BuiltinFunction; genType: Exclude<GalaceanDataType, string> } | undefined {\n    const list = BuiltinFunctionTable.get(ident);\n    let realType = TypeAny;\n    if (list?.length) {\n      const fun = list.find((item) => {\n        if (item.args.length !== args.length) return false;\n        let genType = 0;\n        for (let i = 0; i < args.length; i++) {\n          if (args[i] === TypeAny) continue;\n          realType = args[i];\n          if (isGenericType(item.args[i])) {\n            if (genType === 0) {\n              genType = args[i];\n              continue;\n            } else {\n              realType = genType;\n            }\n          }\n          if (args[i] === TypeAny) continue;\n          if (args[i] !== realType) return false;\n        }\n        return true;\n      });\n      if (fun) return { fun, genType: realType };\n    }\n  }\n}\n\nBuiltinFunction._create(\"radians\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"degrees\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"sin\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"cos\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"tan\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"asin\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"acos\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"atan\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"atan\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"sinh\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"cosh\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"tanh\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"asinh\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"acosh\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"atanh\", EGenType.GenType, EGenType.GenType);\n\nBuiltinFunction._create(\"pow\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"exp\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"log\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"exp2\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"log2\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"sqrt\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"inversesqrt\", EGenType.GenType, EGenType.GenType);\n\nBuiltinFunction._create(\"abs\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"abs\", EGenType.GenIntType, EGenType.GenIntType);\nBuiltinFunction._create(\"sign\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"sign\", EGenType.GenIntType, EGenType.GenIntType);\nBuiltinFunction._create(\"floor\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"trunc\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"round\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"roundEven\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"ceil\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"fract\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"mod\", EGenType.GenType, EGenType.GenType, EKeyword.FLOAT);\nBuiltinFunction._create(\"mod\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"min\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"min\", EGenType.GenType, EGenType.GenType, EKeyword.FLOAT);\nBuiltinFunction._create(\"min\", EGenType.GenIntType, EGenType.GenIntType, EGenType.GenIntType);\nBuiltinFunction._create(\"min\", EGenType.GenIntType, EGenType.GenIntType, EKeyword.INT);\nBuiltinFunction._create(\"min\", EGenType.GenUintType, EGenType.GenUintType, EGenType.GenUintType);\nBuiltinFunction._create(\"min\", EGenType.GenUintType, EGenType.GenUintType, EKeyword.UINT);\nBuiltinFunction._create(\"max\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"max\", EGenType.GenType, EGenType.GenType, EKeyword.FLOAT);\nBuiltinFunction._create(\"max\", EGenType.GenIntType, EGenType.GenIntType, EGenType.GenIntType);\nBuiltinFunction._create(\"max\", EGenType.GenIntType, EGenType.GenIntType, EKeyword.INT);\nBuiltinFunction._create(\"clamp\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"clamp\", EGenType.GenType, EGenType.GenType, EKeyword.FLOAT, EKeyword.FLOAT);\nBuiltinFunction._create(\"clamp\", EGenType.GenIntType, EGenType.GenIntType, EGenType.GenIntType, EGenType.GenIntType);\nBuiltinFunction._create(\"clamp\", EGenType.GenIntType, EGenType.GenIntType, EKeyword.INT, EKeyword.INT);\nBuiltinFunction._create(\n  \"clamp\",\n  EGenType.GenUintType,\n  EGenType.GenUintType,\n  EGenType.GenUintType,\n  EGenType.GenUintType\n);\nBuiltinFunction._create(\"clamp\", EGenType.GenUintType, EGenType.GenUintType, EKeyword.UINT, EKeyword.UINT);\nBuiltinFunction._create(\"mix\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"mix\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EKeyword.FLOAT);\nBuiltinFunction._create(\"mix\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EGenType.GenBoolType);\nBuiltinFunction._create(\"step\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"step\", EGenType.GenType, EKeyword.FLOAT, EGenType.GenType);\nBuiltinFunction._create(\"smoothstep\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"smoothstep\", EGenType.GenType, EKeyword.FLOAT, EKeyword.FLOAT, EGenType.GenType);\nBuiltinFunction._create(\"isnan\", EGenType.GenBoolType, EGenType.GenType);\nBuiltinFunction._create(\"isinf\", EGenType.GenBoolType, EGenType.GenType);\nBuiltinFunction._create(\"floatBitsToInt\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"floatBitsToUint\", EGenType.GenUintType, EGenType.GenType);\nBuiltinFunction._create(\"intBitsToFloat\", EGenType.GenType, EGenType.GenIntType);\nBuiltinFunction._create(\"uintBitsToFloat\", EGenType.GenType, EGenType.GenUintType);\n\nBuiltinFunction._create(\"packSnorm2x16\", EKeyword.UINT, EKeyword.VEC2);\nBuiltinFunction._create(\"unpackSnorm2x16\", EKeyword.VEC2, EKeyword.UINT);\nBuiltinFunction._create(\"packUnorm2x16\", EKeyword.UINT, EKeyword.VEC2);\nBuiltinFunction._create(\"unpackUnorm2x16\", EKeyword.VEC2, EKeyword.UINT);\nBuiltinFunction._create(\"packHalf2x16\", EKeyword.UINT, EKeyword.VEC2);\nBuiltinFunction._create(\"unpackHalf2x16\", EKeyword.VEC2, EKeyword.UINT);\n\nBuiltinFunction._create(\"length\", EKeyword.FLOAT, EGenType.GenType);\nBuiltinFunction._create(\"distance\", EKeyword.FLOAT, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"dot\", EKeyword.FLOAT, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"cross\", EKeyword.VEC3, EKeyword.VEC3, EKeyword.VEC3);\nBuiltinFunction._create(\"normalize\", EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"faceforward\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"reflect\", EGenType.GenType, EGenType.GenType, EGenType.GenType);\nBuiltinFunction._create(\"refract\", EGenType.GenType, EGenType.GenType, EGenType.GenType, EKeyword.FLOAT);\nBuiltinFunction._create(\"matrixCompMult\", EGenType.Mat, EGenType.Mat, EGenType.Mat);\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT2, EKeyword.VEC2, EKeyword.VEC2);\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT3, EKeyword.VEC3, EKeyword.VEC3);\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT4, EKeyword.VEC4, EKeyword.VEC4);\n\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT2X3, EKeyword.VEC3, EKeyword.VEC2);\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT3X2, EKeyword.VEC2, EKeyword.VEC3);\n\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT2X4, EKeyword.VEC4, EKeyword.VEC2);\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT4X2, EKeyword.VEC2, EKeyword.VEC4);\n\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT3X4, EKeyword.VEC4, EKeyword.VEC3);\nBuiltinFunction._create(\"outerProduct\", EKeyword.MAT4X3, EKeyword.VEC3, EKeyword.VEC4);\n\nBuiltinFunction._create(\"transpose\", EKeyword.MAT2, EKeyword.MAT2);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT3, EKeyword.MAT3);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT4, EKeyword.MAT4);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT2X3, EKeyword.MAT3X2);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT3X2, EKeyword.MAT2X3);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT4X2, EKeyword.MAT2X4);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT2X4, EKeyword.MAT4X2);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT3X4, EKeyword.MAT4X3);\nBuiltinFunction._create(\"transpose\", EKeyword.MAT4X3, EKeyword.MAT3X4);\n\nBuiltinFunction._create(\"determinant\", EKeyword.FLOAT, EKeyword.MAT2);\nBuiltinFunction._create(\"determinant\", EKeyword.FLOAT, EKeyword.MAT3);\nBuiltinFunction._create(\"determinant\", EKeyword.FLOAT, EKeyword.MAT4);\n\nBuiltinFunction._create(\"inverse\", EKeyword.MAT2, EKeyword.MAT2);\nBuiltinFunction._create(\"inverse\", EKeyword.MAT3, EKeyword.MAT3);\nBuiltinFunction._create(\"inverse\", EKeyword.MAT4, EKeyword.MAT4);\n\nBuiltinFunction._create(\"lessThan\", EGenType.BoolVec, EGenType.Vec, EGenType.Vec);\nBuiltinFunction._create(\"lessThan\", EGenType.BoolVec, EGenType.IntVec, EGenType.IntVec);\nBuiltinFunction._create(\"lessThan\", EGenType.BoolVec, EGenType.UintVec, EGenType.UintVec);\n\nBuiltinFunction._create(\"lessThanEqual\", EGenType.BoolVec, EGenType.Vec, EGenType.Vec);\nBuiltinFunction._create(\"lessThanEqual\", EGenType.BoolVec, EGenType.IntVec, EGenType.IntVec);\nBuiltinFunction._create(\"lessThanEqual\", EGenType.BoolVec, EGenType.UintVec, EGenType.UintVec);\n\nBuiltinFunction._create(\"greaterThan\", EGenType.BoolVec, EGenType.Vec, EGenType.Vec);\nBuiltinFunction._create(\"greaterThan\", EGenType.BoolVec, EGenType.IntVec, EGenType.IntVec);\nBuiltinFunction._create(\"greaterThan\", EGenType.BoolVec, EGenType.UintVec, EGenType.UintVec);\n\nBuiltinFunction._create(\"greaterThanEqual\", EGenType.BoolVec, EGenType.Vec, EGenType.Vec);\nBuiltinFunction._create(\"greaterThanEqual\", EGenType.BoolVec, EGenType.IntVec, EGenType.IntVec);\nBuiltinFunction._create(\"greaterThanEqual\", EGenType.BoolVec, EGenType.UintVec, EGenType.UintVec);\n\nBuiltinFunction._create(\"equal\", EGenType.BoolVec, EGenType.Vec, EGenType.Vec);\nBuiltinFunction._create(\"equal\", EGenType.BoolVec, EGenType.IntVec, EGenType.IntVec);\nBuiltinFunction._create(\"equal\", EGenType.BoolVec, EGenType.UintVec, EGenType.UintVec);\nBuiltinFunction._create(\"equal\", EGenType.BoolVec, EGenType.BoolVec, EGenType.BoolVec);\n\nBuiltinFunction._create(\"notEqual\", EGenType.BoolVec, EGenType.Vec, EGenType.Vec);\nBuiltinFunction._create(\"notEqual\", EGenType.BoolVec, EGenType.IntVec, EGenType.IntVec);\nBuiltinFunction._create(\"notEqual\", EGenType.BoolVec, EGenType.UintVec, EGenType.UintVec);\nBuiltinFunction._create(\"notEqual\", EGenType.BoolVec, EGenType.BoolVec, EGenType.BoolVec);\n\nBuiltinFunction._create(\"any\", EKeyword.BOOL, EGenType.BoolVec);\nBuiltinFunction._create(\"all\", EKeyword.BOOL, EGenType.BoolVec);\nBuiltinFunction._create(\"not\", EGenType.BoolVec, EGenType.BoolVec);\n\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC2, EGenType.GSampler2D, EKeyword.INT);\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC3, EGenType.GSampler3D, EKeyword.INT);\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC2, EGenType.GSamplerCube, EKeyword.INT);\n\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC2, EKeyword.SAMPLER2D_SHADOW, EKeyword.INT);\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC2, EKeyword.SAMPLER_CUBE_SHADOW, EKeyword.INT);\n\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC3, EGenType.GSampler2DArray, EKeyword.INT);\nBuiltinFunction._create(\"textureSize\", EKeyword.IVEC3, EKeyword.SAMPLER2D_ARRAY_SHADOW, EKeyword.INT);\n\nBuiltinFunction._create(\"texture2D\", EKeyword.SAMPLER2D, EKeyword.VEC2);\nBuiltinFunction._create(\"texture2D\", EKeyword.SAMPLER2D, EKeyword.VEC2, EKeyword.FLOAT);\n\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC2, EKeyword.FLOAT);\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC2);\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC3);\n\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EGenType.GSamplerCube, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EGenType.GSamplerCube, EKeyword.VEC3);\n\nBuiltinFunction._create(\"texture\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"texture\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC3);\n\nBuiltinFunction._create(\"texture\", EKeyword.FLOAT, EKeyword.SAMPLER_CUBE_SHADOW, EKeyword.VEC4, EKeyword.FLOAT);\nBuiltinFunction._create(\"texture\", EKeyword.FLOAT, EKeyword.SAMPLER_CUBE_SHADOW, EKeyword.VEC4);\n\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EKeyword.SAMPLER2D_ARRAY, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"texture\", EGenType.GVec4, EKeyword.SAMPLER2D_ARRAY, EKeyword.VEC3);\n\nBuiltinFunction._create(\"texture\", EKeyword.FLOAT, EKeyword.SAMPLER2D_ARRAY_SHADOW, EKeyword.VEC4);\n\nBuiltinFunction._create(\"textureProj\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProj\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC3);\nBuiltinFunction._create(\"textureProj\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC4, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProj\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC4);\nBuiltinFunction._create(\"textureProj\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC4, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProj\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC4);\n\nBuiltinFunction._create(\"textureProj\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC4, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProj\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC4);\n\nBuiltinFunction._create(\"textureLod\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC2, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureLod\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureLod\", EGenType.GVec4, EGenType.GSamplerCube, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureLod\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureLod\", EGenType.GVec4, EGenType.GSampler2DArray, EKeyword.VEC3, EKeyword.FLOAT);\n\nBuiltinFunction._create(\"textureCube\", EKeyword.SAMPLER_CUBE, EKeyword.VEC3);\nBuiltinFunction._create(\"textureCube\", EKeyword.SAMPLER_CUBE, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureCubeLod\", EKeyword.SAMPLER_CUBE, EKeyword.VEC3, EKeyword.FLOAT);\n\nBuiltinFunction._create(\n  \"textureOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC2,\n  EKeyword.IVEC2,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureOffset\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC2, EKeyword.IVEC2);\n\nBuiltinFunction._create(\n  \"textureOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC3,\n  EKeyword.IVEC3,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureOffset\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC3, EKeyword.IVEC3);\n\nBuiltinFunction._create(\n  \"textureOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC3,\n  EKeyword.IVEC2,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureOffset\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC3, EKeyword.IVEC2);\nBuiltinFunction._create(\n  \"textureOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2DArray,\n  EKeyword.VEC3,\n  EKeyword.IVEC2,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureOffset\", EGenType.GVec4, EGenType.GSampler2DArray, EKeyword.VEC3, EKeyword.IVEC2);\n\nBuiltinFunction._create(\"texelFetch\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.IVEC2, EKeyword.INT);\nBuiltinFunction._create(\"texelFetch\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.IVEC3, EKeyword.INT);\nBuiltinFunction._create(\"texelFetch\", EGenType.GVec4, EGenType.GSampler2DArray, EKeyword.IVEC3, EKeyword.INT);\n\nBuiltinFunction._create(\n  \"texelFetchOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.IVEC2,\n  EKeyword.INT,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"texelFetchOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.IVEC3,\n  EKeyword.INT,\n  EKeyword.IVEC3\n);\nBuiltinFunction._create(\n  \"texelFetchOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2DArray,\n  EKeyword.IVEC3,\n  EKeyword.INT,\n  EKeyword.IVEC2\n);\n\nBuiltinFunction._create(\n  \"textureProjOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC3,\n  EKeyword.IVEC2,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureProjOffset\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC3, EKeyword.IVEC2);\n\nBuiltinFunction._create(\n  \"textureProjOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC4,\n  EKeyword.IVEC2,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureProjOffset\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC4, EKeyword.IVEC2);\n\nBuiltinFunction._create(\n  \"textureProjOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC4,\n  EKeyword.IVEC3,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureProjOffset\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC4, EKeyword.IVEC3);\n\nBuiltinFunction._create(\n  \"textureProjOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC4,\n  EKeyword.IVEC2,\n  EKeyword.FLOAT\n);\nBuiltinFunction._create(\"textureProjOffset\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC4, EKeyword.IVEC2);\n\nBuiltinFunction._create(\n  \"textureLodOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC2,\n  EKeyword.FLOAT,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureLodOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC3,\n  EKeyword.FLOAT,\n  EKeyword.IVEC3\n);\n\nBuiltinFunction._create(\n  \"textureLodOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC3,\n  EKeyword.FLOAT,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureLodOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2DArray,\n  EKeyword.VEC3,\n  EKeyword.FLOAT,\n  EKeyword.IVEC2\n);\n\nBuiltinFunction._create(\"textureProjLod\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC3, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProjLod\", EGenType.GVec4, EGenType.GSampler2D, EKeyword.VEC4, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProjLod\", EGenType.GVec4, EGenType.GSampler3D, EKeyword.VEC4, EKeyword.FLOAT);\nBuiltinFunction._create(\"textureProjLod\", EKeyword.FLOAT, EKeyword.SAMPLER2D_SHADOW, EKeyword.VEC4, EKeyword.FLOAT);\n\nBuiltinFunction._create(\n  \"textureProjLodOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC3,\n  EKeyword.FLOAT,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureProjLodOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC4,\n  EKeyword.FLOAT,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureProjLodOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC4,\n  EKeyword.FLOAT,\n  EKeyword.IVEC3\n);\nBuiltinFunction._create(\n  \"textureProjLodOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC4,\n  EKeyword.FLOAT,\n  EKeyword.IVEC2\n);\n\nBuiltinFunction._create(\n  \"textureGrad\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\nBuiltinFunction._create(\n  \"textureGrad\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC3,\n  EKeyword.VEC3,\n  EKeyword.VEC3\n);\nBuiltinFunction._create(\n  \"textureGrad\",\n  EGenType.GVec4,\n  EGenType.GSamplerCube,\n  EKeyword.VEC3,\n  EKeyword.VEC3,\n  EKeyword.VEC3\n);\n\nBuiltinFunction._create(\n  \"textureGrad\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\nBuiltinFunction._create(\n  \"textureGrad\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER_CUBE_SHADOW,\n  EKeyword.VEC4,\n  EKeyword.VEC3,\n  EKeyword.VEC3\n);\n\nBuiltinFunction._create(\n  \"textureGrad\",\n  EGenType.GVec4,\n  EGenType.GSampler2DArray,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\nBuiltinFunction._create(\n  \"textureGrad\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_ARRAY_SHADOW,\n  EKeyword.VEC4,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\n\nBuiltinFunction._create(\n  \"textureGradOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureGradOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC3,\n  EKeyword.VEC3,\n  EKeyword.VEC3,\n  EKeyword.IVEC3\n);\nBuiltinFunction._create(\n  \"textureGradOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureGradOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2DArray,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureGradOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_ARRAY_SHADOW,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\n\nBuiltinFunction._create(\n  \"textureProjGrad\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\nBuiltinFunction._create(\n  \"textureProjGrad\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC4,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\nBuiltinFunction._create(\n  \"textureProjGrad\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC4,\n  EKeyword.VEC3,\n  EKeyword.VEC3\n);\nBuiltinFunction._create(\n  \"textureProjGrad\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC4,\n  EKeyword.VEC2,\n  EKeyword.VEC2\n);\n\nBuiltinFunction._create(\n  \"textureProjGradOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC3,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureProjGradOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler2D,\n  EKeyword.VEC4,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\nBuiltinFunction._create(\n  \"textureProjGradOffset\",\n  EGenType.GVec4,\n  EGenType.GSampler3D,\n  EKeyword.VEC4,\n  EKeyword.VEC3,\n  EKeyword.VEC3,\n  EKeyword.IVEC3\n);\nBuiltinFunction._create(\n  \"textureProjGradOffset\",\n  EKeyword.FLOAT,\n  EKeyword.SAMPLER2D_SHADOW,\n  EKeyword.VEC4,\n  EKeyword.VEC2,\n  EKeyword.VEC2,\n  EKeyword.IVEC2\n);\nBuiltinFunction._createWithScop(\"dFdx\", EGenType.GenType, EShaderStage.FRAGMENT, EGenType.GenType);\nBuiltinFunction._createWithScop(\"dFdy\", EGenType.GenType, EShaderStage.FRAGMENT, EGenType.GenType);\nBuiltinFunction._createWithScop(\"fwidth\", EGenType.GenType, EShaderStage.FRAGMENT, EGenType.GenType);\n","import { EKeyword, GalaceanDataType } from \"../../common\";\nimport { EShaderStage } from \"../../common/Enums\";\n\nexport const BuiltinVariableTable: Map<string, BuiltinVariable> = new Map();\n\nexport class BuiltinVariable {\n  type: GalaceanDataType;\n  lexeme: string;\n  scope: EShaderStage;\n\n  private constructor(type: GalaceanDataType, lexeme: string, scope: EShaderStage) {\n    this.type = type;\n    this.lexeme = lexeme;\n    this.scope = scope;\n  }\n\n  static createVariable(lexeme: string, type: GalaceanDataType, scope = EShaderStage.ALL) {\n    const item = new BuiltinVariable(type, lexeme, scope);\n    BuiltinVariableTable.set(lexeme, item);\n  }\n\n  static getVar(ident: string) {\n    return BuiltinVariableTable.get(ident);\n  }\n}\n\nBuiltinVariable.createVariable(\"gl_VertexID\", EKeyword.INT, EShaderStage.VERTEX);\nBuiltinVariable.createVariable(\"gl_InstanceID\", EKeyword.INT, EShaderStage.VERTEX);\nBuiltinVariable.createVariable(\"gl_Position\", EKeyword.VEC4, EShaderStage.VERTEX);\nBuiltinVariable.createVariable(\"gl_PointSize\", EKeyword.FLOAT, EShaderStage.VERTEX);\n\nBuiltinVariable.createVariable(\"gl_FragCoord\", EKeyword.VEC4, EShaderStage.FRAGMENT);\nBuiltinVariable.createVariable(\"gl_FrontFacing\", EKeyword.BOOL, EShaderStage.FRAGMENT);\nBuiltinVariable.createVariable(\"gl_FragDepth\", EKeyword.FLOAT, EShaderStage.FRAGMENT);\nBuiltinVariable.createVariable(\"gl_PointCoord\", EKeyword.VEC2, EShaderStage.FRAGMENT);\nBuiltinVariable.createVariable(\"gl_FragColor\", EKeyword.VEC4, EShaderStage.FRAGMENT);\n\nBuiltinVariable.createVariable(\"gl_MaxVertexAttribs\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxVertexUniformVectors\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxVertexOutputVectors\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxFragmentInputVectors\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxVertexTextureImageUnits\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxCombinedTextureImageUnits\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxTextureImageUnits\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxFragmentUniformVectors\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxDrawBuffers\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MinProgramTexelOffset\", EKeyword.INT);\nBuiltinVariable.createVariable(\"gl_MaxProgramTexelOffset\", EKeyword.INT);\n","import { ETokenType } from \"../common\";\nimport { ENonTerminal, Terminal } from \"../parser/GrammarSymbol\";\nimport Production from \"./Production\";\nimport GrammarUtils from \"./Utils\";\n\nexport default class StateItem {\n  static _id = 0;\n\n  readonly production: Production;\n  readonly position: number;\n  readonly lookaheadSet: Set<Terminal>;\n  readonly id: number;\n\n  _needReInfer = true;\n  get needReInfer() {\n    return this._needReInfer;\n  }\n  set needReInfer(v: boolean) {\n    this._needReInfer = v;\n  }\n\n  get curSymbol() {\n    return this.production.derivation[this.position];\n  }\n  get nextSymbol() {\n    return this.production.derivation[this.position + 1];\n  }\n\n  constructor(production: Production, position: number, lookahead: Iterable<Terminal>) {\n    this.production = production;\n    this.position = position;\n    this.lookaheadSet = new Set();\n    for (const la of lookahead) {\n      this.lookaheadSet.add(la);\n    }\n    this.id = StateItem._id++;\n  }\n\n  addLookahead(ts: Iterable<Terminal>) {\n    for (const t of ts) {\n      if (this.lookaheadSet.has(t)) continue;\n      this.lookaheadSet.add(t);\n      this.needReInfer = true;\n    }\n  }\n\n  symbolByOffset(offset: number) {\n    return this.production.derivation[this.position + offset];\n  }\n\n  canReduce() {\n    if (this.position > this.production.derivation.length - 1) return true;\n    else {\n      for (let i = this.position; i < this.production.derivation.length; i++) {\n        if (this.production.derivation[i] !== ETokenType.EPSILON) return false;\n      }\n      return true;\n    }\n  }\n\n  advance() {\n    // #if _VERBOSE\n    if (this.canReduce()) throw `Error: advance reduce-able parsing state item`;\n    // #endif\n    return new StateItem(this.production, this.position + 1, this.lookaheadSet);\n  }\n\n  // #if _VERBOSE\n  toString() {\n    const coreItem = this.production.derivation.map((item) => GrammarUtils.toString(item));\n    coreItem[this.position] = \".\" + (coreItem[this.position] ?? \"\");\n\n    return `${ENonTerminal[this.production.goal]} :=> ${coreItem.join(\"|\")} ;${Array.from(this.lookaheadSet)\n      .map((item) => GrammarUtils.toString(item))\n      .join(\"/\")}`;\n  }\n  // #endif\n}\n","import { Terminal } from \"../parser/GrammarSymbol\";\nimport Production from \"./Production\";\nimport StateItem from \"./StateItem\";\n\nexport default class State {\n  static closureMap: Map<string /** state mapKey */, State> = new Map();\n  static pool: Map<number, State> = new Map();\n  static _id = 0;\n\n  readonly id: number;\n  readonly cores: Set<StateItem>;\n  private _items: Set<StateItem>;\n  get items() {\n    return this._items;\n  }\n\n  closured = false;\n  get needReInfer() {\n    for (const core of this.cores) {\n      if (core.needReInfer) return true;\n    }\n    return false;\n  }\n\n  private _stateItemPool: Map<string /** Map ID */, StateItem> = new Map();\n\n  static create(cores: StateItem[]) {\n    const cacheKey = this.getMapKey(cores);\n    const state = this.closureMap.get(cacheKey);\n    if (state) {\n      for (const core of cores) {\n        // merge lookahead\n        state.createStateItem(core.production, core.position, core.lookaheadSet);\n      }\n      return state;\n    }\n\n    const newState = new State(cores);\n    this.closureMap.set(cacheKey, newState);\n    return newState;\n  }\n\n  // TODO: any optimization?\n  static getMapKey(cores: StateItem[]) {\n    return cores.map((item) => `${item.production.id},${item.position}`).join(\";\");\n  }\n\n  private constructor(cores: Iterable<StateItem>) {\n    this.id = State._id++;\n    this._items = new Set([...cores]);\n    this.cores = new Set([...cores]);\n    for (const it of cores) {\n      const itemMapKey = this.getStateItemMapKey(it.production, it.position);\n      this._stateItemPool.set(itemMapKey, it);\n    }\n    State.pool.set(this.id, this);\n  }\n\n  // TODO: any optimization?\n  getStateItemMapKey(production: Production, position: number) {\n    return `${production.id},${position}`;\n  }\n\n  createStateItem(production: Production, position: number, lookaheadSet: Iterable<Terminal> = new Set()) {\n    const mapId = this.getStateItemMapKey(production, position);\n    const item = this._stateItemPool.get(mapId);\n    if (item) {\n      for (const la of lookaheadSet) {\n        if (item.lookaheadSet.has(la)) continue;\n        item.lookaheadSet.add(la);\n        item.needReInfer = true;\n      }\n      return item;\n    }\n    const newItem = new StateItem(production, position, lookaheadSet);\n    this._stateItemPool.set(mapId, newItem);\n    return newItem;\n  }\n}\n","import { ENonTerminal, GrammarSymbol } from \"./parser/GrammarSymbol\";\nimport { BaseToken as Token } from \"./common/BaseToken\";\nimport { EKeyword, ETokenType, GalaceanDataType } from \"./common\";\nimport { TreeNode } from \"./parser/AST\";\n// #if _VERBOSE\nimport State from \"./lalr/State\";\n// #endif\n\nexport class ParserUtils {\n  static unwrapNodeByType<T = TreeNode>(node: TreeNode, type: ENonTerminal): T | undefined {\n    const child = node.children[0];\n    if (child instanceof Token) return;\n    if (child.nt === type) return child as T;\n    return ParserUtils.unwrapNodeByType(child, type);\n  }\n\n  // #if _VERBOSE\n  /**\n   * Check if type `tb` is compatible with type `ta`.\n   */\n  static typeCompatible(ta: GalaceanDataType, tb: GalaceanDataType | undefined) {\n    if (tb == undefined) return true;\n    if (ta === EKeyword.INT) {\n      return ta === tb || tb === EKeyword.UINT;\n    }\n    return ta === tb;\n  }\n\n  static toString(sm: GrammarSymbol) {\n    if (this.isTerminal(sm)) {\n      return ETokenType[sm] ?? EKeyword[sm];\n    }\n    return ENonTerminal[sm];\n  }\n  // #endif\n\n  static isTerminal(sm: GrammarSymbol) {\n    return sm < ENonTerminal.START;\n  }\n\n  /**\n   * @internal\n   */\n  // #if _VERBOSE\n  static printStatePool(logPath: string) {\n    let output = \"\";\n\n    console.log(\"========== Parser Pool ==========\");\n\n    let count = 0;\n    for (const state of State.pool.values()) {\n      count++;\n      let tmp = \"\";\n      tmp += `${state.id}: \\n`.padEnd(4);\n      for (const psItem of state.items) {\n        tmp += \"     \" + psItem.toString() + \"\\n\";\n      }\n      output += tmp;\n    }\n\n    console.log(\"state count:\", count);\n    console.log(output);\n  }\n  // #endif\n}\n","import { ENonTerminal } from \"./GrammarSymbol\";\nimport { BaseToken } from \"../common/BaseToken\";\nimport { GalaceanDataType, ShaderRange } from \"../common\";\nimport { ASTNode, TreeNode } from \"./AST\";\n\nexport type TraceStackItem = ENonTerminal | BaseToken;\n\nexport class SymbolType {\n  type: GalaceanDataType;\n  arraySpecifier?: ASTNode.ArraySpecifier;\n  typeLexeme: string;\n\n  constructor(type: GalaceanDataType, typeLexeme: string, arraySpecifier?: ASTNode.ArraySpecifier) {\n    this.type = type;\n    this.arraySpecifier = arraySpecifier;\n    this.typeLexeme = typeLexeme;\n  }\n}\n\nexport class StructProp implements IParamInfo {\n  typeInfo: SymbolType;\n  ident: BaseToken;\n  astNode: ASTNode.StructDeclarator;\n\n  constructor(type: SymbolType, ident: BaseToken) {\n    this.typeInfo = type;\n    this.ident = ident;\n  }\n}\n\nexport type NodeChild = TreeNode | BaseToken;\n\nexport type IParamInfo = { ident: BaseToken; typeInfo: SymbolType; astNode: TreeNode };\n","import { EKeyword, ETokenType, ShaderRange } from \"../common\";\nimport { ASTNode, TreeNode } from \"../parser/AST\";\nimport { TranslationRule } from \"../parser/SemanticAnalyzer\";\nimport { ENonTerminal, GrammarSymbol } from \"../parser/GrammarSymbol\";\nimport Production from \"./Production\";\nimport { ActionInfo, EAction } from \"./types\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { ClearableObjectPool, IPoolElement } from \"@galacean/engine\";\nimport { NodeChild } from \"../parser/types\";\n\nexport default class GrammarUtils {\n  static isTerminal(sm: GrammarSymbol) {\n    return sm < ENonTerminal.START;\n  }\n\n  static toString(sm: GrammarSymbol) {\n    if (this.isTerminal(sm)) {\n      return ETokenType[sm] ?? EKeyword[sm];\n    }\n    return ENonTerminal[sm];\n  }\n\n  static createProductionWithOptions(\n    goal: ENonTerminal,\n    options: GrammarSymbol[][],\n    /** the ast node */\n    astTypePool?: ClearableObjectPool<\n      { set: (loc: ShaderRange, children: NodeChild[]) => void } & IPoolElement & TreeNode\n    >\n  ) {\n    const ret: [GrammarSymbol[], TranslationRule | undefined][] = [];\n    for (const opt of options) {\n      ret.push([\n        [goal, ...opt],\n        function (sa, ...children) {\n          if (!children[0]) return;\n          const start = children[0].location.start;\n          const end = children[children.length - 1].location.end;\n          const location = ShaderLab.createRange(start, end);\n          ASTNode.get(astTypePool ?? ASTNode.TrivialNode.pool, sa, location, children);\n        }\n      ]);\n    }\n    return ret;\n  }\n\n  static createProductionOptions(common: GrammarSymbol[], position: number, opts: GrammarSymbol[][]) {\n    const ret: GrammarSymbol[][] = [];\n    for (const opt of opts) {\n      const list = common.slice(0, position);\n      list.push(...opt);\n      list.push(...common.slice(position));\n      ret.push(list);\n    }\n    return ret;\n  }\n\n  static addMapSetItem<K, T>(map: Map<K, Set<T>>, k: K, v: T) {\n    const set = map.get(k) ?? new Set();\n    set.add(v);\n    map.set(k, set);\n  }\n\n  static isSubSet<T>(sa: Set<T>, sb: Set<T>) {\n    for (const item of sa) {\n      if (!sb.has(item)) return false;\n    }\n    return true;\n  }\n\n  static isActionEqual(a: ActionInfo, b: ActionInfo) {\n    return a.action === b.action && a.target === b.target;\n  }\n\n  // #if _VERBOSE\n  static printAction(actionInfo: ActionInfo) {\n    return `<Action: ${EAction[actionInfo.action]} -> ${\n      actionInfo.action === EAction.Reduce ? Production.pool.get(actionInfo.target!) : `State ${actionInfo.target!}`\n    }>`;\n  }\n\n  static printProduction(production: Production) {\n    const deriv = production.derivation.map((gs) => GrammarUtils.toString(gs)).join(\"|\");\n    return `${ENonTerminal[production.goal]} :=> ${deriv}`;\n  }\n  // #endif\n}\n","// Context Free Grammar of Galacean ShaderLab\n\nimport { Grammar } from \"../parser/Grammar\";\nimport { ENonTerminal, GrammarSymbol } from \"../parser/GrammarSymbol\";\nimport GrammarUtils from \"./Utils\";\nimport { EKeyword, ETokenType } from \"../common\";\nimport SematicAnalyzer, { TranslationRule } from \"../parser/SemanticAnalyzer\";\nimport { ASTNode } from \"../parser/AST\";\n\nconst productionAndRules: [GrammarSymbol[], TranslationRule | undefined][] = [\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.gs_shader_program,\n    [[ENonTerminal.global_declaration], [ENonTerminal.gs_shader_program, ENonTerminal.global_declaration]],\n    ASTNode.GLShaderProgram.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(ENonTerminal.global_declaration, [\n    [ENonTerminal.precision_specifier],\n    [ENonTerminal.variable_declaration],\n    [ENonTerminal.struct_specifier],\n    [ENonTerminal.function_definition]\n  ]),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.variable_declaration,\n    [\n      [EKeyword.GS_RenderQueueType, ETokenType.ID, ETokenType.SEMICOLON],\n      [ENonTerminal.fully_specified_type, ETokenType.ID, ETokenType.SEMICOLON],\n      [ENonTerminal.fully_specified_type, ETokenType.ID, ENonTerminal.array_specifier, ETokenType.SEMICOLON]\n    ],\n    ASTNode.VariableDeclaration.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.ext_builtin_type_specifier_nonarray,\n    [\n      [EKeyword.VOID],\n      [EKeyword.FLOAT],\n      [EKeyword.BOOL],\n      [EKeyword.INT],\n      [EKeyword.UINT],\n      [EKeyword.VEC2],\n      [EKeyword.VEC3],\n      [EKeyword.VEC4],\n      [EKeyword.BVEC2],\n      [EKeyword.BVEC3],\n      [EKeyword.BVEC4],\n      [EKeyword.IVEC2],\n      [EKeyword.IVEC3],\n      [EKeyword.IVEC4],\n      [EKeyword.UVEC2],\n      [EKeyword.UVEC3],\n      [EKeyword.UVEC4],\n      [EKeyword.MAT2],\n      [EKeyword.MAT3],\n      [EKeyword.MAT4],\n      [EKeyword.MAT2X3],\n      [EKeyword.MAT2X4],\n      [EKeyword.MAT3X2],\n      [EKeyword.MAT3X4],\n      [EKeyword.MAT4X2],\n      [EKeyword.MAT4X3],\n      [EKeyword.SAMPLER2D],\n      [EKeyword.SAMPLER3D],\n      [EKeyword.SAMPLER_CUBE],\n      [EKeyword.SAMPLER2D_SHADOW],\n      [EKeyword.SAMPLER_CUBE_SHADOW],\n      [EKeyword.SAMPLER2D_ARRAY],\n      [EKeyword.SAMPLER2D_ARRAY_SHADOW],\n      [EKeyword.I_SAMPLER2D],\n      [EKeyword.I_SAMPLER3D],\n      [EKeyword.I_SAMPLER_CUBE],\n      [EKeyword.I_SAMPLER2D_ARRAY],\n      [EKeyword.U_SAMPLER2D],\n      [EKeyword.U_SAMPLER3D],\n      [EKeyword.U_SAMPLER_CUBE],\n      [EKeyword.U_SAMPLER2D_ARRAY]\n    ],\n    ASTNode.ExtBuiltinTypeSpecifierNonArray.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.type_specifier_nonarray,\n    [[ETokenType.ID], [ENonTerminal.ext_builtin_type_specifier_nonarray]],\n    ASTNode.TypeSpecifierNonArray.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.fully_specified_type,\n    [[ENonTerminal.type_specifier], [ENonTerminal.type_qualifier, ENonTerminal.type_specifier]],\n    ASTNode.FullySpecifiedType.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.type_specifier,\n    [\n      [ENonTerminal.type_specifier_nonarray],\n      [ENonTerminal.ext_builtin_type_specifier_nonarray, ENonTerminal.array_specifier]\n    ],\n    ASTNode.TypeSpecifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.type_qualifier,\n    [[ENonTerminal.single_type_qualifier], [ENonTerminal.type_qualifier, ENonTerminal.single_type_qualifier]],\n    ASTNode.TypeQualifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.single_type_qualifier,\n    [\n      [ENonTerminal.storage_qualifier],\n      [ENonTerminal.precision_qualifier],\n      [ENonTerminal.interpolation_qualifier],\n      [ENonTerminal.invariant_qualifier],\n      [EKeyword.PRECISE]\n    ],\n    ASTNode.SingleTypeQualifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.storage_qualifier,\n    [[EKeyword.CONST], [EKeyword.IN], [EKeyword.INOUT], [EKeyword.OUT], [EKeyword.CENTROID]],\n    // #if _VERBOSE\n    ASTNode.StorageQualifier.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.interpolation_qualifier,\n    [[EKeyword.SMOOTH], [EKeyword.FLAT]],\n    // #if _VERBOSE\n    ASTNode.InterpolationQualifier.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.invariant_qualifier,\n    [[EKeyword.INVARIANT]],\n    // #if _VERBOSE\n    ASTNode.InvariantQualifier.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.precision_qualifier,\n    [[EKeyword.HIGHP], [EKeyword.MEDIUMP], [EKeyword.LOWP]],\n    // #if _VERBOSE\n    ASTNode.PrecisionQualifier.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.struct_specifier,\n    [\n      [\n        EKeyword.STRUCT,\n        ETokenType.ID,\n        ETokenType.LEFT_BRACE,\n        ENonTerminal.struct_declaration_list,\n        ETokenType.RIGHT_BRACE,\n        ETokenType.SEMICOLON\n      ],\n      [\n        EKeyword.STRUCT,\n        ETokenType.LEFT_BRACE,\n        ENonTerminal.struct_declaration_list,\n        ETokenType.RIGHT_BRACE,\n        ETokenType.SEMICOLON\n      ]\n    ],\n    ASTNode.StructSpecifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.struct_declaration_list,\n    [[ENonTerminal.struct_declaration], [ENonTerminal.struct_declaration_list, ENonTerminal.struct_declaration]],\n    ASTNode.StructDeclarationList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.struct_declaration,\n    [\n      [ENonTerminal.type_specifier, ENonTerminal.struct_declarator_list, ETokenType.SEMICOLON],\n      [\n        ENonTerminal.type_qualifier,\n        ENonTerminal.type_specifier,\n        ENonTerminal.struct_declarator_list,\n        ETokenType.SEMICOLON\n      ]\n    ],\n    ASTNode.StructDeclaration.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.struct_declarator_list,\n    [\n      [ENonTerminal.struct_declarator],\n      [ENonTerminal.struct_declarator_list, ETokenType.COMMA, ENonTerminal.struct_declarator]\n    ],\n    ASTNode.StructDeclaratorList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.struct_declarator,\n    [[ETokenType.ID], [ETokenType.ID, ENonTerminal.array_specifier]],\n    ASTNode.StructDeclarator.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.array_specifier,\n    [\n      [ETokenType.LEFT_BRACKET, ETokenType.RIGHT_BRACKET],\n      [ETokenType.LEFT_BRACKET, ENonTerminal.integer_constant_expression, ETokenType.RIGHT_BRACKET]\n    ],\n    ASTNode.ArraySpecifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.integer_constant_expression_operator,\n    [[ETokenType.PLUS], [ETokenType.DASH], [ETokenType.STAR], [ETokenType.SLASH], [ETokenType.PERCENT]],\n    ASTNode.IntegerConstantExpressionOperator.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.integer_constant_expression,\n    [\n      [ENonTerminal.variable_identifier],\n      [ETokenType.INT_CONSTANT],\n      [\n        ENonTerminal.integer_constant_expression,\n        ENonTerminal.integer_constant_expression_operator,\n        ETokenType.INT_CONSTANT\n      ],\n      [\n        ENonTerminal.integer_constant_expression,\n        ENonTerminal.integer_constant_expression_operator,\n        ENonTerminal.variable_identifier\n      ]\n    ],\n    ASTNode.IntegerConstantExpression.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.conditional_expression,\n    [\n      [ENonTerminal.logical_or_expression],\n      [\n        ENonTerminal.logical_or_expression,\n        ETokenType.QUESTION,\n        ENonTerminal.expression,\n        ETokenType.COLON,\n        ENonTerminal.assignment_expression\n      ]\n    ],\n    // #if _VERBOSE\n    ASTNode.ConditionalExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.logical_or_expression,\n    [\n      [ENonTerminal.logical_xor_expression],\n      [ENonTerminal.logical_or_expression, ETokenType.OR_OP, ENonTerminal.logical_xor_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.LogicalOrExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.logical_xor_expression,\n    [\n      [ENonTerminal.logical_and_expression],\n      [ENonTerminal.logical_xor_expression, ETokenType.XOR_OP, ENonTerminal.logical_and_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.LogicalXorExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.logical_and_expression,\n    [\n      [ENonTerminal.inclusive_or_expression],\n      [ENonTerminal.logical_and_expression, ETokenType.AND_OP, ENonTerminal.inclusive_or_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.LogicalAndExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.inclusive_or_expression,\n    [\n      [ENonTerminal.exclusive_or_expression],\n      [ENonTerminal.inclusive_or_expression, ETokenType.VERTICAL_BAR, ENonTerminal.exclusive_or_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.InclusiveOrExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.exclusive_or_expression,\n    [\n      [ENonTerminal.and_expression],\n      [ENonTerminal.exclusive_or_expression, ETokenType.CARET, ENonTerminal.and_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.ExclusiveOrExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.and_expression,\n    [\n      [ENonTerminal.equality_expression],\n      [ENonTerminal.and_expression, ETokenType.AMPERSAND, ENonTerminal.equality_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.AndExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.equality_expression,\n    [\n      [ENonTerminal.relational_expression],\n      [ENonTerminal.equality_expression, ETokenType.EQ_OP, ENonTerminal.relational_expression],\n      [ENonTerminal.equality_expression, ETokenType.NE_OP, ENonTerminal.relational_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.EqualityExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.relational_expression,\n    [\n      [ENonTerminal.shift_expression],\n      [ENonTerminal.relational_expression, ETokenType.LEFT_ANGLE, ENonTerminal.shift_expression],\n      [ENonTerminal.relational_expression, ETokenType.RIGHT_ANGLE, ENonTerminal.shift_expression],\n      [ENonTerminal.relational_expression, ETokenType.LE_OP, ENonTerminal.shift_expression],\n      [ENonTerminal.relational_expression, ETokenType.GE_OP, ENonTerminal.shift_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.RelationalExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.shift_expression,\n    [\n      [ENonTerminal.additive_expression],\n      [ENonTerminal.shift_expression, ETokenType.LEFT_OP, ENonTerminal.additive_expression],\n      [ENonTerminal.shift_expression, ETokenType.RIGHT_OP, ENonTerminal.additive_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.ShiftExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.additive_expression,\n    [\n      [ENonTerminal.multiplicative_expression],\n      [ENonTerminal.additive_expression, ETokenType.PLUS, ENonTerminal.multiplicative_expression],\n      [ENonTerminal.additive_expression, ETokenType.DASH, ENonTerminal.multiplicative_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.AdditiveExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.multiplicative_expression,\n    [\n      [ENonTerminal.unary_expression],\n      [ENonTerminal.multiplicative_expression, ETokenType.STAR, ENonTerminal.unary_expression],\n      [ENonTerminal.multiplicative_expression, ETokenType.SLASH, ENonTerminal.unary_expression],\n      [ENonTerminal.multiplicative_expression, ETokenType.PERCENT, ENonTerminal.unary_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.MultiplicativeExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.unary_expression,\n    [\n      [ENonTerminal.postfix_expression],\n      [ETokenType.INC_OP, ENonTerminal.unary_expression],\n      [ETokenType.DEC_OP, ENonTerminal.unary_expression],\n      [ENonTerminal.unary_operator, ENonTerminal.unary_expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.UnaryExpression.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.unary_operator,\n    [[ETokenType.PLUS], [ETokenType.DASH], [ETokenType.BANG], [ETokenType.TILDE]],\n    // #if _VERBOSE\n    ASTNode.UnaryOperator.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.postfix_expression,\n    [\n      [ENonTerminal.primary_expression],\n      [ENonTerminal.postfix_expression, ETokenType.LEFT_BRACKET, ENonTerminal.expression, ETokenType.RIGHT_BRACKET],\n      [ENonTerminal.function_call],\n      [ENonTerminal.postfix_expression, ETokenType.DOT, ETokenType.ID],\n      [ENonTerminal.postfix_expression, ETokenType.DOT, ENonTerminal.function_call],\n      [ENonTerminal.postfix_expression, ETokenType.INC_OP],\n      [ENonTerminal.postfix_expression, ETokenType.DEC_OP]\n    ],\n    ASTNode.PostfixExpression.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.primary_expression,\n    [\n      [ENonTerminal.variable_identifier],\n      [ETokenType.INT_CONSTANT],\n      [ETokenType.FLOAT_CONSTANT],\n      [EKeyword.TRUE],\n      [EKeyword.FALSE],\n      [ETokenType.LEFT_PAREN, ENonTerminal.expression, ETokenType.RIGHT_PAREN]\n    ],\n    ASTNode.PrimaryExpression.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.expression,\n    [\n      [ENonTerminal.assignment_expression],\n      [ENonTerminal.expression, ETokenType.COMMA, ENonTerminal.assignment_expression]\n    ],\n    ASTNode.Expression.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.assignment_expression,\n    [\n      [ENonTerminal.conditional_expression],\n      [ENonTerminal.unary_expression, ENonTerminal.assignment_operator, ENonTerminal.assignment_expression]\n    ],\n    ASTNode.AssignmentExpression.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.assignment_operator,\n    [\n      [ETokenType.EQUAL],\n      [ETokenType.MUL_ASSIGN],\n      [ETokenType.DIV_ASSIGN],\n      [ETokenType.MOD_ASSIGN],\n      [ETokenType.ADD_ASSIGN],\n      [ETokenType.SUB_ASSIGN],\n      [ETokenType.LEFT_ASSIGN],\n      [ETokenType.RIGHT_ASSIGN],\n      [ETokenType.AND_ASSIGN],\n      [ETokenType.XOR_ASSIGN],\n      [ETokenType.OR_ASSIGN]\n    ],\n    // #if _VERBOSE\n    ASTNode.AssignmentOperator.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_call,\n    [[ENonTerminal.function_call_generic]],\n    ASTNode.FunctionCall.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_call_generic,\n    [\n      [\n        ENonTerminal.function_identifier,\n        ETokenType.LEFT_PAREN,\n        ENonTerminal.function_call_parameter_list,\n        ETokenType.RIGHT_PAREN\n      ],\n      [ENonTerminal.function_identifier, ETokenType.LEFT_PAREN, ETokenType.RIGHT_PAREN],\n      [ENonTerminal.function_identifier, EKeyword.VOID, ETokenType.RIGHT_PAREN]\n    ],\n    ASTNode.FunctionCallGeneric.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_call_parameter_list,\n    [\n      [ENonTerminal.assignment_expression],\n      [ENonTerminal.function_call_parameter_list, ETokenType.COMMA, ENonTerminal.assignment_expression]\n    ],\n    ASTNode.FunctionCallParameterList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_identifier,\n    [[ENonTerminal.type_specifier]],\n    ASTNode.FunctionIdentifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_definition,\n    [[ENonTerminal.function_prototype, ENonTerminal.compound_statement_no_scope]],\n    ASTNode.FunctionDefinition.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_prototype,\n    [[ENonTerminal.function_declarator, ETokenType.RIGHT_PAREN]],\n    ASTNode.FunctionProtoType.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_declarator,\n    [[ENonTerminal.function_header], [ENonTerminal.function_header, ENonTerminal.function_parameter_list]],\n    ASTNode.FunctionDeclarator.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_header,\n    [[ENonTerminal.fully_specified_type, ETokenType.ID, ETokenType.LEFT_PAREN]],\n    ASTNode.FunctionHeader.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.function_parameter_list,\n    [\n      [ENonTerminal.parameter_declaration],\n      [ENonTerminal.function_parameter_list, ETokenType.COMMA, ENonTerminal.parameter_declaration]\n    ],\n    ASTNode.FunctionParameterList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.parameter_declaration,\n    [[ENonTerminal.type_qualifier, ENonTerminal.parameter_declarator], [ENonTerminal.parameter_declarator]],\n    ASTNode.ParameterDeclaration.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.parameter_declarator,\n    [\n      [ENonTerminal.type_specifier, ETokenType.ID],\n      [ENonTerminal.type_specifier, ETokenType.ID, ENonTerminal.array_specifier]\n    ],\n    ASTNode.ParameterDeclarator.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.statement_list,\n    [[ENonTerminal.statement], [ENonTerminal.statement_list, ENonTerminal.statement]],\n    ASTNode.StatementList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.statement,\n    [[ENonTerminal.compound_statement], [ENonTerminal.simple_statement]],\n    // #if _VERBOSE\n    ASTNode.Statement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.compound_statement_no_scope,\n    [\n      [ETokenType.LEFT_BRACE, ETokenType.RIGHT_BRACE],\n      [ETokenType.LEFT_BRACE, ENonTerminal.statement_list, ETokenType.RIGHT_BRACE]\n    ],\n    ASTNode.CompoundStatementNoScope.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.compound_statement,\n    [\n      [ETokenType.LEFT_BRACE, ETokenType.RIGHT_BRACE],\n      [ENonTerminal.scope_brace, ENonTerminal.statement_list, ENonTerminal.scope_end_brace]\n    ],\n    // #if _VERBOSE\n    ASTNode.CompoundStatement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.simple_statement,\n    [\n      [ENonTerminal.declaration],\n      [ENonTerminal.expression_statement],\n      [ENonTerminal.selection_statement],\n      [ENonTerminal.iteration_statement],\n      [ENonTerminal.jump_statement]\n    ],\n    // #if _VERBOSE\n    ASTNode.SimpleStatement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.declaration,\n    [\n      [ENonTerminal.function_prototype, ETokenType.SEMICOLON],\n      [ENonTerminal.init_declarator_list, ETokenType.SEMICOLON],\n      [\n        EKeyword.PRECISION,\n        ENonTerminal.precision_qualifier,\n        ENonTerminal.ext_builtin_type_specifier_nonarray,\n        ETokenType.SEMICOLON\n      ],\n      [ENonTerminal.type_qualifier, ETokenType.ID, ETokenType.SEMICOLON],\n      [ENonTerminal.type_qualifier, ETokenType.ID, ENonTerminal.identifier_list, ETokenType.SEMICOLON]\n    ],\n    ASTNode.Declaration.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.identifier_list,\n    [\n      [ETokenType.COMMA, ETokenType.ID],\n      [ENonTerminal.identifier_list, ETokenType.COMMA, ETokenType.ID]\n    ],\n    ASTNode.IdentifierList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.init_declarator_list,\n    [\n      [ENonTerminal.single_declaration],\n      [ENonTerminal.init_declarator_list, ETokenType.COMMA, ETokenType.ID],\n      [ENonTerminal.init_declarator_list, ETokenType.COMMA, ETokenType.ID, ENonTerminal.array_specifier],\n      [\n        ENonTerminal.init_declarator_list,\n        ETokenType.COMMA,\n        ETokenType.ID,\n        ENonTerminal.array_specifier,\n        ETokenType.EQUAL,\n        ENonTerminal.initializer\n      ],\n      [ENonTerminal.init_declarator_list, ETokenType.COMMA, ETokenType.ID, ETokenType.EQUAL, ENonTerminal.initializer]\n    ],\n    ASTNode.InitDeclaratorList.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.single_declaration,\n    [\n      [ENonTerminal.fully_specified_type, ETokenType.ID],\n      [ENonTerminal.fully_specified_type, ETokenType.ID, ENonTerminal.array_specifier],\n      [\n        ENonTerminal.fully_specified_type,\n        ETokenType.ID,\n        ENonTerminal.array_specifier,\n        ETokenType.EQUAL,\n        ENonTerminal.initializer\n      ],\n      [ENonTerminal.fully_specified_type, ETokenType.ID, ETokenType.EQUAL, ENonTerminal.initializer]\n    ],\n    ASTNode.SingleDeclaration.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.initializer,\n    [\n      [ENonTerminal.assignment_expression],\n      [ETokenType.LEFT_BRACE, ENonTerminal.initializer_list, ETokenType.RIGHT_BRACE]\n    ],\n    // #if _VERBOSE\n    ASTNode.Initializer.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.initializer_list,\n    [[ENonTerminal.initializer], [ENonTerminal.initializer_list, ETokenType.COMMA, ENonTerminal.initializer]],\n    // #if _VERBOSE\n    ASTNode.InitializerList.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.expression_statement,\n    [[ETokenType.SEMICOLON], [ENonTerminal.expression, ETokenType.SEMICOLON]],\n    // #if _VERBOSE\n    ASTNode.ExpressionStatement.pool\n    // #endif\n  ),\n\n  // dangling else ambiguity\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.selection_statement,\n    [\n      [EKeyword.IF, ETokenType.LEFT_PAREN, ENonTerminal.expression, ETokenType.RIGHT_PAREN, ENonTerminal.statement],\n      [\n        EKeyword.IF,\n        ETokenType.LEFT_PAREN,\n        ENonTerminal.expression,\n        ETokenType.RIGHT_PAREN,\n        ENonTerminal.statement,\n        EKeyword.ELSE,\n        ENonTerminal.statement\n      ]\n    ],\n    // #if _VERBOSE\n    ASTNode.SelectionStatement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.iteration_statement,\n    [\n      [EKeyword.WHILE, ETokenType.LEFT_PAREN, ENonTerminal.condition, ETokenType.RIGHT_PAREN, ENonTerminal.statement],\n      [\n        EKeyword.FOR,\n        ETokenType.LEFT_PAREN,\n        ENonTerminal.for_init_statement,\n        ENonTerminal.for_rest_statement,\n        ETokenType.RIGHT_PAREN,\n        ENonTerminal.statement\n      ]\n    ],\n    // #if _VERBOSE\n    ASTNode.IterationStatement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.precision_specifier,\n    [\n      [\n        EKeyword.PRECISION,\n        ENonTerminal.precision_qualifier,\n        ENonTerminal.ext_builtin_type_specifier_nonarray,\n        ETokenType.SEMICOLON\n      ]\n    ],\n    ASTNode.PrecisionSpecifier.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.for_init_statement,\n    [[ENonTerminal.expression_statement], [ENonTerminal.declaration]],\n    // #if _VERBOSE\n    ASTNode.ForInitStatement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.condition,\n    [\n      [ENonTerminal.expression],\n      [ENonTerminal.fully_specified_type, ETokenType.ID, ETokenType.EQUAL, ENonTerminal.initializer]\n    ],\n    // #if _VERBOSE\n    ASTNode.Condition.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.for_rest_statement,\n    [\n      [ENonTerminal.conditionopt, ETokenType.SEMICOLON],\n      [ENonTerminal.conditionopt, ETokenType.SEMICOLON, ENonTerminal.expression]\n    ],\n    // #if _VERBOSE\n    ASTNode.ForRestStatement.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.conditionopt,\n    [[ETokenType.EPSILON], [ENonTerminal.condition]],\n    // #if _VERBOSE\n    ASTNode.ConditionOpt.pool\n    // #endif\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.jump_statement,\n    [\n      [EKeyword.CONTINUE, ETokenType.SEMICOLON],\n      [EKeyword.BREAK, ETokenType.SEMICOLON],\n      [EKeyword.RETURN, ETokenType.SEMICOLON],\n      [EKeyword.RETURN, ENonTerminal.expression, ETokenType.SEMICOLON],\n      [EKeyword.DISCARD, ETokenType.SEMICOLON]\n    ],\n    ASTNode.JumpStatement.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.scope_brace,\n    [[ETokenType.LEFT_BRACE]],\n    ASTNode.ScopeBrace.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.scope_end_brace,\n    [[ETokenType.RIGHT_BRACE]],\n    ASTNode.ScopeEndBrace.pool\n  ),\n\n  ...GrammarUtils.createProductionWithOptions(\n    ENonTerminal.variable_identifier,\n    [[ETokenType.ID]],\n    ASTNode.VariableIdentifier.pool\n  )\n];\n\nconst createGrammar = () =>\n  Grammar.create(\n    ENonTerminal.gs_shader_program,\n    productionAndRules.map((item) => item[0])\n  );\n\nconst addTranslationRule = (sa: SematicAnalyzer) => {\n  for (let i = 0; i < productionAndRules.length; i++) {\n    const rule = productionAndRules[i][1];\n    if (rule) {\n      sa.addTranslationRule(i, rule);\n    }\n  }\n};\n\nexport { createGrammar, addTranslationRule };\n","import { Grammar } from \"../parser/Grammar\";\nimport { ENonTerminal, GrammarSymbol, Terminal } from \"../parser/GrammarSymbol\";\nimport State from \"./State\";\nimport StateItem from \"./StateItem\";\nimport GrammarUtils from \"./Utils\";\nimport { EKeyword, ETokenType } from \"../common\";\nimport Utils from \"./Utils\";\nimport { ActionInfo, ActionTable, EAction, GotoTable, StateActionTable, StateGotoTable } from \"./types\";\n\n/**\n * The [LALR1](https://web.stanford.edu/class/archive/cs/cs143/cs143.1128/handouts/140%20LALR%20Parsing.pdf) Parser generator\n */\nexport class LALR1 {\n  readonly firstSetMap: Map<ENonTerminal, Set<Terminal>> = new Map();\n  readonly followSetMap: Map<ENonTerminal, Set<Terminal>> = new Map();\n\n  readonly actionTable: StateActionTable = new Map();\n  readonly gotoTable: StateGotoTable = new Map();\n  private grammar: Grammar;\n\n  /** For circle detect */\n  private _firstSetNTStack: ENonTerminal[] = [];\n\n  constructor(grammar: Grammar) {\n    this.grammar = grammar;\n  }\n\n  generate() {\n    this.computeFirstSet();\n    this.buildStateTable();\n  }\n\n  private buildStateTable() {\n    const startStateItemCore = [new StateItem(this.grammar.productions[0], 0, [ETokenType.EOF])];\n    const startState = State.create(startStateItemCore);\n    this._extendState(startState);\n  }\n\n  private _extendState(state: State) {\n    if (!state.needReInfer) return;\n    this._closure(state);\n    const newStates = this._inferNextState(state);\n    for (const ns of newStates) {\n      this._extendState(ns);\n    }\n  }\n\n  private _closure(state: State) {\n    for (const core of state.cores) {\n      if (!core.canReduce()) {\n        this._extendStateItem(state, core);\n      }\n    }\n    state.closured = true;\n    return state;\n  }\n\n  private _extendStateItem(state: State, item: StateItem) {\n    if (GrammarUtils.isTerminal(item.curSymbol)) return;\n\n    const productionList = this.grammar.getProductionList(<ENonTerminal>item.curSymbol);\n\n    if (item.nextSymbol) {\n      let newLookaheadSet = new Set<Terminal>();\n      let lastFirstSet: Set<Terminal> | undefined;\n      let terminalExist = false;\n      // when A :=> a.BC, a;  ==》 B :=> .xy, First(Ca)\n      // newLookAhead = First(Ca)\n      for (let i = 1, nextSymbol = item.symbolByOffset(1); !!nextSymbol; nextSymbol = item.symbolByOffset(++i)) {\n        if (GrammarUtils.isTerminal(nextSymbol)) {\n          newLookaheadSet.add(<Terminal>nextSymbol);\n          terminalExist = true;\n          break;\n        }\n        lastFirstSet = this.firstSetMap.get(<ENonTerminal>nextSymbol)!;\n        for (const t of lastFirstSet) {\n          newLookaheadSet.add(t);\n        }\n        if (!lastFirstSet.has(ETokenType.EPSILON)) break;\n      }\n      if (!terminalExist && lastFirstSet?.has(ETokenType.EPSILON)) {\n        for (const t of item.lookaheadSet) {\n          newLookaheadSet.add(t);\n        }\n      }\n\n      for (const production of productionList) {\n        const newItem = state.createStateItem(production, 0);\n        if (!state.items.has(newItem) || !Utils.isSubSet(newLookaheadSet, newItem.lookaheadSet)) {\n          state.items.add(newItem);\n          newItem.addLookahead(newLookaheadSet);\n          this._extendStateItem(state, newItem);\n        }\n      }\n    } else {\n      for (const production of productionList) {\n        const newItem = state.createStateItem(production, 0);\n        if (!state.items.has(newItem) || !Utils.isSubSet(item.lookaheadSet, newItem.lookaheadSet)) {\n          state.items.add(newItem);\n          newItem.addLookahead(item.lookaheadSet);\n          this._extendStateItem(state, newItem);\n        }\n      }\n    }\n  }\n\n  private _inferNextState(state: State): Set<State> {\n    const coreMap: Map<GrammarSymbol, Set<StateItem>> = new Map();\n    const stateActionTable: ActionTable = this.actionTable.get(state.id) ?? new Map();\n    const stateGotoTable: GotoTable = this.gotoTable.get(state.id) ?? new Map();\n\n    this.actionTable.set(state.id, stateActionTable);\n    this.gotoTable.set(state.id, stateGotoTable);\n\n    for (const stateItem of state.items) {\n      if (stateItem.canReduce()) {\n        let action: ActionInfo;\n        if (stateItem.production.goal !== ENonTerminal.START) {\n          action = {\n            action: EAction.Reduce,\n            target: stateItem.production.id\n          };\n        } else {\n          action = { action: EAction.Accept };\n        }\n\n        for (const t of stateItem.lookaheadSet) {\n          this._addAction(stateActionTable, t, action);\n        }\n      } else {\n        const nextItem = stateItem.advance();\n        Utils.addMapSetItem(coreMap, stateItem.curSymbol, nextItem);\n      }\n\n      stateItem.needReInfer = false;\n    }\n\n    const newStates = new Set<State>();\n    for (const [gs, cores] of coreMap.entries()) {\n      const newState = State.create(Array.from(cores));\n      if (GrammarUtils.isTerminal(gs)) {\n        this._addAction(stateActionTable, <Terminal>gs, {\n          action: EAction.Shift,\n          target: newState.id\n        });\n      } else {\n        stateGotoTable.set(<ENonTerminal>gs, newState.id);\n      }\n\n      newStates.add(newState);\n    }\n\n    return newStates;\n  }\n\n  /** Resolve shift-reduce/reduce-reduce conflict detect */\n  private _addAction(table: ActionTable, terminal: Terminal, action: ActionInfo) {\n    const exist = table.get(terminal);\n    if (exist && !Utils.isActionEqual(exist, action)) {\n      // Resolve dangling else ambiguity\n      if (terminal === EKeyword.ELSE && exist.action === EAction.Shift && action.action === EAction.Reduce) {\n        return;\n      } else {\n        // #if _VERBOSE\n        console.warn(\n          `conflict detect: <Terminal ${GrammarUtils.toString(terminal)}>`,\n          Utils.printAction(exist),\n          \" -> \",\n          Utils.printAction(action)\n        );\n        // #endif\n      }\n    }\n    table.set(terminal, action);\n  }\n\n  // https://people.cs.pitt.edu/~jmisurda/teaching/cs1622/handouts/cs1622-first_and_follow.pdf\n  private computeFirstSet() {\n    for (const production of this.grammar.productions.slice(1)) {\n      this._computeFirstSetForNT(production.goal);\n    }\n  }\n\n  private _computeFirstSetForNT(NT: ENonTerminal) {\n    // circle detect\n    const idx = this._firstSetNTStack.findIndex((item) => item === NT);\n    if (idx !== -1) {\n      const computingFS = this.firstSetMap.get(NT)!;\n      const len = this._firstSetNTStack.length;\n      for (let i = len - 1; i > idx; i--) {\n        const curNT = this._firstSetNTStack[i];\n        this.firstSetMap.set(curNT, computingFS);\n      }\n      return computingFS;\n    }\n    this._firstSetNTStack.push(NT);\n\n    const productionList = this.grammar.getProductionList(NT);\n    const firstSet = new Set<Terminal>();\n    this.firstSetMap.set(NT, firstSet);\n    if (this.grammar.isNullableNT(NT)) firstSet.add(ETokenType.EPSILON);\n\n    for (const production of productionList) {\n      let i = 0;\n      for (; i < production.derivation.length; i++) {\n        const gs = production.derivation[i];\n        if (GrammarUtils.isTerminal(gs)) {\n          firstSet.add(<Terminal>gs);\n          break;\n        }\n\n        const succeedFirstSet = this._computeFirstSetForNT(<ENonTerminal>gs);\n\n        for (const item of succeedFirstSet) {\n          if (item !== ETokenType.EPSILON) firstSet.add(item);\n        }\n        if (!this.grammar.isNullableNT(<ENonTerminal>gs)) break;\n      }\n      if (i === production.derivation.length) firstSet.add(ETokenType.EPSILON);\n    }\n\n    this._firstSetNTStack.pop();\n    return firstSet;\n  }\n}\n","import { Grammar } from \"./Grammar\";\nimport { ENonTerminal, GrammarSymbol } from \"./GrammarSymbol\";\nimport { BaseToken } from \"../common/BaseToken\";\nimport { ETokenType } from \"../common\";\nimport { EAction, StateActionTable, StateGotoTable } from \"../lalr/types\";\nimport { ASTNode, TreeNode } from \"./AST\";\nimport SematicAnalyzer from \"./SemanticAnalyzer\";\nimport { TraceStackItem } from \"./types\";\nimport { addTranslationRule, createGrammar } from \"../lalr/CFG\";\nimport { LALR1 } from \"../lalr\";\nimport { ParserUtils } from \"../ParserUtils\";\nimport { Logger } from \"@galacean/engine\";\nimport { GSError, GSErrorName } from \"../GSError\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n\n/**\n * The syntax parser and sematic analyzer of `ShaderLab` compiler\n */\nexport class ShaderTargetParser {\n  readonly actionTable: StateActionTable;\n  readonly gotoTable: StateGotoTable;\n  readonly grammar: Grammar;\n  readonly sematicAnalyzer: SematicAnalyzer;\n  private _traceBackStack: (TraceStackItem | number)[] = [];\n\n  private get curState() {\n    return this._traceBackStack[this._traceBackStack.length - 1] as number;\n  }\n  private get stateActionTable() {\n    return this.actionTable.get(this.curState)!;\n  }\n  private get stateGotoTable() {\n    return this.gotoTable.get(this.curState);\n  }\n\n  // #if _VERBOSE\n  /** @internal */\n  get errors() {\n    return this.sematicAnalyzer.errors;\n  }\n  // #endif\n\n  static _singleton: ShaderTargetParser;\n\n  static create() {\n    if (!this._singleton) {\n      const grammar = createGrammar();\n      const generator = new LALR1(grammar);\n      generator.generate();\n      this._singleton = new ShaderTargetParser(generator.actionTable, generator.gotoTable, grammar);\n      addTranslationRule(this._singleton.sematicAnalyzer);\n    }\n\n    return this._singleton;\n  }\n\n  private constructor(actionTable: StateActionTable, gotoTable: StateGotoTable, grammar: Grammar) {\n    this.actionTable = actionTable;\n    this.gotoTable = gotoTable;\n    this.grammar = grammar;\n    this.sematicAnalyzer = new SematicAnalyzer();\n  }\n\n  parse(tokens: Generator<BaseToken, BaseToken>): ASTNode.GLShaderProgram | null {\n    this.sematicAnalyzer.reset();\n    const start = performance.now();\n    const { _traceBackStack: traceBackStack, sematicAnalyzer } = this;\n    traceBackStack.push(0);\n\n    let nextToken = tokens.next();\n    let loopCount = 0;\n    while (true) {\n      loopCount += 1;\n      const token = nextToken.value;\n\n      const actionInfo = this.stateActionTable.get(token.type);\n      if (actionInfo?.action === EAction.Shift) {\n        traceBackStack.push(token, actionInfo.target!);\n        nextToken = tokens.next();\n      } else if (actionInfo?.action === EAction.Accept) {\n        Logger.info(\n          `[pass compilation - parser] Accept! State automata run ${loopCount} times! cost time ${\n            performance.now() - start\n          }ms`\n        );\n        sematicAnalyzer.acceptRule?.(sematicAnalyzer);\n        return sematicAnalyzer.semanticStack.pop() as ASTNode.GLShaderProgram;\n      } else if (actionInfo?.action === EAction.Reduce) {\n        const target = actionInfo.target!;\n        const reduceProduction = this.grammar.getProductionByID(target)!;\n        const translationRule = sematicAnalyzer.getTranslationRule(reduceProduction.id);\n\n        const values: (TreeNode | BaseToken)[] = [];\n\n        for (let i = reduceProduction.derivation.length - 1; i >= 0; i--) {\n          if (reduceProduction.derivation[i] === ETokenType.EPSILON) continue;\n          traceBackStack.pop();\n          const token = traceBackStack.pop();\n          if (token instanceof BaseToken) {\n            values.unshift(token);\n          } else {\n            const astNode = sematicAnalyzer.semanticStack.pop()!;\n            values.unshift(astNode);\n          }\n        }\n        translationRule?.(sematicAnalyzer, ...values);\n\n        const gotoTable = this.stateGotoTable;\n        traceBackStack.push(reduceProduction.goal);\n\n        const nextState = gotoTable?.get(reduceProduction.goal)!;\n        traceBackStack.push(nextState);\n        continue;\n      } else {\n        const error = ShaderLabUtils.createGSError(\n          `Unexpected token ${token.lexeme}`,\n          GSErrorName.CompilationError,\n          ShaderLab._processingPassText,\n          token.location\n        );\n        // #if _VERBOSE\n        this.sematicAnalyzer.errors.push(<GSError>error);\n        // #endif\n        return null;\n      }\n    }\n  }\n\n  // #if _VERBOSE\n  private _printStack(nextToken: BaseToken) {\n    let str = \"\";\n    for (let i = 0; i < this._traceBackStack.length - 1; i++) {\n      const state = <ENonTerminal>this._traceBackStack[i++];\n      const token = this._traceBackStack[i];\n      str += `State${state} - ${(<BaseToken>token).lexeme ?? ParserUtils.toString(token as GrammarSymbol)}; `;\n    }\n    str += `State${this._traceBackStack[this._traceBackStack.length - 1]} --- ${nextToken.lexeme}`;\n    Logger.info(str);\n  }\n  // #endif\n}\n","function _type_of(obj) {\n    \"@swc/helpers - typeof\";\n\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nexport { _type_of as _ };\n","import { BaseToken } from \"../common/BaseToken\";\nimport { ShaderRange } from \"../common\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n// #if _VERBOSE\nimport { GSErrorName } from \"../GSError\";\n// #endif\n\nexport class MacroDefine {\n  private _replaceRegex?: RegExp;\n  private readonly _argsLexemes: string[];\n\n  get isFunction(): boolean {\n    return !!this.args?.length;\n  }\n\n  constructor(\n    public readonly macro: BaseToken,\n    public readonly body?: BaseToken,\n    public readonly location?: ShaderRange,\n    public readonly args?: BaseToken[]\n  ) {\n    if (args) {\n      this._argsLexemes = this.args.map((item) => item.lexeme);\n      this._replaceRegex = new RegExp(`\\\\b(${this._argsLexemes.join(\"|\")})\\\\b`, \"g\");\n    }\n  }\n\n  expandFunctionBody(args: string[]): string {\n    if (args.length !== this.args?.length) {\n      throw ShaderLabUtils.createGSError(\"mismatched function macro\", GSErrorName.PreprocessorError, \"\", this.location);\n    }\n\n    return this.body.lexeme.replace(this._replaceRegex, (m) => {\n      return args[this._argsLexemes.indexOf(m)];\n    });\n  }\n}\n","import { ShaderRange } from \"../../common/ShaderRange\";\n\n// #if _VERBOSE\nexport class BlockInfo {\n  readonly sourceFile: string;\n  readonly rangeInFile?: ShaderRange;\n  readonly sourceMap?: PpSourceMap;\n\n  constructor(sourceFile?: string, rangeInFile?: ShaderRange, sourceMap?: PpSourceMap) {\n    this.sourceFile = sourceFile ?? \"__main__\";\n    this.rangeInFile = rangeInFile;\n    this.sourceMap = sourceMap;\n  }\n}\n\nexport class MapRange {\n  sourceLoc: { block: BlockInfo; rangeInBlock: ShaderRange };\n  generatedLoc: { start: number; end: number };\n\n  constructor(sourceBlock: BlockInfo, rangeInBlock: ShaderRange, generatedLoc: { start: number; end: number }) {\n    this.sourceLoc = { block: sourceBlock, rangeInBlock };\n    this.generatedLoc = generatedLoc;\n  }\n\n  getSourceIndex(generatedIdx: number) {\n    const { block, rangeInBlock } = this.sourceLoc;\n    if (block.sourceMap) {\n      if (block.sourceFile !== \"__main__\") return block.sourceMap.map(generatedIdx - this.generatedLoc.start);\n      else if (rangeInBlock) {\n        return {\n          sourceFile: block.sourceFile,\n          index: (block.rangeInFile?.start.index ?? 0) + rangeInBlock.start.index\n        };\n      }\n    }\n\n    return {\n      index: generatedIdx - this.generatedLoc.start + rangeInBlock.start.index + (block.rangeInFile?.start.index ?? 0),\n      sourceFile: this.sourceLoc.block.sourceFile\n    };\n  }\n}\n\nexport default class PpSourceMap {\n  readonly mapRanges: MapRange[] = [];\n\n  static rangeContains(range: MapRange[\"generatedLoc\"], index: number) {\n    return range.start <= index && range.end > index;\n  }\n\n  addMapRange(mapRange: MapRange) {\n    this.mapRanges.push(mapRange);\n  }\n\n  /**\n   * @returns index\n   */\n  map(index: number): { sourceFile: string; index: number } {\n    let curRange: MapRange | undefined;\n    for (const range of this.mapRanges) {\n      const { generatedLoc } = range;\n      if (PpSourceMap.rangeContains(generatedLoc, index)) {\n        return range.getSourceIndex(index);\n      } else if (range.generatedLoc.start < index) {\n        curRange = range;\n        continue;\n      } else {\n        break;\n      }\n    }\n    if (!curRange) return { sourceFile: \"__main__\", index };\n    return {\n      index: index - curRange.generatedLoc.end + curRange.sourceLoc.rangeInBlock.end.index,\n      sourceFile: curRange.sourceLoc.block.sourceFile\n    };\n  }\n}\n// #endif\n","import { ShaderRange } from \"../common\";\nimport { ExpandSegment } from \"./PpParser\";\n// #if _VERBOSE\nimport PpSourceMap, { MapRange } from \"./sourceMap\";\n// #endif\n\nexport class PpUtils {\n  static expand(\n    segments: ExpandSegment[],\n    source: string,\n    // #if _VERBOSE\n    sourceMap?: PpSourceMap\n    //#endif\n  ) {\n    const ret: string[] = [];\n    let startIdx = 0;\n    let generatedIdx = 0;\n\n    for (const seg of segments) {\n      const originSlice = source.slice(startIdx, seg.rangeInBlock.start.index);\n      ret.push(originSlice, seg.replace);\n\n      const generatedIdxEnd = generatedIdx + originSlice.length + seg.replace.length;\n\n      // #if _VERBOSE\n      const mapRange = new MapRange(seg.block, seg.rangeInBlock, {\n        start: generatedIdx + originSlice.length,\n        end: generatedIdxEnd\n      });\n      sourceMap?.addMapRange(mapRange);\n      // #endif\n\n      startIdx = seg.rangeInBlock.end.index;\n      generatedIdx = generatedIdxEnd;\n    }\n    ret.push(source.slice(startIdx));\n    return ret.join(\"\");\n  }\n\n  static assembleSegments(\n    segments: {\n      range: ShaderRange;\n      replace: string;\n    }[],\n    source: string\n  ) {\n    const ret: string[] = [];\n    let startIdx = 0;\n    for (const seg of segments) {\n      const originSlice = source.slice(startIdx, seg.range.start.index);\n      ret.push(originSlice, seg.replace);\n      startIdx = seg.range.end.index;\n    }\n    ret.push(source.slice(startIdx));\n    return ret.join(\"\");\n  }\n}\n","import { ShaderRange, ShaderPosition } from \"../common\";\nimport LexerUtils from \"../lexer/Utils\";\n// #if _VERBOSE\nimport PpSourceMap from \"./sourceMap\";\n// #endif\nimport BaseScanner from \"../common/BaseScanner\";\nimport { BaseToken, EOF } from \"../common/BaseToken\";\nimport { EPpKeyword, EPpToken, PpKeyword } from \"./constants\";\nimport { PpUtils } from \"./Utils\";\nimport { ShaderLab } from \"../ShaderLab\";\n\nexport type OnToken = (token: BaseToken, scanner: PpScanner) => void;\n\nexport default class PpScanner extends BaseScanner {\n  private static _splitCharacters = /[\\w#.]/;\n\n  private macroLvl = 0;\n\n  // #if _VERBOSE\n  readonly sourceMap = new PpSourceMap();\n  readonly file: string;\n  readonly blockRange?: ShaderRange;\n  // #endif\n\n  constructor(\n    source: string,\n    // #if _VERBOSE\n    file = \"__main__\",\n    blockRange?: ShaderRange\n    // #endif\n  ) {\n    super(source);\n    // #if _VERBOSE\n    this.file = file;\n    this.blockRange = blockRange;\n    // #endif\n  }\n\n  /**\n   * Advance to directive\n   * @param expandOnToken callback on encountering token.\n   */\n  scanDirective(expandOnToken?: OnToken): BaseToken<number> {\n    const directive = this._advanceToDirective(expandOnToken);\n    if ([EPpKeyword.if, EPpKeyword.ifdef, EPpKeyword.ifndef].includes(<any>directive?.type)) {\n      this.macroLvl += 1;\n    } else if (<any>directive?.type === EPpKeyword.endif) {\n      this.macroLvl -= 1;\n    }\n    return directive;\n  }\n\n  /**\n   * @param nonLetterChar should not be space\n   */\n  scanWordsUntilChar(nonLetterChar: string): BaseToken[] {\n    const ret: BaseToken[] = [];\n    while (true) {\n      this.skipSpace(true);\n      if (LexerUtils.isLetter(this.getCurChar())) {\n        ret.push(this.scanWord());\n      } else if (this.getCurChar() === nonLetterChar) {\n        this.advance();\n        return ret;\n      } else {\n        this.advance();\n      }\n    }\n  }\n\n  scanWord(skipNonLetter = false): BaseToken {\n    if (skipNonLetter) {\n      while (!LexerUtils.isLetter(this.getCurChar()) && !this.isEnd()) {\n        this.advance();\n      }\n    } else {\n      this.skipSpace(true);\n    }\n\n    if (this.isEnd()) return EOF;\n\n    const start = this._currentIndex;\n    while (LexerUtils.isLetter(this.getCurChar()) && !this.isEnd()) {\n      this.advance();\n    }\n    const end = this._currentIndex;\n    const word = this._source.slice(start, end);\n    if (end === start) {\n      this.throwError(this.getShaderPosition(), \"no word found.\");\n    }\n    const kw = PpKeyword.get(word);\n    if (kw) {\n      const token = BaseToken.pool.get();\n      token.set(kw, word, this.getShaderPosition());\n      return token;\n    }\n\n    const token = BaseToken.pool.get();\n    token.set(EPpToken.id, word, this.getShaderPosition(word.length));\n    return token;\n  }\n\n  getShaderPosition(offset /** offset from starting point */ = 0) {\n    return ShaderLab.createPosition(\n      this._currentIndex - offset,\n      // #if _VERBOSE\n      this.line,\n      this.column - offset\n      // #endif\n    );\n  }\n\n  /**\n   * @param onToken callback when encounter a token\n   * @returns token split by space\n   */\n  override scanToken(onToken?: OnToken): BaseToken | undefined {\n    this.skipSpace(true);\n    this._skipComments();\n    if (this.isEnd()) {\n      return;\n    }\n    const start = this._currentIndex;\n    while (PpScanner._splitCharacters.test(this.getCurChar()) && !this.isEnd()) {\n      this._advance();\n    }\n\n    // Not advance\n    if (start === this._currentIndex) {\n      this._advance();\n      return this.scanToken(onToken);\n    }\n\n    const lexeme = this._source.slice(start, this._currentIndex);\n\n    const ret = BaseToken.pool.get();\n    ret.set(\n      PpKeyword.has(lexeme) ? PpKeyword.get(lexeme) : EPpToken.id,\n      lexeme,\n      this.getShaderPosition(this._currentIndex - start)\n    );\n    onToken?.(ret, this);\n    return ret;\n  }\n\n  scanQuotedString(): BaseToken<EPpToken.string_const> {\n    this.skipSpace(true);\n    if (this.getCurChar() !== '\"') {\n      this.throwError(this.getShaderPosition(), \"unexpected char, expected '\\\"'\");\n    }\n    const ShaderPosition = this.getShaderPosition();\n    this._advance();\n    const start = this._currentIndex;\n    while (this.getCurChar() !== '\"' && !this.isEnd()) this._advance();\n    if (this.isEnd()) {\n      this.throwError(this.getShaderPosition(), \"unexpected char, expected '\\\"'\");\n    }\n    const word = this._source.slice(start, this._currentIndex);\n\n    const token = BaseToken.pool.get();\n    token.set(EPpToken.string_const, word, ShaderPosition);\n    return token;\n  }\n\n  scanToChar(char: string) {\n    const source = this._source;\n    while (source[this._currentIndex] !== char && !this.isEnd()) {\n      this.advance();\n    }\n  }\n\n  scanMacroBranchChunk(): {\n    token: BaseToken<EPpToken.chunk>;\n    nextDirective: BaseToken;\n  } {\n    const start = this._currentIndex;\n    const ShaderPosition = this.getShaderPosition();\n\n    const startLvl = this.macroLvl;\n    let directive = this.scanDirective()!;\n\n    while (true) {\n      if (directive.type === EPpKeyword.endif && startLvl - 1 === this.macroLvl) break;\n      else if ([EPpKeyword.elif, EPpKeyword.else].includes(<EPpKeyword>directive.type) && startLvl === this.macroLvl)\n        break;\n      directive = this.scanDirective()!;\n    }\n\n    const chunk = this._source.slice(start, this._currentIndex - directive.lexeme.length - 1);\n    const token = BaseToken.pool.get();\n    token.set(EPpToken.chunk, chunk, ShaderPosition);\n    return { token, nextDirective: directive };\n  }\n\n  scanPairedBlock(lc: string, rc: string): void {\n    this.scanToChar(lc);\n    let level = 0;\n    const source = this._source;\n\n    do {\n      const curChar = source[this._currentIndex];\n\n      if (curChar === lc) {\n        level++;\n      } else if (curChar === rc) {\n        level--;\n      }\n      this._advance();\n    } while (level > 0);\n  }\n\n  /**\n   * @returns end ShaderPosition\n   */\n  scanRemainMacro(): ShaderPosition {\n    const startLvl = this.macroLvl;\n    let directive = this.scanDirective()!;\n    while (!this.isEnd() && (directive.type !== EPpKeyword.endif || startLvl - 1 !== this.macroLvl)) {\n      directive = this.scanDirective()!;\n    }\n    return this.getShaderPosition();\n  }\n\n  peekNonSpace() {\n    let current = this._currentIndex;\n    while (/\\s/.test(this._source[current])) {\n      current += 1;\n    }\n    return this._source[current];\n  }\n\n  scanInteger() {\n    const start = this._currentIndex;\n    while (LexerUtils.isNum(this.getCurChar())) {\n      this.advance();\n    }\n    if (this._currentIndex === start) {\n      this.throwError(this.getShaderPosition(), \"no integer found\");\n    }\n    const integer = this._source.slice(start, this._currentIndex);\n\n    const token = BaseToken.pool.get();\n    token.set(EPpToken.int_constant, integer, this.getShaderPosition());\n    return token;\n  }\n\n  /**\n   * Skip comments\n   */\n  scanLineRemain() {\n    this.skipSpace(false);\n    const start = this._currentIndex;\n\n    const comments: ShaderRange[] = [];\n\n    while (this.getCurChar() !== \"\\n\") {\n      if (this.isEnd()) {\n        const line = this._source.slice(start, this._currentIndex);\n\n        const token = BaseToken.pool.get();\n        token.set(EPpToken.line_remain, line, this.getShaderPosition(line.length));\n        return token;\n      }\n      this.advance();\n      const commentRange = this._skipComments();\n      if (commentRange) {\n        commentRange.start.index -= start;\n        commentRange.end.index -= start;\n        comments.push(commentRange);\n      }\n    }\n    let line = this._source.slice(start, this._currentIndex);\n    if (comments.length) {\n      // filter comments\n      line = PpUtils.assembleSegments(\n        comments.map((item) => ({ range: item, replace: \"\" })),\n        line\n      );\n    }\n\n    const token = BaseToken.pool.get();\n    token.set(EPpToken.line_remain, line, this.getShaderPosition(line.length));\n    return token;\n  }\n\n  private _advanceToDirective(onToken?: OnToken): BaseToken | undefined {\n    while (true) {\n      const token = this.scanToken(onToken);\n      if (token?.lexeme.startsWith(\"#\")) return token;\n      if (this.isEnd()) return;\n    }\n  }\n\n  private _skipComments(): ShaderRange | undefined {\n    if (this.peek(2) === \"//\") {\n      const start = this.getShaderPosition();\n      // single line comments\n      while (this.getCurChar() !== \"\\n\" && !this.isEnd()) {\n        this._advance();\n      }\n      return ShaderLab.createRange(start, this.getCurPosition());\n    } else if (this.peek(2) === \"/*\") {\n      const start = this.getShaderPosition();\n      //  multi-line comments\n      this.advance(2);\n      while (this.peek(2) !== \"*/\" && !this.isEnd()) {\n        this._advance();\n      }\n      this.advance(2);\n      return ShaderLab.createRange(start, this.getShaderPosition());\n    }\n  }\n}\n","import { ShaderPosition, ShaderRange } from \"../common\";\nimport LexerUtils from \"../lexer/Utils\";\nimport { MacroDefine } from \"./MacroDefine\";\nimport { BaseToken } from \"../common/BaseToken\";\nimport { EPpKeyword, EPpToken, PpConstant } from \"./constants\";\nimport PpScanner from \"./PpScanner\";\nimport { PpUtils } from \"./Utils\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { ShaderPass } from \"@galacean/engine\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\nimport { GSErrorName } from \"../GSError\";\n// #if _VERBOSE\nimport PpSourceMap, { BlockInfo } from \"./sourceMap\";\n// #endif\n\nexport interface ExpandSegment {\n  // #if _VERBOSE\n  block?: BlockInfo;\n  // #endif\n  rangeInBlock: ShaderRange;\n  replace: string;\n}\n\n/** @internal */\nexport class PpParser {\n  private static _definedMacros: Map<string, MacroDefine> = new Map();\n  private static _expandSegmentsStack: ExpandSegment[][] = [[]];\n\n  /** Referenced by branch macro or defined operator */\n  private static _branchMacros: Set<string> = new Set();\n\n  private static _includeMap: Record<string, string>;\n  private static _basePathForIncludeKey: string;\n\n  // #if _VERBOSE\n  static _errors: Error[] = [];\n  // #endif\n\n  static reset(includeMap: Record<string, string>, basePathForIncludeKey: string) {\n    this._definedMacros.clear();\n    this._expandSegmentsStack.length = 0;\n    this._expandSegmentsStack.push([]);\n    this._branchMacros.clear();\n    this.addPredefinedMacro(\"GL_ES\");\n    this._includeMap = includeMap;\n    this._basePathForIncludeKey = basePathForIncludeKey;\n    // #if _VERBOSE\n    this._errors.length = 0;\n    // #endif\n  }\n\n  static addPredefinedMacro(macro: string, value?: string) {\n    const tk = BaseToken.pool.get();\n    tk.set(EPpToken.id, macro);\n\n    let macroBody: BaseToken | undefined;\n    if (value) {\n      macroBody = BaseToken.pool.get();\n      macroBody.set(EPpToken.id, value);\n    }\n\n    this._definedMacros.set(macro, new MacroDefine(tk, macroBody));\n  }\n\n  static parse(scanner: PpScanner): string | null {\n    while (!scanner.isEnd()) {\n      const directive = scanner.scanDirective(this._onToken.bind(this))!;\n      if (scanner.isEnd()) break;\n      switch (directive.type) {\n        case EPpKeyword.define:\n          this._parseDefine(scanner);\n          break;\n\n        case EPpKeyword.undef:\n          this._parseUndef(scanner);\n          break;\n\n        case EPpKeyword.if:\n          this._parseIf(scanner);\n          break;\n\n        case EPpKeyword.ifndef:\n          this._parseIfNdef(scanner);\n          break;\n\n        case EPpKeyword.ifdef:\n          this._parseIfDef(scanner);\n          break;\n\n        case EPpKeyword.include:\n          this._parseInclude(scanner);\n          break;\n      }\n    }\n    // #if _VERBOSE\n    if (this._errors.length > 0) return null;\n    // #endif\n\n    return PpUtils.expand(this.expandSegments, scanner.source, scanner.sourceMap);\n  }\n\n  private static get expandSegments() {\n    return this._expandSegmentsStack[this._expandSegmentsStack.length - 1];\n  }\n\n  private static reportError(loc: ShaderRange | ShaderPosition, message: string, source: string, file: string) {\n    const error = ShaderLabUtils.createGSError(message, GSErrorName.PreprocessorError, source, loc, file);\n    // #if _VERBOSE\n    this._errors.push(error);\n    // #endif\n  }\n\n  private static _parseInclude(scanner: PpScanner) {\n    const start = scanner.getShaderPosition(8);\n\n    scanner.skipSpace(true);\n    const id = scanner.scanQuotedString();\n    let includedPath: string;\n    // builtin path\n    if (id.lexeme[0] !== \".\") {\n      includedPath = id.lexeme;\n    } else {\n      // relative path\n      // @ts-ignore\n      includedPath = new URL(id.lexeme, this._basePathForIncludeKey).href.substring(ShaderPass._shaderRootPath.length);\n    }\n\n    scanner.scanToChar(\"\\n\");\n    const end = scanner.getShaderPosition();\n    const chunk = this._includeMap[includedPath];\n    if (!chunk) {\n      this.reportError(id.location, `Shader slice \"${includedPath}\" not founded.`, scanner.source, scanner.file);\n      return;\n    }\n\n    const range = ShaderLab.createRange(start, end);\n    const expanded = this._expandMacroChunk(chunk, range, id.lexeme);\n    // #if _VERBOSE\n    const block = new BlockInfo(id.lexeme, undefined, expanded.sourceMap);\n    // #endif\n    this.expandSegments.push({\n      // #if _VERBOSE\n      block,\n      // #endif\n      rangeInBlock: range,\n      replace: expanded.content\n    });\n  }\n\n  private static _parseIfDef(scanner: PpScanner) {\n    const start = scanner.current - 6;\n\n    const id = scanner.scanWord();\n    this._addEmptyReplace(scanner, start);\n    this._branchMacros.add(id.lexeme);\n\n    const macro = this._definedMacros.get(id.lexeme);\n    scanner.skipSpace(true);\n\n    const { token: bodyChunk, nextDirective } = scanner.scanMacroBranchChunk();\n    if (!!macro) {\n      const end = nextDirective.type === EPpKeyword.endif ? scanner.getShaderPosition() : scanner.scanRemainMacro();\n\n      const expanded = this._expandMacroChunk(bodyChunk.lexeme, bodyChunk.location, scanner);\n\n      // #if _VERBOSE\n      const block = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n      // #endif\n      const range = ShaderLab.createRange(bodyChunk.location.start, end);\n\n      this.expandSegments.push({\n        // #if _VERBOSE\n        block,\n        // #endif\n        rangeInBlock: range,\n        replace: expanded.content\n      });\n\n      return;\n    }\n\n    this.expandSegments.pop();\n    this._addEmptyReplace(scanner, start);\n\n    this._parseMacroBranch(<any>nextDirective.type, scanner);\n  }\n\n  private static _parseMacroBranch(\n    directive: EPpKeyword.elif | EPpKeyword.else | EPpKeyword.endif,\n    scanner: PpScanner\n  ) {\n    if (directive === EPpKeyword.endif) {\n      return;\n    }\n\n    const start = scanner.current;\n\n    if (directive === EPpKeyword.else) {\n      const { token: elseChunk } = scanner.scanMacroBranchChunk();\n      const expanded = this._expandMacroChunk(elseChunk.lexeme, elseChunk.location, scanner);\n      // #if _VERBOSE\n      const block = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n      // #endif\n      const startPosition = ShaderLab.createPosition(start);\n      const range = ShaderLab.createRange(startPosition, scanner.getShaderPosition());\n      this.expandSegments.push({\n        // #if _VERBOSE\n        block,\n        // #endif\n        rangeInBlock: range,\n        replace: expanded.content\n      });\n    } else if (directive === EPpKeyword.elif) {\n      const constantExpr = this._parseConstantExpression(scanner);\n      const { token: bodyChunk, nextDirective } = scanner.scanMacroBranchChunk();\n      if (!!constantExpr) {\n        const end = nextDirective.type === EPpKeyword.endif ? scanner.current : scanner.scanRemainMacro().index;\n        const expanded = this._expandMacroChunk(bodyChunk.lexeme, bodyChunk.location, scanner);\n        // #if _VERBOSE\n        const block = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n        // #endif\n        const startPosition = ShaderLab.createPosition(start);\n        const endPosition = ShaderLab.createPosition(end);\n        const range = ShaderLab.createRange(startPosition, endPosition);\n        this.expandSegments.push({\n          // #if _VERBOSE\n          block,\n          // #endif\n          rangeInBlock: range,\n          replace: expanded.content\n        });\n      } else {\n        // #if _VERBOSE\n        const block = new BlockInfo(scanner.file, scanner.blockRange);\n        // #endif\n        const startPosition = ShaderLab.createPosition(start);\n        const endPosition = ShaderLab.createPosition(scanner.current);\n        const range = ShaderLab.createRange(startPosition, endPosition);\n        this.expandSegments.push({\n          // #if _VERBOSE\n          block,\n          // #endif\n          rangeInBlock: range,\n          replace: \"\"\n        });\n        this._parseMacroBranch(<any>nextDirective.type, scanner);\n      }\n    }\n  }\n\n  private static _parseConstantExpression(scanner: PpScanner) {\n    scanner.skipSpace(true);\n    return this._parseLogicalOrExpression(scanner);\n  }\n\n  private static _parseLogicalOrExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseLogicalAndExpression(scanner);\n    const operator = scanner.peek(2);\n    if (operator && operator === \"||\") {\n      scanner.advance(2);\n      scanner.skipSpace(false);\n      const operand2 = this._parseLogicalOrExpression(scanner);\n      return operand1 || operand2;\n    }\n    return operand1;\n  }\n\n  private static _parseLogicalAndExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseEqualityExpression(scanner);\n    const operator = scanner.peek(2);\n    if (operator && operator === \"&&\") {\n      scanner.advance(2);\n      scanner.skipSpace(false);\n      const operand2 = this._parseLogicalAndExpression(scanner);\n      return operand1 && operand2;\n    }\n    return operand1;\n  }\n\n  private static _parseEqualityExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseRelationalExpression(scanner);\n    const operator = scanner.peek(2);\n    if (operator && [\"==\", \"!=\"].includes(operator)) {\n      scanner.advance(2);\n      scanner.skipSpace(false);\n      const operand2 = this._parseEqualityExpression(scanner);\n      switch (operator) {\n        case \"==\":\n          return operand1 === operand2;\n        case \"!=\":\n          return operand1 !== operand2;\n      }\n    }\n    return operand1;\n  }\n\n  private static _parseRelationalExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseShiftExpression(scanner) as number;\n    let operator = scanner.peek(2);\n    if (operator[1] !== \"=\") operator = operator[0];\n    if (operator && [\">\", \"<\", \">=\", \"<=\"].includes(operator)) {\n      const opPos = scanner.getShaderPosition();\n      scanner.advance(operator.length);\n      scanner.skipSpace(false);\n      const operand2 = this._parseRelationalExpression(scanner) as number;\n      if (typeof operand1 !== typeof operand2 && typeof operand1 !== \"number\") {\n        this.reportError(opPos, \"invalid operator in relation expression.\", scanner.source, scanner.file);\n        return;\n      }\n      switch (operator) {\n        case \">\":\n          return operand1 > operand2;\n        case \"<\":\n          return operand1 < operand2;\n        case \">=\":\n          return operand1 >= operand2;\n        case \"<=\":\n          return operand1 <= operand2;\n      }\n    }\n    return operand1;\n  }\n\n  private static _parseShiftExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseAdditiveExpression(scanner) as number;\n    const operator = scanner.peek(2);\n    if (operator && [\">>\", \"<<\"].includes(operator)) {\n      const opPos = scanner.getShaderPosition();\n      scanner.advance(2);\n      scanner.skipSpace(false);\n      const operand2 = this._parseShiftExpression(scanner) as number;\n      if (typeof operand1 !== typeof operand2 && typeof operand1 !== \"number\") {\n        this.reportError(opPos, \"invalid operator in shift expression.\", scanner.source, scanner.file);\n        return;\n      }\n      switch (operator) {\n        case \">>\":\n          return operand1 >> operand2;\n        case \"<<\":\n          return operand1 << operand2;\n      }\n    }\n\n    return operand1;\n  }\n\n  private static _parseAdditiveExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseMulticativeExpression(scanner) as number;\n    if ([\">\", \"<\"].includes(scanner.getCurChar())) {\n      const opPos = scanner.getShaderPosition();\n      scanner.advance();\n\n      const operator = scanner.getCurChar();\n      scanner.skipSpace(false);\n      const operand2 = this._parseAdditiveExpression(scanner) as number;\n      if (typeof operand1 !== typeof operand2 && typeof operand1 !== \"number\") {\n        this.reportError(opPos, \"invalid operator.\", scanner.source, scanner.file);\n        return false;\n      }\n      switch (operator) {\n        case \"+\":\n          return operand1 + operand2;\n        case \"-\":\n          return operand1 - operand2;\n      }\n    }\n    return operand1;\n  }\n\n  private static _parseMulticativeExpression(scanner: PpScanner): PpConstant {\n    const operand1 = this._parseUnaryExpression(scanner) as number;\n    scanner.skipSpace(false);\n    if ([\"*\", \"/\", \"%\"].includes(scanner.getCurChar())) {\n      const opPos = scanner.getShaderPosition();\n      const operator = scanner.getCurChar();\n      scanner.skipSpace(false);\n      const operand2 = this._parseMulticativeExpression(scanner) as number;\n      if (typeof operand1 !== typeof operand2 && typeof operand1 !== \"number\") {\n        this.reportError(opPos, \"invalid operator.\", scanner.source, scanner.file);\n        return;\n      }\n      switch (operator) {\n        case \"*\":\n          return operand1 * operand2;\n        case \"/\":\n          return operand1 / operand2;\n        case \"%\":\n          return operand1 % operand2;\n      }\n    }\n    return operand1;\n  }\n\n  private static _parseUnaryExpression(scanner: PpScanner) {\n    const operator = scanner.getCurChar();\n    if ([\"+\", \"-\", \"!\"].includes(operator)) {\n      scanner.advance();\n      const opPos = scanner.getShaderPosition();\n      const parenExpr = this._parseParenthesisExpression(scanner);\n      if ((operator === \"!\" && typeof parenExpr !== \"boolean\") || (operator !== \"!\" && typeof parenExpr !== \"number\")) {\n        this.reportError(opPos, \"invalid operator.\", scanner.source, scanner.file);\n      }\n\n      switch (operator) {\n        case \"+\":\n          return parenExpr;\n        case \"-\":\n          return -parenExpr;\n        case \"!\":\n          return !parenExpr;\n      }\n    }\n    return this._parseParenthesisExpression(scanner);\n  }\n\n  private static _parseParenthesisExpression(scanner: PpScanner): PpConstant {\n    if (scanner.getCurChar() === \"(\") {\n      scanner.advance();\n      scanner.skipSpace(false);\n      const ret = this._parseConstantExpression(scanner);\n      scanner.scanToChar(\")\");\n      scanner.advance();\n      return ret;\n    }\n    return this._parseConstant(scanner);\n  }\n\n  private static _parseConstant(scanner: PpScanner): PpConstant {\n    if (LexerUtils.isAlpha(scanner.getCurChar())) {\n      const id = scanner.scanWord();\n      if (id.type === EPpKeyword.defined) {\n        const withParen = scanner.peekNonSpace() === \"(\";\n        const macro = scanner.scanWord(true);\n        if (withParen) {\n          scanner.scanToChar(\")\");\n          scanner.advance();\n        }\n        this._branchMacros.add(macro.lexeme);\n        return !!this._definedMacros.get(macro.lexeme);\n      } else {\n        const macro = this._definedMacros.get(id.lexeme);\n        if (!macro) {\n          return false;\n        }\n        if (macro.isFunction) {\n          this.reportError(id.location, \"invalid function macro usage\", scanner.source, scanner.file);\n        }\n        const value = Number(macro.body.lexeme);\n        if (!Number.isInteger(value)) {\n          this.reportError(id.location, `invalid const macro: ${id.lexeme}`, scanner.source, scanner.file);\n        }\n        this._branchMacros.add(id.lexeme);\n        return value;\n      }\n    } else if (LexerUtils.isNum(scanner.getCurChar())) {\n      const integer = scanner.scanInteger();\n      return Number(integer.lexeme);\n    } else {\n      this.reportError(\n        scanner.getShaderPosition(),\n        `invalid token: ${scanner.getCurChar()}`,\n        scanner.source,\n        scanner.file\n      );\n    }\n  }\n\n  /**\n   * Recursively expand macro body and expansion.\n   */\n  private static _expandMacroChunk(\n    chunk: string,\n    loc: ShaderRange,\n    parentScanner: PpScanner\n  ): {\n    content: string;\n    // #if _VERBOSE\n    sourceMap: PpSourceMap;\n    // #endif\n  };\n  private static _expandMacroChunk(\n    chunk: string,\n    loc: ShaderRange,\n    file: string\n  ): {\n    content: string;\n    // #if _VERBOSE\n    sourceMap: PpSourceMap;\n    // #endif\n  };\n  private static _expandMacroChunk(\n    chunk: string,\n    loc: ShaderRange,\n    scannerOrFile: PpScanner | string\n  ): {\n    content: string;\n    // #if _VERBOSE\n    sourceMap: PpSourceMap;\n    // #endif\n  } {\n    this._expandSegmentsStack.push([]);\n    let scanner: PpScanner;\n    if (typeof scannerOrFile === \"string\") {\n      scanner = new PpScanner(chunk, scannerOrFile);\n    } else {\n      scanner = new PpScanner(chunk, scannerOrFile.file, loc);\n    }\n    const ret = this.parse(scanner);\n    this._expandSegmentsStack.pop();\n    return {\n      content: ret,\n      // #if _VERBOSE\n      sourceMap: scanner.sourceMap\n      // #endif\n    };\n  }\n\n  private static _parseIfNdef(scanner: PpScanner) {\n    const start = scanner.current - 7;\n\n    const id = scanner.scanWord();\n    this._addEmptyReplace(scanner, start);\n    this._branchMacros.add(id.lexeme);\n\n    const macro = this._definedMacros.get(id.lexeme);\n    const { token: bodyChunk, nextDirective } = scanner.scanMacroBranchChunk();\n    if (!macro) {\n      const end = nextDirective.type === EPpKeyword.endif ? scanner.getShaderPosition() : scanner.scanRemainMacro();\n\n      const expanded = this._expandMacroChunk(bodyChunk.lexeme, bodyChunk.location, scanner);\n      // #if _VERBOSE\n      const blockInfo = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n      // #endif\n      const range = ShaderLab.createRange(bodyChunk.location.start, end);\n      this.expandSegments.push({\n        // #if _VERBOSE\n        block: blockInfo,\n        // #endif\n        rangeInBlock: range,\n        replace: expanded.content\n      });\n      return;\n    }\n\n    this.expandSegments.pop();\n    this._addEmptyReplace(scanner, start);\n    this._parseMacroBranch(<any>nextDirective.type, scanner);\n  }\n\n  private static _addEmptyReplace(scanner: PpScanner, start: number) {\n    // #if _VERBOSE\n    const block = new BlockInfo(scanner.file, scanner.blockRange);\n    // #endif\n    const startPosition = ShaderLab.createPosition(start);\n    const endPosition = scanner.getCurPosition();\n    const range = ShaderLab.createRange(startPosition, endPosition);\n    this.expandSegments.push({\n      // #if _VERBOSE\n      block,\n      // #endif\n      rangeInBlock: range,\n      replace: \"\"\n    });\n  }\n\n  private static _parseIf(scanner: PpScanner) {\n    const start = scanner.current - 3;\n\n    const constantExpr = this._parseConstantExpression(scanner);\n    this._addEmptyReplace(scanner, start);\n\n    const { token: bodyChunk, nextDirective } = scanner.scanMacroBranchChunk();\n    if (!!constantExpr) {\n      const end = nextDirective.type === EPpKeyword.endif ? scanner.getShaderPosition() : scanner.scanRemainMacro();\n      const expanded = this._expandMacroChunk(bodyChunk.lexeme, bodyChunk.location, scanner);\n      // #if _VERBOSE\n      const block = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n      // #endif\n      const range = ShaderLab.createRange(bodyChunk.location.start, end);\n      this.expandSegments.push({\n        // #if _VERBOSE\n        block,\n        // #endif\n        rangeInBlock: range,\n        replace: expanded.content\n      });\n      return;\n    }\n\n    this.expandSegments.pop();\n    this._addEmptyReplace(scanner, start);\n    this._parseMacroBranch(<any>nextDirective.type, scanner);\n  }\n\n  private static _parseDefine(scanner: PpScanner) {\n    const start = scanner.getShaderPosition(7);\n    const macro = scanner.scanWord();\n\n    let end = macro.location.end;\n    if (this._definedMacros.get(macro.lexeme) && macro.lexeme.startsWith(\"GL_\")) {\n      this.reportError(macro.location, `redefined macro: ${macro.lexeme}`, scanner.source, scanner.file);\n    }\n\n    let macroArgs: BaseToken[] | undefined;\n    if (scanner.getCurChar() === \"(\") {\n      macroArgs = scanner.scanWordsUntilChar(\")\");\n      end = scanner.getShaderPosition();\n    }\n    const macroBody = scanner.scanLineRemain();\n    const range = ShaderLab.createRange(start, end);\n    const macroDefine = new MacroDefine(macro, macroBody, range, macroArgs);\n    this._definedMacros.set(macro.lexeme, macroDefine);\n\n    // #if _VERBOSE\n    const block = new BlockInfo(scanner.file, scanner.blockRange);\n    // #endif\n\n    this.expandSegments.push({\n      // #if _VERBOSE\n      block,\n      // #endif\n      rangeInBlock: ShaderLab.createRange(start, scanner.getCurPosition()),\n      replace: \"\"\n    });\n  }\n\n  private static _parseUndef(scanner: PpScanner) {\n    const start = scanner.current - 6;\n    const macro = scanner.scanWord();\n\n    // #if _VERBOSE\n    const block = new BlockInfo(scanner.file, scanner.blockRange);\n    // #endif\n    const startPosition = ShaderLab.createPosition(start);\n    const range = ShaderLab.createRange(startPosition, scanner.getCurPosition());\n    this.expandSegments.push({\n      // #if _VERBOSE\n      block,\n      // #endif\n      rangeInBlock: range,\n      replace: \"\"\n    });\n    this._definedMacros.delete(macro.lexeme);\n  }\n\n  private static _onToken(token: BaseToken, scanner: PpScanner) {\n    const macro = this._definedMacros.get(token.lexeme);\n    if (macro) {\n      let replace = macro.body.lexeme;\n      if (macro.isFunction) {\n        scanner.scanToChar(\"(\");\n        scanner.advance();\n\n        // extract parameters\n        const args: string[] = [];\n        let curLvl = 1;\n        let curIdx = scanner.current;\n        while (true) {\n          if (scanner.getCurChar() === \"(\") curLvl += 1;\n          else if (scanner.getCurChar() === \")\") {\n            curLvl -= 1;\n            if (curLvl === 0) break;\n          } else if (scanner.getCurChar() === \",\" && curLvl === 1) {\n            args.push(scanner.source.slice(curIdx, scanner.current));\n            curIdx = scanner.current + 1;\n          }\n          scanner.advance();\n        }\n        args.push(scanner.source.slice(curIdx, scanner.current));\n\n        scanner.advance();\n        const range = ShaderLab.createRange(token.location!.start, scanner.getCurPosition());\n        replace = macro.expandFunctionBody(args);\n        const expanded = this._expandMacroChunk(replace, range, scanner);\n        // #if _VERBOSE\n        const block = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n        // #endif\n        const blockRange = ShaderLab.createRange(token.location!.start, scanner.getCurPosition());\n        this.expandSegments.push({\n          // #if _VERBOSE\n          block,\n          // #endif\n          rangeInBlock: blockRange,\n          replace: expanded.content\n        });\n      } else {\n        const expanded = this._expandMacroChunk(replace, token.location, scanner);\n        // #if _VERBOSE\n        const block = new BlockInfo(scanner.file, scanner.blockRange, expanded.sourceMap);\n        // #endif\n        const range = ShaderLab.createRange(token.location.start, token.location.end);\n        this.expandSegments.push({\n          // #if _VERBOSE\n          block,\n          // #endif\n          rangeInBlock: range,\n          replace: expanded.content\n        });\n      }\n    }\n  }\n}\n","import { PpParser } from \"./PpParser\";\nimport PpScanner from \"./PpScanner\";\n\n/** @internal */\nexport class Preprocessor {\n  static baseScanner: PpScanner;\n\n  /**\n   * Reset the parser of `Preprocessor`\n   * @param basePathForIncludeKey - the base path to resolve the relative path of `#include` directive\n   */\n  static reset(includeMap: Record<string, string>, basePathForIncludeKey: string): void {\n    PpParser.reset(includeMap, basePathForIncludeKey);\n  }\n\n  /**\n   * Should call it after reset.\n   */\n  static process(source: string): string | null {\n    this.baseScanner = new PpScanner(source);\n    return PpParser.parse(this.baseScanner);\n  }\n\n  static addPredefinedMacro(macro: string, value?: string): void {\n    PpParser.addPredefinedMacro(macro, value);\n  }\n\n  // #if _VERBOSE\n  static convertSourceIndex(index: number) {\n    return this.baseScanner.sourceMap.map(index);\n  }\n  // #endif\n}\n","import { EShaderStage } from \"../common/Enums\";\nimport { ASTNode } from \"../parser/AST\";\nimport { ESymbolType, SymbolTable, SymbolInfo } from \"../parser/symbolTable\";\nimport { IParamInfo } from \"../parser/types\";\nimport { GSErrorName } from \"../GSError\";\nimport { BaseToken } from \"../common/BaseToken\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n// #if _VERBOSE\nimport { GSError } from \"../GSError\";\n// #endif\n\n/** @internal */\nexport class VisitorContext {\n  private static _singleton: VisitorContext;\n  static get context() {\n    return this._singleton;\n  }\n\n  static reset() {\n    if (!this._singleton) {\n      this._singleton = new VisitorContext();\n    }\n    this._singleton.reset();\n  }\n\n  attributeList: IParamInfo[] = [];\n  attributeStructs: ASTNode.StructSpecifier[] = [];\n  varyingStruct?: ASTNode.StructSpecifier;\n\n  stage: EShaderStage;\n\n  _referencedAttributeList: Record<string, IParamInfo & { qualifier?: string }> = Object.create(null);\n  _referencedGlobals: Record<string, SymbolInfo | ASTNode.PrecisionSpecifier> = Object.create(null);\n  _referencedVaryingList: Record<string, IParamInfo & { qualifier?: string }> = Object.create(null);\n\n  _curFn?: ASTNode.FunctionProtoType;\n\n  _passSymbolTable: SymbolTable;\n\n  private constructor() {}\n\n  get passSymbolTable() {\n    return this._passSymbolTable;\n  }\n\n  reset() {\n    this.attributeList.length = 0;\n    this.attributeStructs.length = 0;\n    this._referencedAttributeList = Object.create(null);\n    this._referencedGlobals = Object.create(null);\n    this._referencedVaryingList = Object.create(null);\n  }\n\n  isAttributeStruct(type: string) {\n    return this.attributeStructs.findIndex((item) => item.ident!.lexeme === type) !== -1;\n  }\n\n  isVaryingStruct(type: string) {\n    return this.varyingStruct?.ident?.lexeme === type;\n  }\n\n  referenceAttribute(ident: BaseToken): Error {\n    if (this._referencedAttributeList[ident.lexeme]) return;\n\n    const prop = this.attributeList.find((item) => item.ident.lexeme === ident.lexeme);\n    if (!prop) {\n      return ShaderLabUtils.createGSError(\n        `referenced attribute not found: ${ident.lexeme}`,\n        GSErrorName.CompilationError,\n        ShaderLab._processingPassText,\n        ident.location\n      );\n    }\n    this._referencedAttributeList[ident.lexeme] = prop;\n  }\n\n  referenceVarying(ident: BaseToken): Error | undefined {\n    if (this._referencedVaryingList[ident.lexeme]) return;\n\n    const prop = this.varyingStruct?.propList.find((item) => item.ident.lexeme === ident.lexeme);\n    if (!prop) {\n      return ShaderLabUtils.createGSError(\n        `referenced varying not found: ${ident.lexeme}`,\n        GSErrorName.CompilationError,\n        ShaderLab._processingPassText,\n        ident.location\n      );\n    }\n    this._referencedVaryingList[ident.lexeme] = prop;\n  }\n\n  referenceGlobal(ident: string, type: ESymbolType) {\n    if (this._referencedGlobals[ident]) return;\n\n    if (type === ESymbolType.FN) {\n      const fnEntries = this._passSymbolTable.getAllFnSymbols(ident);\n      for (let i = 0; i < fnEntries.length; i++) {\n        const key = i === 0 ? ident : ident + i;\n        this._referencedGlobals[key] = fnEntries[i];\n      }\n      return;\n    }\n    const sm = this.passSymbolTable.lookup({ ident, symbolType: type });\n    if (sm) {\n      this._referencedGlobals[ident] = sm;\n    }\n  }\n}\n","import { CodeGenVisitor } from \"./CodeGenVisitor\";\nimport { ASTNode } from \"../parser/AST\";\nimport { ShaderData } from \"../parser/ShaderInfo\";\nimport { ESymbolType, FnSymbol, StructSymbol, SymbolInfo } from \"../parser/symbolTable\";\nimport { EShaderStage } from \"../common/Enums\";\nimport { IShaderInfo } from \"@galacean/engine-design\";\nimport { ICodeSegment } from \"./types\";\nimport { VisitorContext } from \"./VisitorContext\";\nimport { EKeyword } from \"../common\";\n\nconst defaultPrecision = `\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  precision highp int;\n#else\n  precision mediump float;\n  precision mediump int;\n#endif\n`;\n\n/**\n * @internal\n */\nexport abstract class GLESVisitor extends CodeGenVisitor {\n  protected _versionText: string = \"\";\n  protected _extensions: string = \"\";\n\n  abstract getAttributeDeclare(): ICodeSegment[];\n  abstract getVaryingDeclare(): ICodeSegment[];\n\n  visitShaderProgram(node: ASTNode.GLShaderProgram, vertexEntry: string, fragmentEntry: string): IShaderInfo {\n    // #if _VERBOSE\n    this.errors.length = 0;\n    // #endif\n    VisitorContext.reset();\n    VisitorContext.context._passSymbolTable = node.shaderData.symbolTable;\n\n    return {\n      vertex: this.vertexMain(vertexEntry, node.shaderData),\n      fragment: this._fragmentMain(fragmentEntry, node.shaderData)\n    };\n  }\n\n  vertexMain(entry: string, data: ShaderData): string {\n    const { symbolTable } = data;\n    const fnSymbol = symbolTable.lookup<FnSymbol>({ ident: entry, symbolType: ESymbolType.FN });\n    if (!fnSymbol?.astNode) throw `no entry function found: ${entry}`;\n\n    const fnNode = fnSymbol.astNode;\n    VisitorContext.context.stage = EShaderStage.VERTEX;\n\n    const returnType = fnNode.protoType.returnType;\n    if (typeof returnType.type === \"string\") {\n      const varyStruct = symbolTable.lookup<StructSymbol>({ ident: returnType.type, symbolType: ESymbolType.STRUCT });\n      if (!varyStruct) {\n        this._reportError(returnType.location, `invalid varying struct: ${returnType.type}`);\n      } else {\n        VisitorContext.context.varyingStruct = varyStruct.astNode;\n      }\n    } else if (returnType.type !== EKeyword.VOID) {\n      this._reportError(returnType.location, \"main entry can only return struct.\");\n    }\n\n    const paramList = fnNode.protoType.parameterList;\n    if (paramList?.length) {\n      for (const paramInfo of paramList) {\n        if (typeof paramInfo.typeInfo.type === \"string\") {\n          const structSymbol = symbolTable.lookup<StructSymbol>({\n            ident: paramInfo.typeInfo.type,\n            symbolType: ESymbolType.STRUCT\n          });\n          if (!structSymbol) {\n            this._reportError(paramInfo.astNode.location, `Not found attribute struct \"${paramInfo.typeInfo.type}\".`);\n            continue;\n          }\n          VisitorContext.context.attributeStructs.push(structSymbol.astNode);\n          for (const prop of structSymbol.astNode.propList) {\n            VisitorContext.context.attributeList.push(prop);\n          }\n        } else {\n          VisitorContext.context.attributeList.push(paramInfo);\n        }\n      }\n    }\n\n    const statements = fnNode.statements.codeGen(this);\n    const globalText = this._getGlobalText(data);\n\n    const attributeDeclare = this.getAttributeDeclare();\n    const varyingDeclare = this.getVaryingDeclare();\n\n    const globalCode = [...globalText, ...attributeDeclare, ...varyingDeclare]\n      .sort((a, b) => a.index - b.index)\n      .map((item) => item.text)\n      .join(\"\\n\");\n\n    VisitorContext.context.reset();\n\n    return `${this._versionText}\\n${globalCode}\\n\\nvoid main() ${statements}`;\n  }\n\n  private _fragmentMain(entry: string, data: ShaderData): string {\n    const { symbolTable } = data;\n    const fnSymbol = symbolTable.lookup<FnSymbol>({ ident: entry, symbolType: ESymbolType.FN });\n    if (!fnSymbol?.astNode) throw `no entry function found: ${entry}`;\n    const fnNode = fnSymbol.astNode;\n\n    VisitorContext.context.stage = EShaderStage.FRAGMENT;\n    const statements = fnNode.statements.codeGen(this);\n    const globalText = this._getGlobalText(data);\n    const varyingDeclare = this.getVaryingDeclare();\n\n    const globalCode = [...globalText, ...varyingDeclare]\n      .sort((a, b) => a.index - b.index)\n      .map((item) => item.text)\n      .join(\"\\n\");\n\n    VisitorContext.context.reset();\n    return `${this._versionText}\\n${this._extensions}\\n${defaultPrecision}\\n${globalCode}\\n\\nvoid main() ${statements}`;\n  }\n\n  private _getGlobalText(\n    data: ShaderData,\n    textList: ICodeSegment[] = [],\n    lastLength: number = 0,\n    _serialized: Set<string> = new Set()\n  ): ICodeSegment[] {\n    const { _referencedGlobals } = VisitorContext.context;\n\n    if (lastLength === Object.keys(_referencedGlobals).length) {\n      for (const precision of data.globalPrecisions) {\n        textList.push({ text: precision.codeGen(this), index: precision.location.start.index });\n      }\n      return textList;\n    }\n\n    lastLength = Object.keys(_referencedGlobals).length;\n    for (const ident in _referencedGlobals) {\n      const sm = _referencedGlobals[ident];\n\n      if (_serialized.has(ident)) continue;\n      _serialized.add(ident);\n\n      if (sm instanceof SymbolInfo) {\n        if (sm.symbolType === ESymbolType.VAR) {\n          textList.push({ text: `uniform ${sm.astNode.codeGen(this)}`, index: sm.astNode.location.start.index });\n        } else {\n          textList.push({ text: sm.astNode!.codeGen(this), index: sm.astNode!.location.start.index });\n        }\n      } else {\n        textList.push({ text: sm.codeGen(this), index: sm.location.start.index });\n      }\n    }\n    return this._getGlobalText(data, textList, lastLength, _serialized);\n  }\n}\n","import { ENonTerminal } from \"../parser/GrammarSymbol\";\nimport { BaseToken as Token } from \"../common/BaseToken\";\nimport { EKeyword, ShaderPosition, ShaderRange } from \"../common\";\nimport { ASTNode, TreeNode } from \"../parser/AST\";\nimport { ESymbolType, FnSymbol, VarSymbol } from \"../parser/symbolTable\";\nimport { ParserUtils } from \"../ParserUtils\";\nimport { NodeChild } from \"../parser/types\";\nimport { VisitorContext } from \"./VisitorContext\";\nimport { ShaderLab } from \"../ShaderLab\";\nimport { GSErrorName } from \"../GSError\";\n// #if _VERBOSE\nimport { GSError } from \"../GSError\";\n// #endif\n\n/**\n * @internal\n * The code generator\n */\nexport class CodeGenVisitor {\n  // #if _VERBOSE\n  readonly errors: GSError[] = [];\n  // #endif\n\n  defaultCodeGen(children: NodeChild[]) {\n    let ret: string[] = [];\n    for (const child of children) {\n      if (child instanceof Token) {\n        ret.push(child.lexeme);\n      } else {\n        ret.push(child.codeGen(this));\n      }\n    }\n    return ret.join(\" \");\n  }\n\n  visitPostfixExpression(node: ASTNode.PostfixExpression) {\n    if (node.children.length === 3) {\n      const context = VisitorContext.context;\n\n      const postExpr = node.children[0] as ASTNode.PostfixExpression;\n\n      const prop = node.children[2];\n\n      if (prop instanceof Token) {\n        if (context.isAttributeStruct(<string>postExpr.type)) {\n          const error = context.referenceAttribute(prop);\n          // #if _VERBOSE\n          if (error) {\n            this.errors.push(<GSError>error);\n          }\n          // #endif\n          return prop.lexeme;\n        } else if (context.isVaryingStruct(<string>postExpr.type)) {\n          const error = context.referenceVarying(prop);\n          // #if _VERBOSE\n          if (error) {\n            this.errors.push(<GSError>error);\n          }\n          // #endif\n          return prop.lexeme;\n        }\n\n        return `${postExpr.codeGen(this)}.${prop.lexeme}`;\n      } else {\n        return `${postExpr.codeGen(this)}.${prop.codeGen(this)}`;\n      }\n    }\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitVariableIdentifier(node: ASTNode.VariableIdentifier): string {\n    if (node.symbolInfo instanceof VarSymbol && node.symbolInfo.isGlobalVariable) {\n      VisitorContext.context.referenceGlobal(node.lexeme, ESymbolType.VAR);\n    }\n    return node.lexeme;\n  }\n\n  visitFunctionCall(node: ASTNode.FunctionCall): string {\n    const call = node.children[0] as ASTNode.FunctionCallGeneric;\n    if (call.fnSymbol instanceof FnSymbol) {\n      VisitorContext.context.referenceGlobal(call.fnSymbol.ident, ESymbolType.FN);\n\n      const paramList = call.children[2];\n      const paramInfoList = call.fnSymbol.astNode.protoType.parameterList;\n\n      if (paramList instanceof ASTNode.FunctionCallParameterList) {\n        const plainParams: string[] = [];\n        const params = paramList.paramNodes;\n\n        for (let i = 0; i < params.length; i++) {\n          if (\n            !VisitorContext.context.isAttributeStruct(paramInfoList[i].typeInfo.typeLexeme) &&\n            !VisitorContext.context.isVaryingStruct(paramInfoList[i].typeInfo.typeLexeme)\n          ) {\n            plainParams.push(params[i].codeGen(this));\n          }\n        }\n        return `${call.fnSymbol.ident}(${plainParams.join(\", \")})`;\n      }\n    }\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitStatementList(node: ASTNode.StatementList): string {\n    const children = node.children as TreeNode[];\n    if (node.children.length === 1) {\n      return children[0].codeGen(this);\n    } else {\n      return `${children[0].codeGen(this)}\\n${children[1].codeGen(this)}`;\n    }\n  }\n\n  visitSingleDeclaration(node: ASTNode.SingleDeclaration): string {\n    const type = node.typeSpecifier.type;\n    if (typeof type === \"string\") {\n      VisitorContext.context.referenceGlobal(type, ESymbolType.STRUCT);\n    }\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitGlobalVariableDeclaration(node: ASTNode.VariableDeclaration): string {\n    const fullType = node.children[0];\n    if (fullType instanceof ASTNode.FullySpecifiedType && fullType.typeSpecifier.isCustom) {\n      VisitorContext.context.referenceGlobal(<string>fullType.type, ESymbolType.STRUCT);\n    }\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitDeclaration(node: ASTNode.Declaration): string {\n    const child = node.children[0];\n    if (\n      child instanceof ASTNode.InitDeclaratorList &&\n      child.typeInfo.typeLexeme === VisitorContext.context.varyingStruct?.ident?.lexeme\n    ) {\n      return \"\";\n    }\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitFunctionProtoType(node: ASTNode.FunctionProtoType): string {\n    VisitorContext.context._curFn = node;\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitFunctionDefinition(node: ASTNode.FunctionDefinition): string {\n    VisitorContext.context._curFn = undefined;\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitFunctionParameterList(node: ASTNode.FunctionParameterList): string {\n    const params = node.parameterInfoList;\n    return params\n      .filter(\n        (item) =>\n          !VisitorContext.context.isAttributeStruct(item.typeInfo.typeLexeme) &&\n          !VisitorContext.context.isVaryingStruct(item.typeInfo.typeLexeme)\n      )\n      .map((item) => item.astNode.codeGen(this))\n      .join(\", \");\n  }\n\n  visitFunctionHeader(node: ASTNode.FunctionHeader): string {\n    const returnType = node.returnType.typeSpecifier.lexeme;\n    if (VisitorContext.context.isAttributeStruct(returnType) || VisitorContext.context.isVaryingStruct(returnType))\n      return `void ${node.ident.lexeme}(`;\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitJumpStatement(node: ASTNode.JumpStatement): string {\n    const cmd = node.children[0] as Token;\n    if (cmd.type === EKeyword.RETURN) {\n      const expr = node.children[1];\n      if (expr instanceof ASTNode.Expression) {\n        const returnVar = ParserUtils.unwrapNodeByType<ASTNode.VariableIdentifier>(\n          expr,\n          ENonTerminal.variable_identifier\n        );\n        if (returnVar?.typeInfo === VisitorContext.context.varyingStruct?.ident?.lexeme) {\n          return \"\";\n        }\n        const returnFnCall = ParserUtils.unwrapNodeByType<ASTNode.FunctionCall>(expr, ENonTerminal.function_call);\n        if (returnFnCall?.type === VisitorContext.context.varyingStruct?.ident?.lexeme) {\n          return `${expr.codeGen(this)};`;\n        }\n      }\n    }\n    return this.defaultCodeGen(node.children);\n  }\n\n  visitFunctionIdentifier(node: ASTNode.FunctionIdentifier): string {\n    return this.defaultCodeGen(node.children);\n  }\n\n  protected _reportError(loc: ShaderRange | ShaderPosition, message: string): void {\n    // #if _VERBOSE\n    this.errors.push(new GSError(GSErrorName.CompilationError, message, loc, ShaderLab._processingPassText));\n    // #else\n    throw new Error(message);\n    // #endif\n  }\n}\n","import { GLESVisitor } from \"./GLESVisitor\";\nimport { VisitorContext } from \"./VisitorContext\";\nimport { ICodeSegment } from \"./types\";\n\nexport class GLES100Visitor extends GLESVisitor {\n  override _versionText: string = `#version 100`;\n  override _extensions: string = [\n    \"GL_EXT_shader_texture_lod\",\n    \"GL_OES_standard_derivatives\",\n    \"GL_EXT_draw_buffers\",\n    \"GL_EXT_frag_depth\"\n  ]\n    .map((e) => `#extension ${e} : enable\\n`)\n    .join(\"\");\n\n  private static _singleton: GLES100Visitor;\n  static getVisitor(): GLES100Visitor {\n    if (!this._singleton) {\n      this._singleton = new GLES100Visitor();\n    }\n    return this._singleton;\n  }\n\n  override getAttributeDeclare(): ICodeSegment[] {\n    const ret: ICodeSegment[] = [];\n    for (const item of Object.values(VisitorContext.context._referencedAttributeList)) {\n      ret.push({\n        text: `attribute ${item.typeInfo.typeLexeme} ${item.ident.lexeme};`,\n        index: item.ident.location.start.index\n      });\n    }\n    return ret;\n  }\n\n  override getVaryingDeclare(): ICodeSegment[] {\n    const ret: ICodeSegment[] = [];\n    for (const item of Object.values(VisitorContext.context._referencedVaryingList)) {\n      ret.push({\n        text: `varying ${item.typeInfo.typeLexeme} ${item.ident.lexeme};`,\n        index: item.ident.location.start.index\n      });\n    }\n    return ret;\n  }\n}\n","import { ASTNode } from \"../parser/AST\";\nimport { SymbolType } from \"../parser/types\";\nimport { BaseToken as Token } from \"../common/BaseToken\";\nimport { EKeyword, ETokenType, ShaderPosition } from \"../common\";\nimport { GLESVisitor } from \"./GLESVisitor\";\nimport { EShaderStage } from \"../common/Enums\";\nimport { ICodeSegment } from \"./types\";\nimport { VisitorContext } from \"./VisitorContext\";\nimport { ShaderLab } from \"../ShaderLab\";\n\nconst V3_GL_FragColor = \"GS_glFragColor\";\n\nexport class GLES300Visitor extends GLESVisitor {\n  override _versionText: string = \"#version 300 es\";\n\n  private static _singleton: GLES300Visitor;\n  static getVisitor(): GLES300Visitor {\n    if (!this._singleton) {\n      this._singleton = new GLES300Visitor();\n    }\n    return this._singleton;\n  }\n\n  override getAttributeDeclare(): ICodeSegment[] {\n    const ret: ICodeSegment[] = [];\n    for (const item of Object.values(VisitorContext.context._referencedAttributeList)) {\n      ret.push({\n        text: `in ${item.typeInfo.typeLexeme} ${item.ident.lexeme};`,\n        index: item.ident.location.start.index\n      });\n    }\n    return ret;\n  }\n\n  override getVaryingDeclare(): ICodeSegment[] {\n    const ret: ICodeSegment[] = [];\n    const qualifier = VisitorContext.context.stage === EShaderStage.FRAGMENT ? \"in\" : \"out\";\n    const values = Object.values(VisitorContext.context._referencedVaryingList);\n    for (let i = 0; i < values.length; i++) {\n      const item = values[i];\n      ret.push({\n        text: `${item.qualifier ?? qualifier} ${item.typeInfo.typeLexeme} ${item.ident.lexeme};`,\n        index: item.ident.location.start.index\n      });\n    }\n    return ret;\n  }\n\n  override visitFunctionIdentifier(node: ASTNode.FunctionIdentifier): string {\n    const typeSpecifier = node.children[0] as ASTNode.TypeSpecifier;\n    if (typeSpecifier.children.length !== 1) {\n      return this.defaultCodeGen(node.children);\n    }\n    let ident = node.lexeme;\n    if (node.ident === \"texture2D\" || node.ident === \"textureCube\") {\n      ident = \"texture\";\n    } else if (node.ident === \"texture2DProj\") {\n      ident = \"textureProj\";\n    } else if (VisitorContext.context.stage === EShaderStage.FRAGMENT) {\n      switch (node.ident) {\n        case \"texture2DLodEXT\":\n        case \"textureCubeLodEXT\":\n          ident = \"textureLod\";\n          break;\n        case \"texture2DGradEXT\":\n        case \"textureCubeGradEXT\":\n          ident = \"textureGrad\";\n          break;\n        case \"texture2DProjLodEXT\":\n          ident = \"textureProjLod\";\n          break;\n        case \"texture2DProjGradEXT\":\n          ident = \"textureProjGrad\";\n          break;\n        case \"gl_FragDepthEXT\":\n          ident = \"gl_FragDepth\";\n          break;\n      }\n    }\n    return ident;\n  }\n\n  override visitVariableIdentifier(node: ASTNode.VariableIdentifier): string {\n    if (VisitorContext.context.stage === EShaderStage.FRAGMENT && node.lexeme === \"gl_FragColor\") {\n      if (!VisitorContext.context._referencedVaryingList[V3_GL_FragColor]) {\n        const token = Token.pool.get();\n        token.set(ETokenType.ID, V3_GL_FragColor, ShaderLab.createPosition(0, 0, 0));\n        VisitorContext.context._referencedVaryingList[V3_GL_FragColor] = {\n          ident: token,\n          typeInfo: new SymbolType(EKeyword.VEC4, \"vec4\"),\n          qualifier: \"out\",\n          astNode: node\n        };\n      }\n      return V3_GL_FragColor;\n    }\n    return super.visitVariableIdentifier(node);\n  }\n}\n","function _extends() {\n    _extends = Object.assign || function assign(target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n        }\n\n        return target;\n    };\n\n    return _extends.apply(this, arguments);\n}\nexport { _extends as _ };\n","import { EKeyword } from \"../common\";\n\nexport const KeywordMap = new Map([\n  [\"RenderQueueType\", EKeyword.GS_RenderQueueType],\n  [\"BlendState\", EKeyword.GS_BlendState],\n  [\"DepthState\", EKeyword.GS_DepthState],\n  [\"StencilState\", EKeyword.GS_StencilState],\n  [\"RasterState\", EKeyword.GS_RasterState],\n  [\"EditorProperties\", EKeyword.GS_EditorProperties],\n  [\"EditorMacros\", EKeyword.GS_EditorMacros],\n  [\"Editor\", EKeyword.GS_Editor],\n  [\"Tags\", EKeyword.GS_Tags],\n  [\"VertexShader\", EKeyword.GS_VertexShader],\n  [\"FragmentShader\", EKeyword.GS_FragmentShader],\n  [\"SubShader\", EKeyword.GS_SubShader],\n  [\"Pass\", EKeyword.GS_Pass],\n  [\"BlendFactor\", EKeyword.GS_BlendFactor],\n  [\"BlendOperation\", EKeyword.GS_BlendOperation],\n  [\"Bool\", EKeyword.GS_Bool],\n  [\"Number\", EKeyword.GS_Number],\n  [\"CompareFunction\", EKeyword.GS_CompareFunction],\n  [\"StencilOperation\", EKeyword.GS_StencilOperation],\n  [\"CullMode\", EKeyword.GS_CullMode],\n  [\"true\", EKeyword.TRUE],\n  [\"false\", EKeyword.FALSE],\n  [\"UsePass\", EKeyword.GS_UsePass],\n  [\"Color\", EKeyword.GS_Color]\n]);\n","import BaseScanner from \"../common/BaseScanner\";\n\nexport default class Scanner extends BaseScanner {\n  constructor(source: string, kws: Map<string, number> = new Map()) {\n    super(source, kws);\n  }\n\n  /**\n   * split by space\n   */\n  scanWord(): string {\n    this.skipCommentsAndSpace();\n    const start = this._currentIndex;\n    while (/\\S/.test(this.getCurChar()) && !this.isEnd()) this._advance();\n    return this._source.substring(start, this._currentIndex);\n  }\n\n  scanNumber(): number {\n    this.skipCommentsAndSpace();\n    const start = this._currentIndex;\n    while (/[0-9]/.test(this.getCurChar())) this._advance();\n    if (this.getCurChar() === \".\") {\n      this._advance();\n      while (/[0-9]/.test(this.getCurChar())) this._advance();\n    }\n    return Number(this._source.substring(start, this._currentIndex));\n  }\n\n  // #if _VERBOSE\n  scanToCharacter(char: string): void {\n    while (this.getCurChar() !== char && !this.isEnd()) {\n      this._advance();\n    }\n    this._advance();\n  }\n  // #endif\n}\n","import { BaseSymbolTable, IBaseSymbol } from \"../common/BaseSymbolTable\";\n\nexport interface ISymbol extends IBaseSymbol {\n  type: number;\n  value?: any;\n}\n\nexport default class SymbolTable extends BaseSymbolTable<ISymbol> {\n  override symbolEqualCheck(s1: ISymbol, s2: ISymbol): boolean {\n    return s1.type === s2.type;\n  }\n}\n","import { SymbolTableStack } from \"../common/BaseSymbolTable\";\nimport { BaseToken } from \"../common/BaseToken\";\nimport { EKeyword, ETokenType } from \"../common\";\nimport { ShaderPosition } from \"../common\";\nimport { KeywordMap } from \"./KeywordMap\";\nimport Scanner from \"./Scanner\";\nimport SymbolTable, { ISymbol } from \"./SymbolTable\";\nimport {\n  RenderStateDataKey,\n  Color,\n  RenderQueueType,\n  CompareFunction,\n  StencilOperation,\n  BlendOperation,\n  BlendFactor,\n  CullMode,\n  Logger\n} from \"@galacean/engine\";\nimport {\n  IStatement,\n  IShaderContent,\n  ISubShaderContent,\n  IShaderPassContent,\n  IRenderStates\n} from \"@galacean/engine-design\";\nimport { GSErrorName } from \"../GSError\";\n// #if _VERBOSE\nimport { GSError } from \"../GSError\";\n// #endif\nimport { ShaderLabUtils } from \"../ShaderLabUtils\";\n\nconst EngineType = [\n  EKeyword.GS_RenderQueueType,\n  EKeyword.GS_BlendFactor,\n  EKeyword.GS_BlendOperation,\n  EKeyword.GS_Bool,\n  EKeyword.GS_Number,\n  EKeyword.GS_Color,\n  EKeyword.GS_CompareFunction,\n  EKeyword.GS_StencilOperation,\n  EKeyword.GS_CullMode\n];\n\nconst RenderStateType = [\n  EKeyword.GS_BlendState,\n  EKeyword.GS_DepthState,\n  EKeyword.GS_RasterState,\n  EKeyword.GS_StencilState\n];\n\n/**\n * @internal\n */\nexport class ShaderContentParser {\n  static _engineType = { RenderQueueType, CompareFunction, StencilOperation, BlendOperation, BlendFactor, CullMode };\n\n  static _errors: GSError[] = [];\n\n  private static _isRenderStateDeclarator(token: BaseToken) {\n    return RenderStateType.includes(token.type);\n  }\n\n  private static _isEngineType(token: BaseToken) {\n    return EngineType.includes(token.type);\n  }\n\n  private static _symbolTable: SymbolTableStack<ISymbol, SymbolTable> = new SymbolTableStack();\n\n  static reset() {\n    this._errors.length = 0;\n    this._symbolTable.clear();\n    this._newScope();\n  }\n\n  static parse(source: string): IShaderContent {\n    const start = performance.now();\n\n    const scanner = new Scanner(source, KeywordMap);\n    const ret = {\n      subShaders: [],\n      globalContents: [],\n      renderStates: { constantMap: {}, variableMap: {} }\n    } as IShaderContent;\n\n    scanner.scanText(\"Shader\");\n    ret.name = scanner.scanPairedText('\"', '\"');\n    scanner.scanText(\"{\");\n\n    scanner.skipCommentsAndSpace();\n    this._parseShaderStatements(ret, scanner);\n\n    const shaderGlobalStatements = ret.globalContents;\n    const shaderRenderStates = ret.renderStates;\n    for (let i = 0; i < ret.subShaders.length; i++) {\n      const subShader = ret.subShaders[i];\n      const curSubShaderGlobalStatements = shaderGlobalStatements.concat(subShader.globalContents);\n      const constMap = { ...shaderRenderStates.constantMap, ...subShader.renderStates.constantMap };\n      const variableMap = { ...shaderRenderStates.variableMap, ...subShader.renderStates.variableMap };\n\n      for (let i = 0; i < subShader.passes.length; i++) {\n        const pass = subShader.passes[i];\n        Object.assign(pass.renderStates.constantMap, constMap);\n        Object.assign(pass.renderStates.variableMap, variableMap);\n        if (pass.isUsePass) continue;\n        // @ts-ignore\n        const passGlobalStatements = curSubShaderGlobalStatements.concat(pass.globalContents);\n        pass.contents = passGlobalStatements.map((item) => item.content).join(\"\\n\");\n      }\n    }\n\n    Logger.info(`[content compilation] cost time ${performance.now() - start}ms`);\n\n    return ret;\n  }\n\n  private static _parseShaderStatements(ret: IShaderContent, scanner: Scanner) {\n    let braceLevel = 1;\n    let start = scanner.getCurPosition();\n\n    while (true) {\n      const word = scanner.scanToken();\n      switch (word.type) {\n        case EKeyword.GS_SubShader:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          const subShader = this._parseSubShader(scanner);\n          ret.subShaders.push(subShader);\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_EditorProperties:\n        case EKeyword.GS_EditorMacros:\n        case EKeyword.GS_Editor:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          scanner.scanPairedText(\"{\", \"}\", true);\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_RenderQueueType:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          this._parseRenderQueueAssignment(ret, scanner);\n          start = scanner.getCurPosition();\n          break;\n\n        case ETokenType.NOT_WORD:\n          if (word.lexeme === \"{\") braceLevel += 1;\n          else if (word.lexeme === \"}\") {\n            braceLevel -= 1;\n            if (braceLevel === 0) {\n              this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n              this._symbolTable.dropScope();\n              return;\n            }\n          }\n\n        default:\n          if (ShaderContentParser._isRenderStateDeclarator(word)) {\n            this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n            this._parseRenderStateDeclarationOrAssignment(ret, word, scanner);\n            start = scanner.getCurPosition();\n            break;\n          } else if (ShaderContentParser._isEngineType(word)) {\n            this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n            this._parseVariableDeclaration(word.type, scanner);\n            start = scanner.getCurPosition();\n            break;\n          }\n      }\n    }\n  }\n\n  private static _parseRenderStateDeclarationOrAssignment(\n    ret: { renderStates: IRenderStates },\n    stateToken: BaseToken,\n    scanner: Scanner\n  ) {\n    const ident = scanner.scanToken();\n    let isDeclaration: boolean;\n    if (ident.type === ETokenType.ID) {\n      isDeclaration = true;\n      scanner.scanText(\"{\");\n    } else if (ident.lexeme === \"{\") {\n      isDeclaration = false;\n    } else if (ident.lexeme === \"=\") {\n      const variable = scanner.scanToken();\n      scanner.scanText(\";\");\n      const sm = this._symbolTable.lookup({ type: stateToken.type, ident: variable.lexeme });\n      if (!sm?.value) {\n        const error = ShaderLabUtils.createGSError(\n          `Invalid \"${stateToken.lexeme}\" variable: ${variable.lexeme}`,\n          GSErrorName.CompilationError,\n          scanner.source,\n          variable.location\n        );\n        // #if _VERBOSE\n        this._errors.push(<GSError>error);\n        return;\n        // #endif\n      }\n      const renderState = sm.value as IRenderStates;\n      Object.assign(ret.renderStates.constantMap, renderState.constantMap);\n      Object.assign(ret.renderStates.variableMap, renderState.variableMap);\n      return;\n    }\n\n    const renderState = this._parseRenderStatePropList(stateToken.lexeme, scanner);\n    if (isDeclaration) {\n      this._symbolTable.insert({ ident: ident.lexeme, type: stateToken.type, value: renderState });\n    } else {\n      Object.assign(ret.renderStates.constantMap, renderState.constantMap);\n      Object.assign(ret.renderStates.variableMap, renderState.variableMap);\n    }\n  }\n\n  private static _parseVariableDeclaration(type: number, scanner: Scanner) {\n    const token = scanner.scanToken();\n    scanner.scanText(\";\");\n    this._symbolTable.insert({ type: token.type, ident: token.lexeme });\n  }\n\n  private static _newScope() {\n    const symbolTable = new SymbolTable();\n    this._symbolTable.newScope(symbolTable);\n  }\n\n  private static _parseRenderStatePropList(state: string, scanner: Scanner): IRenderStates {\n    const ret: IRenderStates = { constantMap: {}, variableMap: {} };\n    while (scanner.getCurChar() !== \"}\") {\n      this._parseRenderStatePropItem(ret, state, scanner);\n      scanner.skipCommentsAndSpace();\n    }\n    scanner._advance();\n    return ret;\n  }\n\n  private static _parseRenderStatePropItem(ret: IRenderStates, state: string, scanner: Scanner) {\n    let renderStateProp = scanner.scanToken().lexeme;\n    const op = scanner.scanToken();\n    if (state === \"BlendState\" && renderStateProp !== \"BlendColor\" && renderStateProp !== \"AlphaToCoverage\") {\n      let idx = 0;\n      if (op.lexeme === \"[\") {\n        idx = scanner.scanNumber();\n        scanner.scanText(\"]\");\n        scanner.scanText(\"=\");\n      } else if (op.lexeme !== \"=\") {\n        const error = ShaderLabUtils.createGSError(\n          `Invalid syntax, expect character '=', but got ${op.lexeme}`,\n          GSErrorName.CompilationError,\n          scanner.source,\n          scanner.getCurPosition()\n        );\n        // #if _VERBOSE\n        this._errors.push(<GSError>error);\n        scanner.scanToCharacter(\";\");\n        return;\n        // #endif\n      }\n      renderStateProp += idx;\n    }\n\n    renderStateProp = state + renderStateProp;\n    const renderStateElementKey = RenderStateDataKey[renderStateProp];\n    if (renderStateElementKey == undefined) {\n      const error = ShaderLabUtils.createGSError(\n        `Invalid render state element ${renderStateProp}`,\n        GSErrorName.CompilationError,\n        scanner.source,\n        scanner.getCurPosition()\n      );\n      // #if _VERBOSE\n      this._errors.push(<GSError>error);\n      scanner.scanToCharacter(\";\");\n      return;\n      // #endif\n    }\n\n    scanner.skipCommentsAndSpace();\n    let value: any;\n    if (/[0-9.]/.test(scanner.getCurChar())) {\n      value = scanner.scanNumber();\n    } else {\n      const token = scanner.scanToken();\n      if (token.type === EKeyword.TRUE) value = true;\n      else if (token.type === EKeyword.FALSE) value = false;\n      else if (token.type === EKeyword.GS_Color) {\n        scanner.scanText(\"(\");\n        const args: number[] = [];\n        while (true) {\n          args.push(scanner.scanNumber());\n          scanner.skipCommentsAndSpace();\n          const peek = scanner.peek(1);\n          if (peek === \")\") {\n            scanner._advance();\n            break;\n          }\n          scanner.scanText(\",\");\n        }\n        value = new Color(...args);\n      } else if (scanner.getCurChar() === \".\") {\n        scanner._advance();\n        const engineTypeProp = scanner.scanToken();\n        value = ShaderContentParser._engineType[token.lexeme]?.[engineTypeProp.lexeme];\n        if (value == undefined) {\n          const error = ShaderLabUtils.createGSError(\n            `Invalid engine constant: ${token.lexeme}.${engineTypeProp.lexeme}`,\n            GSErrorName.CompilationError,\n            scanner.source,\n            engineTypeProp.location\n          );\n          // #if _VERBOSE\n          this._errors.push(<GSError>error);\n          scanner.scanToCharacter(\";\");\n          return;\n          // #endif\n        }\n      } else {\n        value = token.lexeme;\n      }\n    }\n    scanner.scanText(\";\");\n    if (typeof value === \"string\") {\n      ret.variableMap[renderStateElementKey] = value;\n    } else {\n      ret.constantMap[renderStateElementKey] = value;\n    }\n  }\n\n  private static _parseRenderQueueAssignment(ret: { renderStates: IRenderStates }, scanner: Scanner) {\n    scanner.scanText(\"=\");\n    const word = scanner.scanToken();\n    scanner.scanText(\";\");\n    const value = ShaderContentParser._engineType.RenderQueueType[word.lexeme];\n    const key = RenderStateDataKey.RenderQueueType;\n    if (value == undefined) {\n      ret.renderStates.variableMap[key] = word.lexeme;\n    } else {\n      ret.renderStates.constantMap[key] = value;\n    }\n  }\n\n  private static _addGlobalStatement(\n    ret: { globalContents: IStatement[] },\n    scanner: Scanner,\n    start: ShaderPosition,\n    offset: number\n  ) {\n    if (scanner.current > start.index + offset) {\n      ret.globalContents.push({\n        range: { start, end: { ...scanner.getCurPosition(), index: scanner.current - offset - 1 } },\n        content: scanner.source.substring(start.index, scanner.current - offset - 1)\n      });\n    }\n  }\n\n  private static _parseSubShader(scanner: Scanner): ISubShaderContent {\n    this._newScope();\n    const ret = {\n      passes: [],\n      globalContents: [],\n      renderStates: { constantMap: {}, variableMap: {} },\n      tags: {}\n    } as ISubShaderContent;\n    let braceLevel = 1;\n    ret.name = scanner.scanPairedText('\"', '\"');\n    scanner.scanText(\"{\");\n\n    scanner.skipCommentsAndSpace();\n    let start = scanner.getCurPosition();\n\n    while (true) {\n      const word = scanner.scanToken();\n      switch (word.type) {\n        case EKeyword.GS_Pass:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          const pass = this._parsePass(scanner);\n          ret.passes.push(pass);\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_RenderQueueType:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          this._parseRenderQueueAssignment(ret, scanner);\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_UsePass:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          const name = scanner.scanPairedText('\"', '\"');\n          // @ts-ignore\n          ret.passes.push({ name, isUsePass: true, renderStates: { constantMap: {}, variableMap: {} }, tags: {} });\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_Tags:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          this._parseTags(ret, scanner);\n          start = scanner.getCurPosition();\n          break;\n\n        case ETokenType.NOT_WORD:\n          if (word.lexeme === \"{\") braceLevel += 1;\n          else if (word.lexeme === \"}\") {\n            braceLevel -= 1;\n            if (braceLevel === 0) {\n              this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n              this._symbolTable.dropScope();\n              return ret;\n            }\n          }\n\n        default:\n          if (ShaderContentParser._isRenderStateDeclarator(word)) {\n            this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n            this._parseRenderStateDeclarationOrAssignment(ret, word, scanner);\n            start = scanner.getCurPosition();\n            break;\n          } else if (ShaderContentParser._isEngineType(word)) {\n            this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n            this._parseVariableDeclaration(word.type, scanner);\n            start = scanner.getCurPosition();\n            break;\n          }\n      }\n    }\n  }\n\n  private static _parseTags(ret: { tags?: Record<string, number | string | boolean> }, scanner: Scanner) {\n    scanner.scanText(\"{\");\n    while (true) {\n      const ident = scanner.scanToken();\n      scanner.scanText(\"=\");\n      const value = scanner.scanPairedText('\"', '\"');\n      scanner.skipCommentsAndSpace();\n\n      ret.tags[ident.lexeme] = value;\n\n      if (scanner.peek(1) === \"}\") {\n        scanner._advance();\n        return;\n      }\n      scanner.scanText(\",\");\n    }\n  }\n\n  private static _parsePass(scanner: Scanner): IShaderPassContent {\n    this._newScope();\n    const ret = {\n      globalContents: [],\n      renderStates: { constantMap: {}, variableMap: {} },\n      tags: {}\n    } as IShaderPassContent & {\n      globalContents: IStatement[];\n    };\n    ret.name = scanner.scanPairedText('\"', '\"');\n    scanner.scanText(\"{\");\n    let braceLevel = 1;\n\n    scanner.skipCommentsAndSpace();\n    let start = scanner.getCurPosition();\n\n    while (true) {\n      const word = scanner.scanToken();\n      switch (word.type) {\n        case EKeyword.GS_RenderQueueType:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          this._parseRenderQueueAssignment(ret, scanner);\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_Tags:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          this._parseTags(ret, scanner);\n          start = scanner.getCurPosition();\n          break;\n\n        case EKeyword.GS_VertexShader:\n        case EKeyword.GS_FragmentShader:\n          this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n          scanner.scanText(\"=\");\n          const entry = scanner.scanToken();\n          if (ret[word.lexeme]) {\n            const error = ShaderLabUtils.createGSError(\n              \"reassign main entry\",\n              GSErrorName.CompilationError,\n              scanner.source,\n              scanner.getCurPosition()\n            );\n            // #if _VERBOSE\n            Logger.error(error.toString());\n            throw error;\n            // #endif\n          }\n          const key = word.type === EKeyword.GS_VertexShader ? \"vertexEntry\" : \"fragmentEntry\";\n          ret[key] = entry.lexeme;\n          scanner.scanText(\";\");\n          start = scanner.getCurPosition();\n          break;\n\n        case ETokenType.NOT_WORD:\n          if (word.lexeme === \"{\") braceLevel += 1;\n          else if (word.lexeme === \"}\") {\n            braceLevel -= 1;\n            if (braceLevel === 0) {\n              this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n              this._symbolTable.dropScope();\n              return ret;\n            }\n          }\n\n        default:\n          if (ShaderContentParser._isRenderStateDeclarator(word)) {\n            this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n            this._parseRenderStateDeclarationOrAssignment(ret, word, scanner);\n            start = scanner.getCurPosition();\n            break;\n          } else if (ShaderContentParser._isEngineType(word)) {\n            this._addGlobalStatement(ret, scanner, start, word.lexeme.length);\n            this._parseVariableDeclaration(word.type, scanner);\n            start = scanner.getCurPosition();\n            break;\n          }\n      }\n    }\n  }\n}\n","import { Lexer } from \"./lexer\";\nimport { ShaderTargetParser } from \"./parser\";\nimport { Preprocessor } from \"./preprocessor\";\nimport { GLES100Visitor, GLES300Visitor } from \"./codeGen\";\nimport { IShaderContent, IShaderLab } from \"@galacean/engine-design\";\nimport { ShaderContentParser } from \"./contentParser\";\n// @ts-ignore\nimport { Logger, ShaderLib, ShaderMacro, ShaderPlatformTarget } from \"@galacean/engine\";\nimport { ShaderPosition, ShaderRange } from \"./common\";\n// #if _VERBOSE\nimport { GSError } from \"./GSError\";\n// #endif\nimport { PpParser } from \"./preprocessor/PpParser\";\nimport { ShaderLabUtils } from \"./ShaderLabUtils\";\nimport { IShaderProgramSource } from \"@galacean/engine-design/types/shader-lab/IShaderProgramSource\";\n\n/** @internal */\nexport class ShaderLab implements IShaderLab {\n  private static _parser = ShaderTargetParser.create();\n  private static _shaderPositionPool = ShaderLabUtils.createObjectPool(ShaderPosition);\n  private static _shaderRangePool = ShaderLabUtils.createObjectPool(ShaderRange);\n\n  // #if _VERBOSE\n  static _processingPassText?: string;\n  // #endif\n\n  static createPosition(index: number, line?: number, column?: number): ShaderPosition {\n    const position = this._shaderPositionPool.get();\n    position.set(\n      index,\n      // #if _VERBOSE\n      line,\n      column\n      // #endif\n    );\n    return position;\n  }\n\n  static createRange(start: ShaderPosition, end: ShaderPosition): ShaderRange {\n    const range = this._shaderRangePool.get();\n    range.set(start, end);\n    return range;\n  }\n\n  // #if _VERBOSE\n  /** Retrieve the compilation errors */\n  readonly errors: GSError[] = [];\n  // #endif\n\n  _parseShaderPass(\n    source: string,\n    vertexEntry: string,\n    fragmentEntry: string,\n    macros: ShaderMacro[],\n    backend: ShaderPlatformTarget,\n    platformMacros: string[],\n    basePathForIncludeKey: string\n  ): IShaderProgramSource | undefined {\n    Preprocessor.reset(ShaderLib, basePathForIncludeKey);\n    for (const macro of macros) {\n      Preprocessor.addPredefinedMacro(macro.name, macro.value);\n    }\n\n    for (let i = 0; i < platformMacros.length; i++) {\n      Preprocessor.addPredefinedMacro(platformMacros[i]);\n    }\n\n    const preprocessorStart = performance.now();\n    const ppdContent = Preprocessor.process(source);\n    // #if _VERBOSE\n    if (PpParser._errors.length > 0) {\n      for (const err of PpParser._errors) {\n        this.errors.push(<GSError>err);\n      }\n      this._logErrors();\n      return undefined;\n    }\n    // #endif\n\n    Logger.info(`[pass compilation - preprocessor]  cost time ${performance.now() - preprocessorStart}ms`);\n\n    const lexer = new Lexer(ppdContent);\n    const tokens = lexer.tokenize();\n\n    const { _parser: parser } = ShaderLab;\n\n    ShaderLab._processingPassText = ppdContent;\n    const program = parser.parse(tokens);\n\n    // #if _VERBOSE\n    for (const err of parser.errors) {\n      this.errors.push(err);\n    }\n    // #endif\n    if (!program) {\n      // #if _VERBOSE\n      this._logErrors();\n      // #endif\n      return undefined;\n    }\n\n    const codeGen =\n      backend === ShaderPlatformTarget.GLES100 ? GLES100Visitor.getVisitor() : GLES300Visitor.getVisitor();\n\n    const start = performance.now();\n    const ret = codeGen.visitShaderProgram(program, vertexEntry, fragmentEntry);\n    Logger.info(`[CodeGen] cost time: ${performance.now() - start}ms`);\n    ShaderLab._processingPassText = undefined;\n\n    // #if _VERBOSE\n    for (const err of codeGen.errors) {\n      this.errors.push(err);\n    }\n    this._logErrors();\n    // #endif\n\n    return ret;\n  }\n\n  _parseShaderContent(shaderSource: string): IShaderContent {\n    ShaderLabUtils.clearAllShaderLabObjectPool();\n    ShaderContentParser.reset();\n    const ret = ShaderContentParser.parse(shaderSource);\n\n    // #if _VERBOSE\n    this.errors.length = 0;\n    for (const error of ShaderContentParser._errors) {\n      this.errors.push(error);\n    }\n    // #endif\n\n    return ret;\n  }\n\n  // #if _VERBOSE\n  /**\n   * @internal\n   */\n  _logErrors() {\n    const errors = this.errors;\n    if (errors.length === 0 || !Logger.isEnabled) return;\n    Logger.error(`${errors.length} errors occur!`);\n    for (const err of errors) {\n      Logger.error(err.toString());\n    }\n  }\n  // #endif\n}\n","export { ShaderLab } from \"./ShaderLab\";\n\n// #if _VERBOSE\nexport { Preprocessor } from \"./preprocessor\";\nexport * from \"./GSError\";\n// #endif\n\n//@ts-ignore\nexport const version = `__buildVersion`;\n\nlet mode = \"Release\";\n// #if _VERBOSE\nmode = \"Verbose\";\n// #endif\n\nconsole.log(`Galacean ShaderLab version: ${version}. mode: ${mode}`);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_create_for_of_iterator_helper_loose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","isArray","_unsupported_iterable_to_array","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","done","value","TypeError","_set_prototype_of","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","writable","configurable","SuppressedError","EKeyword","ETokenType","GSErrorName","EAction","ESymbolType","ENonTerminal","EShaderStage","ASTNode","TrivialNode","ScopeBrace","ScopeEndBrace","JumpStatement","ConditionOpt","ForRestStatement","Condition","ForInitStatement","IterationStatement","SelectionStatement","ExpressionStatement","ExpressionAstNode","InitializerList","Initializer","SingleDeclaration","FullySpecifiedType","TypeQualifier","SingleTypeQualifier","BasicTypeQualifier","StorageQualifier","PrecisionQualifier","InterpolationQualifier","InvariantQualifier","TypeSpecifier","ArraySpecifier","IntegerConstantExpressionOperator","IntegerConstantExpression","TypeSpecifierNonArray","ExtBuiltinTypeSpecifierNonArray","InitDeclaratorList","IdentifierList","Declaration","FunctionProtoType","FunctionDeclarator","FunctionHeader","FunctionParameterList","ParameterDeclaration","ParameterDeclarator","SimpleStatement","CompoundStatement","CompoundStatementNoScope","Statement","StatementList","FunctionDefinition","FunctionCall","FunctionCallGeneric","FunctionCallParameterList","PrecisionSpecifier","FunctionIdentifier","AssignmentExpression","AssignmentOperator","Expression","PrimaryExpression","PostfixExpression","UnaryOperator","UnaryExpression","MultiplicativeExpression","AdditiveExpression","ShiftExpression","RelationalExpression","EqualityExpression","AndExpression","ExclusiveOrExpression","InclusiveOrExpression","LogicalAndExpression","LogicalXorExpression","LogicalOrExpression","ConditionalExpression","StructSpecifier","StructDeclarationList","StructDeclaration","StructDeclaratorList","StructDeclarator","VariableDeclaration","VariableIdentifier","GLShaderProgram","EPpToken","EPpKeyword","ShaderRange","set","start","end","dispose","ShaderPosition","index","line","column","KeywordTable","Map","ATTRIBUTE","CONST","BOOL","FLOAT","DOUBLE","INT","UINT","BREAK","CONTINUE","DO","ELSE","FOR","IF","WHILE","DISCARD","RETURN","BVEC2","BVEC3","BVEC4","IVEC2","IVEC3","IVEC4","UVEC2","UVEC3","UVEC4","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","IN","OUT","INOUT","SAMPLER2D","SAMPLER_CUBE","SAMPLER3D","SAMPLER2D_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLER2D_ARRAY","SAMPLER2D_ARRAY_SHADOW","I_SAMPLER2D","I_SAMPLER3D","I_SAMPLER_CUBE","I_SAMPLER2D_ARRAY","U_SAMPLER2D","U_SAMPLER3D","U_SAMPLER_CUBE","U_SAMPLER2D_ARRAY","STRUCT","VOID","TRUE","FALSE","PRECISION","PRECISE","HIGHP","MEDIUMP","LOWP","INVARIANT","FLAT","SMOOTH","NOPERSPECTIVE","CENTROID","_instanceof","left","right","hasInstance","_is_native_reflect_construct","result","Boolean","valueOf","Reflect","construct","_","_construct","Parent","args","Class","a","push","apply","instance","Function","arguments","_get_prototype_of","getPrototypeOf","_wrap_native_super","_cache","undefined","indexOf","has","get","Wrapper","enumerable","GSError","Error1","message","location","source","file","_this","_proto","lines","split","diagnosticMessage","lineSplit","wrappingLineCount","remarkStart","remarkEnd","paddingLength","remarkLength","Math","max","repeat","Error","ShaderLabUtils","createObjectPool","type","pool","ClearableObjectPool","_shaderLabObjectPoolSet","clearAllShaderLabObjectPool","clear","createGSError","errorName","BaseToken","lexeme","arg","ShaderLab","createPosition","createRange","EOF","LexerUtils","isNum","char","numRegex","isLetter","letterRegex","isAlpha","alphaRegex","isNumOrLetter","numOrLetterRegex","isKeyword","tt","ID","_defineProperties","target","props","descriptor","defineProperty","key","_create_class","Constructor","protoProps","staticProps","BaseScanner","kws","_currentIndex","_column","_line","_source","_keywordsMap","getCurPosition","isEnd","getCurChar","advance","count","_advance","skipSpace","includeLineBreak","spaceChars","_spaceCharsWithBreak","_spaceChars","curChar","_checkIsIn","skipCommentsAndSpace","peek","to","offset","substring","scanText","text","throwError","pos","_len","msgs","_key","join","ScannerError","scanPairedText","balanced","skipLeading","level","scanToken","onToken","splitCharRegex","_this__keywordsMap_get","token","NOT_WORD","tokenType","range","checked","chars","current","Lexer","reset","tokenize","thisArg","body","f","y","t","label","sent","trys","ops","g","Iterator","verb","v","step","op","pop","e","_state","_scanWord","_scanNum","_getPosition","LEFT_ASSIGN","LEFT_OP","LE_OP","LEFT_ANGLE","RIGHT_ASSIGN","RIGHT_OP","GE_OP","RIGHT_ANGLE","INC_OP","ADD_ASSIGN","PLUS","DEC_OP","SUB_ASSIGN","DASH","EQ_OP","EQUAL","NE_OP","BANG","AND_OP","AMPERSAND","OR_OP","OR_ASSIGN","VERTICAL_BAR","XOR_OP","XOR_ASSIGN","CARET","MUL_ASSIGN","STAR","DIV_ASSIGN","SLASH","MOD_ASSIGN","PERCENT","LEFT_PAREN","RIGHT_PAREN","LEFT_BRACE","RIGHT_BRACE","LEFT_BRACKET","RIGHT_BRACKET","_scanNumAfterDot","DOT","COMMA","COLON","SEMICOLON","TILDE","QUESTION","_scanStringConst","buffer","STRING_CONST","FLOAT_CONSTANT","word","kt","_scanFloatSuffix","_scanIntegerSuffix","INT_CONSTANT","ShaderData","globalPrecisions","SymbolDataType","typeLexeme","arraySpecifier","SymbolInfo","ident","symbolType","astNode","dataType","FnSymbol","protoType","returnType","typeSpecifier","FN","StructSymbol","BaseSymbolTable","_table","insert","sm","_this__table_get","entry","symbolEqualCheck","Logger","warn","lookup","_step","_iterator","item","SymbolTableStack","_stack","newScope","scope","dropScope","_scope","ret","SymbolTable","exist","newSymbol","signature","existParams","paramSig","newSymbolParams","getAllFnSymbols","fnIdent","entries","filter","VarSymbol","isGlobalVariable","initAst","VAR","SematicAnalyzer","semanticStack","acceptRule","symbolTable","_shaderData","errors","_translationRuleTable","addTranslationRule","pid","rule","getTranslationRule","error","loc","param","err","CompilationError","_processingPassText","shaderData","Production","goal","derivation","id","_id","Grammar","productions","startSymbol","unshift","START","getProductionList","nonTerminal","isNullableNT","NT","find","EPSILON","getProductionByID","map","gsl","isGenericType","BuiltinFunctionTable","BuiltinFunction","_returnType","getReturnType","fn","genType","_create","ALL","list","_createWithScop","getFn","realType","fun","MAT2X3","MAT3X2","MAT2X4","MAT4X2","MAT3X4","MAT4X3","FRAGMENT","BuiltinVariableTable","BuiltinVariable","createVariable","getVar","VERTEX","StateItem","production","position","lookahead","_needReInfer","lookaheadSet","Set","la","add","addLookahead","ts","needReInfer","symbolByOffset","canReduce","coreItem","GrammarUtils","curSymbol","nextSymbol","State","cores","closured","_stateItemPool","_items","itemMapKey","getStateItemMapKey","createStateItem","mapId","newItem","cacheKey","getMapKey","state","closureMap","core","newState","items","ParserUtils","unwrapNodeByType","node","child","children","Token","nt","typeCompatible","ta","tb","isTerminal","printStatePool","logPath","output","console","log","values","tmp","padEnd","_step1","_iterator1","psItem","SymbolType","StructProp","typeInfo","TreeNode","_location","_children","codeGen","visitor","defaultCodeGen","semanticAnalyze","sa","_unwrapToken","_ignore","scope_brace","scope_end_brace","jump_statement","visitJumpStatement","conditionopt","for_rest_statement","condition","for_init_statement","iteration_statement","selection_statement","expression_statement","_type","_this__type","initializer_list","init","initializer","single_declaration","fullyType","visitSingleDeclaration","fully_specified_type","qualifierList","type_qualifier","concat","qualifier","single_type_qualifier","storage_qualifier","precision_qualifier","interpolation_qualifier","invariant_qualifier","type_specifier","arraySize","_this_children_","_this_children","size","isCustom","array_specifier","integerConstantExpr","integer_constant_expression_operator","operator","compute","b","integer_constant_expression","Number","symbolInfo","type_specifier_nonarray","ext_builtin_type_specifier_nonarray","init_declarator_list","singleDecl","initDeclList","identifier_list","idList","declaration","visitDeclaration","function_prototype","visitFunctionProtoType","declarator","parameterList","parameterInfoList","function_declarator","header","_this_parameterList","function_header","visitFunctionHeader","function_parameter_list","visitFunctionParameterList","decl","parameter_declaration","varSymbol","typeQualifier","parameterDeclarator","parameter_declarator","simple_statement","compound_statement","compound_statement_no_scope","statement","statement_list","visitStatementList","function_definition","visitFunctionDefinition","statements","function_call","visitFunctionCall","function_call_generic","fnSymbol","functionIdentifier","isBuiltin","paramList","builtinFn","function_call_parameter_list","expr","paramNodes","precision_specifier","function_identifier","visitFunctionIdentifier","ty","assignment_expression","assignment_operator","expression","primary_expression","postfix_expression","visitPostfixExpression","unary_operator","unary_expression","multiplicative_expression","exp1","exp2","additive_expression","shift_expression","relational_expression","equality_expression","and_expression","exclusive_or_expression","inclusive_or_expression","logical_and_expression","logical_xor_expression","logical_or_expression","conditional_expression","struct_specifier","propList","declList","struct_declaration_list","flat","struct_declaration","declaratorList","prop","struct_declarator_list","struct_declarator","variable_declaration","visitGlobalVariableDeclaration","variable_identifier","builtinVar","visitVariableIdentifier","_this_symbolInfo","gs_shader_program","createProductionWithOptions","options","astTypePool","opt","createProductionOptions","common","opts","addMapSetItem","k","isSubSet","sb","isActionEqual","action","printAction","actionInfo","Reduce","printProduction","deriv","gs","productionAndRules","global_declaration","GS_RenderQueueType","AND_ASSIGN","LALR1","grammar","firstSetMap","followSetMap","actionTable","gotoTable","_firstSetNTStack","generate","computeFirstSet","buildStateTable","startStateItemCore","startState","_extendState","_closure","newStates","_inferNextState","ns","_extendStateItem","productionList","newLookaheadSet","terminalExist","lastFirstSet","_step2","_iterator2","Utils","_step3","_iterator3","coreMap","stateActionTable","_this_actionTable_get","stateGotoTable","_this_gotoTable_get","stateItem","Accept","_addAction","nextItem","Shift","table","terminal","_computeFirstSetForNT","idx","findIndex","computingFS","curNT","firstSet","succeedFirstSet","ShaderTargetParser","_traceBackStack","sematicAnalyzer","parse","tokens","performance","now","traceBackStack","nextToken","loopCount","info","reduceProduction","translationRule","nextState","_printStack","str","_token_lexeme","_singleton","generator","curState","_type_of","obj","MacroDefine","macro","_argsLexemes","_replaceRegex","RegExp","expandFunctionBody","_this_args","PreprocessorError","replace","m","isFunction","PpKeyword","BlockInfo","sourceFile","rangeInFile","sourceMap","MapRange","sourceBlock","rangeInBlock","generatedLoc","sourceLoc","block","getSourceIndex","generatedIdx","_this_sourceLoc","PpSourceMap","mapRanges","addMapRange","mapRange","curRange","rangeContains","PpUtils","expand","segments","startIdx","seg","originSlice","generatedIdxEnd","assembleSegments","PpScanner","blockRange","macroLvl","scanDirective","expandOnToken","directive","_advanceToDirective","if","ifdef","ifndef","includes","endif","scanWordsUntilChar","nonLetterChar","scanWord","skipNonLetter","getShaderPosition","kw","_skipComments","_splitCharacters","scanQuotedString","string_const","scanToChar","scanMacroBranchChunk","startLvl","elif","else","chunk","nextDirective","scanPairedBlock","lc","rc","scanRemainMacro","peekNonSpace","scanInteger","integer","int_constant","scanLineRemain","comments","line_remain","commentRange","startsWith","PpParser","includeMap","basePathForIncludeKey","_definedMacros","_expandSegmentsStack","_branchMacros","addPredefinedMacro","_includeMap","_basePathForIncludeKey","_errors","macroBody","tk","scanner","_onToken","define","_parseDefine","undef","_parseUndef","_parseIf","_parseIfNdef","_parseIfDef","include","_parseInclude","expandSegments","reportError","includedPath","URL","href","ShaderPass","_shaderRootPath","expanded","_expandMacroChunk","content","_addEmptyReplace","bodyChunk","_parseMacroBranch","elseChunk","startPosition","constantExpr","_parseConstantExpression","endPosition","_parseLogicalOrExpression","operand1","_parseLogicalAndExpression","operand2","_parseEqualityExpression","_parseRelationalExpression","_parseShiftExpression","opPos","_parseAdditiveExpression","_parseMulticativeExpression","_parseUnaryExpression","parenExpr","_parseParenthesisExpression","_parseConstant","defined","withParen","isInteger","scannerOrFile","blockInfo","macroArgs","macroDefine","delete","curLvl","curIdx","Preprocessor","process","baseScanner","convertSourceIndex","VisitorContext","attributeList","attributeStructs","_referencedAttributeList","_referencedGlobals","_referencedVaryingList","isAttributeStruct","isVaryingStruct","_this_varyingStruct_ident","_this_varyingStruct","varyingStruct","referenceAttribute","referenceVarying","referenceGlobal","fnEntries","_passSymbolTable","passSymbolTable","context","GLESVisitor","CodeGenVisitor","_versionText","_extensions","visitShaderProgram","vertexEntry","fragmentEntry","vertex","vertexMain","fragment","_fragmentMain","data","fnNode","stage","varyStruct","_reportError","paramInfo","structSymbol","globalCode","_getGlobalText","getAttributeDeclare","getVaryingDeclare","sort","globalText","textList","lastLength","_serialized","keys","precision","postExpr","paramInfoList","plainParams","params","fullType","_curFn","cmd","returnVar","returnFnCall","GLES100Visitor","getVisitor","V3_GL_FragColor","GLES300Visitor","_extends","assign","hasOwnProperty","KeywordMap","GS_BlendState","GS_DepthState","GS_StencilState","GS_RasterState","GS_EditorProperties","GS_EditorMacros","GS_Editor","GS_Tags","GS_VertexShader","GS_FragmentShader","GS_SubShader","GS_Pass","GS_BlendFactor","GS_BlendOperation","GS_Bool","GS_Number","GS_CompareFunction","GS_StencilOperation","GS_CullMode","GS_UsePass","GS_Color","Scanner","scanNumber","scanToCharacter","s1","s2","EngineType","RenderStateType","ShaderContentParser","_isRenderStateDeclarator","_isEngineType","_symbolTable","_newScope","subShaders","globalContents","renderStates","constantMap","variableMap","_parseShaderStatements","shaderGlobalStatements","shaderRenderStates","subShader","curSubShaderGlobalStatements","constMap","passes","pass","isUsePass","passGlobalStatements","contents","braceLevel","_addGlobalStatement","_parseSubShader","_parseRenderQueueAssignment","_parseRenderStateDeclarationOrAssignment","_parseVariableDeclaration","stateToken","isDeclaration","variable","renderState","_parseRenderStatePropList","_parseRenderStatePropItem","renderStateProp","renderStateElementKey","RenderStateDataKey","Color","engineTypeProp","_engineType","RenderQueueType","tags","_parsePass","_parseTags","CompareFunction","StencilOperation","BlendOperation","BlendFactor","CullMode","_parseShaderPass","macros","backend","platformMacros","ShaderLib","preprocessorStart","ppdContent","_logErrors","lexer","parser","_parser","program","ShaderPlatformTarget","GLES100","_parseShaderContent","shaderSource","isEnabled","_shaderPositionPool","_shaderRangePool","version"],"mappings":"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"}