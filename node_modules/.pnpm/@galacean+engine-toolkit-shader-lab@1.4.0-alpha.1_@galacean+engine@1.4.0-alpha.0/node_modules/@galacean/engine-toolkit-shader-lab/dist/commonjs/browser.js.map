{"version":3,"file":"browser.js","sources":["../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_array_like_to_array.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_create_for_of_iterator_helper_loose.js","../../src/shaders/shadingPBR/index.ts","../../src/shaders/index.ts","../../src/index.ts"],"sourcesContent":["export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","import { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _create_for_of_iterator_helper_loose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n    if (it) return (it = it.call(o)).next.bind(it);\n    // Fallback for engines without symbol support\n    if (Array.isArray(o) || (it = _unsupported_iterable_to_array(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n\n        var i = 0;\n\n        return function() {\n            if (i >= o.length) return { done: true };\n\n            return { done: false, value: o[i++] };\n        };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _create_for_of_iterator_helper_loose as _ };\n","import AttributesPBR from \"./AttributesPBR.glsl\";\nimport BRDF from \"./BRDF.glsl\";\nimport LightProbe from \"./LightProbe.glsl\";\nimport ForwardPassPBR from \"./ForwardPassPBR.glsl\";\nimport FragmentPBR from \"./FragmentPBR.glsl\";\nimport LightDirectPBR from \"./LightDirectPBR.glsl\";\nimport LightIndirectPBR from \"./LightIndirectPBR.glsl\";\nimport ReflectionLobe from \"./ReflectionLobe.glsl\";\nimport VaryingsPBR from \"./VaryingsPBR.glsl\";\nimport VertexPBR from \"./VertexPBR.glsl\";\n\nexport default [\n  { source: ForwardPassPBR, includeKey: \"ForwardPassPBR.glsl\" },\n  { source: AttributesPBR, includeKey: \"AttributesPBR.glsl\" },\n  { source: VaryingsPBR, includeKey: \"VaryingsPBR.glsl\" },\n  { source: FragmentPBR, includeKey: \"FragmentPBR.glsl\" },\n  { source: LightDirectPBR, includeKey: \"LightDirectPBR.glsl\" },\n  { source: LightIndirectPBR, includeKey: \"LightIndirectPBR.glsl\" },\n  { source: VertexPBR, includeKey: \"VertexPBR.glsl\" },\n  { source: BRDF, includeKey: \"BRDF.glsl\" },\n  { source: LightProbe, includeKey: \"LightProbe.glsl\" },\n  { source: ReflectionLobe, includeKey: \"ReflectionLobe.glsl\" }\n];\n","import BlendShape from \"./BlendShape.glsl\";\nimport Common from \"./Common.glsl\";\nimport Fog from \"./Fog.glsl\";\nimport Light from \"./Light.glsl\";\nimport Normal from \"./Normal.glsl\";\nimport PBRSource from \"./PBR.gs\";\nimport Shadow from \"./Shadow.glsl\";\nimport ShadowSampleTent from \"./ShadowSampleTent.glsl\";\nimport Skin from \"./Skin.glsl\";\nimport Transform from \"./Transform.glsl\";\nimport shadingPBR from \"./shadingPBR\";\n\ninterface IShaderFragment {\n  includeKey: string;\n  source: string;\n}\n\nconst fragmentList: IShaderFragment[] = [\n  { source: BlendShape, includeKey: \"BlendShape.glsl\" },\n  { source: Common, includeKey: \"Common.glsl\" },\n  { source: Fog, includeKey: \"Fog.glsl\" },\n  { source: Light, includeKey: \"Light.glsl\" },\n  { source: Normal, includeKey: \"Normal.glsl\" },\n  { source: ShadowSampleTent, includeKey: \"ShadowSampleTent.glsl\" },\n  { source: Shadow, includeKey: \"Shadow.glsl\" },\n  { source: Transform, includeKey: \"Transform.glsl\" },\n  { source: Skin, includeKey: \"Skin.glsl\" },\n\n  ...shadingPBR\n];\nexport { PBRSource, fragmentList };\n","import { Shader, ShaderFactory } from \"@galacean/engine\";\nimport { PBRSource, fragmentList } from \"./shaders\";\n\nlet includeRegistered = false;\nlet shaderRegistered = false;\n\nexport function registerIncludes() {\n  if (includeRegistered) return;\n\n  for (const sourceFragment of fragmentList) {\n    ShaderFactory.registerInclude(sourceFragment.includeKey, sourceFragment.source);\n  }\n\n  includeRegistered = true;\n}\n\nexport function registerShader() {\n  if (shaderRegistered) return;\n\n  Shader.create(PBRSource);\n\n  shaderRegistered = true;\n}\n\n/**\n * @internal\n */\nexport { fragmentList };\n"],"names":["source","ForwardPassPBR","includeKey","AttributesPBR","VaryingsPBR","FragmentPBR","LightDirectPBR","LightIndirectPBR","VertexPBR","BRDF","LightProbe","ReflectionLobe","fragmentList","BlendShape","Common","Fog","Light","Normal","ShadowSampleTent","Shadow","Transform","Skin","shadingPBR","includeRegistered","shaderRegistered","registerIncludes","sourceFragment","ShaderFactory","registerInclude","registerShader","Shader","create","PBRSource"],"mappings":"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","x_google_ignoreList":[0,1,2]}