import { Quaternion, Vector3 } from "@galacean/engine";
import { XRManagerExtended } from "../../../XRManagerExtended";
import { XRTrackableFeature } from "../XRTrackableFeature";
import { XRAnchor } from "./XRAnchor";
import { XRRequestAnchor } from "./XRRequestAnchor";
/**
 * The manager of XR anchor tracking.
 */
export declare class XRAnchorTracking extends XRTrackableFeature<XRAnchor, XRRequestAnchor> {
    private _anchors;
    /**
     * The anchors to tracking.
     */
    get trackingAnchors(): readonly XRAnchor[];
    /**
     * The tracked anchors.
     */
    get trackedAnchors(): readonly XRAnchor[];
    /**
     * @param xrManager - The xr manager
     */
    constructor(xrManager: XRManagerExtended);
    /**
     * Add a anchor in XR space.
     * @param anchor - The anchor to be added
     */
    addAnchor(position: Vector3, rotation: Quaternion): XRAnchor;
    /**
     * Remove a anchor in XR space.
     * @param anchor - The anchor to be removed
     */
    removeAnchor(anchor: XRAnchor): void;
    /**
     * Remove all tracking anchors.
     */
    clearAnchors(): void;
    protected _generateTracked(): XRAnchor;
}
