{"version":3,"file":"browser.js","sources":["../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_is_native_reflect_construct.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_set_prototype_of.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_construct.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_create_class.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_inherits.js","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_instanceof.js","../src/input/XRTrackedInputDevice.ts","../src/session/XRSessionState.ts","../src/feature/camera/XRCameraManager.ts","../src/XRPose.ts","../src/input/XRTrackingState.ts","../src/input/XRInput.ts","../src/input/XRCamera.ts","../src/input/XRInputButton.ts","../src/input/XRController.ts","../src/input/XRInputEventType.ts","../src/input/XRTargetRayMode.ts","../src/input/XRInputManager.ts","../src/session/XRSessionMode.ts","../src/session/XRSessionManager.ts","../src/XRManagerExtended.ts","../src/feature/XRFeature.ts","../src/feature/XRFeatureType.ts","../src/feature/trackable/XRRequestTrackingState.ts","../src/feature/trackable/XRTrackableFeature.ts","../src/feature/trackable/XRTracked.ts","../src/feature/hitTest/TrackableType.ts","../src/feature/hitTest/XRHitResult.ts","../../../node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs","../src/feature/trackable/plane/XRPlaneMode.ts","../src/feature/trackable/XRRequestTracking.ts","../src/feature/trackable/plane/XRRequestPlane.ts","../src/feature/trackable/plane/XRTrackedPlane.ts","../src/feature/trackable/plane/XRPlaneTracking.ts","../src/feature/hitTest/XRHitTest.ts","../src/feature/trackable/anchor/XRAnchor.ts","../src/feature/trackable/anchor/XRRequestAnchor.ts","../src/feature/trackable/anchor/XRAnchorTracking.ts","../src/feature/trackable/image/XRRequestImage.ts","../src/feature/trackable/image/XRTrackedImage.ts","../src/feature/trackable/image/XRImageTracking.ts","../src/feature/trackable/image/XRReferenceImage.ts","../src/loader/XRReferenceImageDecoder.ts","../../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_extends.js","../src/loader/XRReferenceImageLoader.ts"],"sourcesContent":["function _is_native_reflect_construct() {\n    // Since Reflect.construct can't be properly polyfilled, some\n    // implementations (e.g. core-js@2) don't set the correct internal slots.\n    // Those polyfills don't allow us to subclass built-ins, so we need to\n    // use our fallback implementation.\n    try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Boolean object.\n        var result = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (_) {}\n    return (_is_native_reflect_construct = function() {\n        return !!result;\n    })();\n}\n\nexport { _is_native_reflect_construct as _ };\n","function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _ as _is_native_reflect_construct } from \"./_is_native_reflect_construct.js\";\nimport { _ as _set_prototype_of } from \"./_set_prototype_of.js\";\nfunction _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct()) _construct = Reflect.construct;\n    else {\n        _construct = function construct(Parent, args, Class) {\n            var a = [null];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n\n            if (Class) _set_prototype_of(instance, Class.prototype);\n\n            return instance;\n        };\n    }\n\n    return _construct.apply(null, arguments);\n}\nexport { _construct as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _set_prototype_of } from \"./_set_prototype_of.js\";\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else return left instanceof right;\n}\nexport { _instanceof as _ };\n","/**\n * Enumerates some input devices that can be tracked.(including status, posture and other information)\n */\nexport enum XRTrackedInputDevice {\n  /** Controller */\n  Controller,\n  /** Left controller */\n  LeftController,\n  /** Right controller */\n  RightController,\n  /** Camera */\n  Camera,\n  /** Left camera */\n  LeftCamera,\n  /** Right camera */\n  RightCamera,\n  /** Head */\n  LeftHand,\n  /** Right hand */\n  RightHand\n}\n","/**\n * The state of an XRSession.\n */\nexport enum XRSessionState {\n  /** Not initialized. */\n  None,\n  /** Initializing session. */\n  Initializing,\n  /** Initialized but not started. */\n  Initialized,\n  /** Running. */\n  Running,\n  /** Paused. */\n  Paused\n}\n","import { Camera, CameraClearFlags, CameraType, Matrix } from \"@galacean/engine\";\nimport { XRManagerExtended } from \"../../XRManagerExtended\";\nimport { XRCamera } from \"../../input/XRCamera\";\nimport { XRTrackedInputDevice } from \"../../input/XRTrackedInputDevice\";\nimport { XRSessionState } from \"../../session/XRSessionState\";\n\n/**\n * The manager of XR camera.\n */\nexport class XRCameraManager {\n  /**\n   * The fixed foveation of the camera.\n   */\n  get fixedFoveation(): number {\n    const { _platformSession: platformSession } = this._xrManager.sessionManager;\n    if (platformSession) {\n      return platformSession.getFixedFoveation();\n    } else {\n      throw new Error(\"XR session is not available.\");\n    }\n  }\n\n  set fixedFoveation(value: number) {\n    const { _platformSession: platformSession } = this._xrManager.sessionManager;\n    if (platformSession) {\n      platformSession.setFixedFoveation(value);\n    } else {\n      throw new Error(\"XR session is not available.\");\n    }\n  }\n\n  /**\n   * @internal\n   */\n  constructor(private _xrManager: XRManagerExtended) {}\n\n  /**\n   * Attach the camera to the specified input type(Camera, LeftCamera or RightCamera).\n   * The camera entity need to be moved to the XROrigin entity.\n   * @param type - The input type\n   * @param camera - The camera to be attached\n   */\n  attachCamera(\n    type: XRTrackedInputDevice.Camera | XRTrackedInputDevice.LeftCamera | XRTrackedInputDevice.RightCamera,\n    camera: Camera\n  ): void {\n    const xrCamera = this._xrManager.inputManager.getTrackedDevice<XRCamera>(type);\n    const preCamera = xrCamera._camera;\n    if (preCamera !== camera) {\n      // @ts-ignore\n      preCamera && (preCamera._cameraType = CameraType.Normal);\n      switch (type) {\n        case XRTrackedInputDevice.Camera:\n          // @ts-ignore\n          camera._cameraType = CameraType.XRCenterCamera;\n          break;\n        case XRTrackedInputDevice.LeftCamera:\n          // @ts-ignore\n          camera._cameraType = CameraType.XRLeftCamera;\n          break;\n        case XRTrackedInputDevice.RightCamera:\n          // @ts-ignore\n          camera._cameraType = CameraType.XRRightCamera;\n          break;\n        default:\n          break;\n      }\n      xrCamera._camera = camera;\n    }\n  }\n\n  /**\n   * Detach the camera from the specified input type.\n   * @param type - The input type\n   * @returns The camera that was detached\n   */\n  detachCamera(\n    type: XRTrackedInputDevice.Camera | XRTrackedInputDevice.LeftCamera | XRTrackedInputDevice.RightCamera\n  ): Camera {\n    const xrCamera = this._xrManager.inputManager.getTrackedDevice<XRCamera>(type);\n    const preCamera = xrCamera._camera;\n    // @ts-ignore\n    preCamera && (preCamera._cameraType = CameraType.Normal);\n    xrCamera._camera = null;\n    return preCamera;\n  }\n\n  /**\n   * @internal\n   */\n  _onSessionStart(): void {}\n\n  /**\n   * @internal\n   */\n  _onUpdate(): void {\n    const { _cameras: cameras } = this._xrManager.inputManager;\n    for (let i = 0, n = cameras.length; i < n; i++) {\n      const cameraDevice = cameras[i];\n      const { _camera: camera } = cameraDevice;\n      if (!camera) continue;\n      // sync position and rotation\n      const { transform } = camera.entity;\n      const { pose } = cameraDevice;\n      transform.position = pose.position;\n      transform.rotationQuaternion = pose.rotation;\n      // sync viewport\n      const { viewport } = camera;\n      const { x, y, width, height } = cameraDevice.viewport;\n      if (!(x === viewport.x && y === viewport.y && width === viewport.z && height === viewport.w)) {\n        camera.viewport = viewport.set(x, y, width, height);\n      }\n      // sync project matrix\n      if (!Matrix.equals(camera.projectionMatrix, cameraDevice.projectionMatrix)) {\n        camera.projectionMatrix = cameraDevice.projectionMatrix;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSessionExit(): void {}\n\n  /**\n   * @internal\n   */\n  _getIgnoreClearFlags(cameraType: CameraType): CameraClearFlags {\n    if (cameraType === CameraType.XRCenterCamera) {\n      if (this._xrManager.sessionManager.state === XRSessionState.Running) {\n        return CameraClearFlags.Color;\n      } else {\n        return CameraClearFlags.None;\n      }\n    } else {\n      return CameraClearFlags.None;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {}\n}\n","import { Matrix, Quaternion, Vector3 } from \"@galacean/engine\";\nimport { IXRPose } from \"@galacean/engine-design\";\n\n/**\n * Data for describing pose in the XR space.\n */\nexport class XRPose implements IXRPose {\n  /** The position of the pose in XR space. */\n  position: Vector3 = new Vector3();\n  /** The rotation of the pose in XR space. */\n  rotation: Quaternion = new Quaternion();\n  /** The matrix of the pose in XR space. */\n  matrix: Matrix = new Matrix();\n  /** The inverse matrix of the pose in XR space. */\n  inverseMatrix: Matrix = new Matrix();\n}\n","/**\n * Enum for XR tracking state.\n */\nexport enum XRTrackingState {\n  /** Not tracking */\n  NotTracking,\n  /** Tracking */\n  Tracking,\n  /** Lost track */\n  TrackingLost\n}\n","import { IXRInput } from \"@galacean/engine-design\";\nimport { XRTrackedInputDevice } from \"./XRTrackedInputDevice\";\nimport { XRTrackingState } from \"./XRTrackingState\";\n\nexport class XRInput implements IXRInput {\n  /** The tracking state of xr input. */\n  trackingState: XRTrackingState = XRTrackingState.NotTracking;\n\n  /**\n   * @internal\n   */\n  constructor(public type: XRTrackedInputDevice) {}\n}\n","import { IXRCamera } from \"@galacean/engine-design\";\nimport { Matrix, Rect, Camera } from \"@galacean/engine\";\nimport { XRPose } from \"../XRPose\";\nimport { XRInput } from \"./XRInput\";\n\n/**\n * The XR camera.\n */\nexport class XRCamera extends XRInput implements IXRCamera {\n  /** The pose of the camera in XR space. */\n  pose: XRPose = new XRPose();\n  /** The viewport of the camera. */\n  viewport: Rect = new Rect();\n  /** The projection matrix of the camera. */\n  projectionMatrix: Matrix = new Matrix();\n\n  /** @internal */\n  _camera: Camera;\n}\n","/**\n * Enum for XR input button.\n */\nexport enum XRInputButton {\n  /** None */\n  None = 0x0,\n  /** Select */\n  Select = 0x1,\n  /** Select */\n  Trigger = 0x1,\n  /** Squeeze */\n  Squeeze = 0x2,\n  /** TouchPad */\n  TouchPad = 0x4,\n  /** A */\n  AButton = 0x8,\n  /** B */\n  BButton = 0x10\n}\n","import { IXRController } from \"@galacean/engine-design\";\nimport { XRPose } from \"../XRPose\";\nimport { XRInput } from \"./XRInput\";\nimport { XRInputButton } from \"./XRInputButton\";\n\n/**\n * The XR controller.\n */\nexport class XRController extends XRInput implements IXRController {\n  /** The grip space pose of the controller in XR space. */\n  gripPose: XRPose = new XRPose();\n  /** The target ray space pose of the controller in XR space. */\n  targetRayPose: XRPose = new XRPose();\n  /** The currently pressed buttons of this controller. */\n  pressedButtons: XRInputButton = XRInputButton.None;\n  /** Record button lifted. */\n  down: XRInputButton = XRInputButton.None;\n  /** Record button pressed. */\n  up: XRInputButton = XRInputButton.None;\n\n  /**\n   *\n   * Returns whether the button is pressed.\n   * @param button - The button to check\n   * @returns Whether the button is pressed\n   */\n  isButtonDown(button: XRInputButton): boolean {\n    return (this.down & button) !== 0;\n  }\n\n  /**\n   * Returns whether the button is lifted.\n   * @param button - The button to check\n   * @returns Whether the button is lifted\n   */\n  isButtonUp(button: XRInputButton): boolean {\n    return (this.up & button) !== 0;\n  }\n\n  /**\n   * Returns whether the button is held down.\n   * @param button - The button to check\n   * @returns Whether the button is held down\n   */\n  isButtonHeldDown(button: XRInputButton): boolean {\n    return (this.pressedButtons & button) !== 0;\n  }\n}\n","export enum XRInputEventType {\n  SelectStart,\n  Select,\n  SelectEnd,\n  SqueezeStart,\n  Squeeze,\n  SqueezeEnd\n}\n","export enum XRTargetRayMode {\n  Gaze,\n  TrackedPointer,\n  Screen\n}\n","import { Engine, SafeLoopArray } from \"@galacean/engine\";\nimport { IXRInputEvent } from \"@galacean/engine-design\";\nimport { IXRListener, XRManagerExtended } from \"../XRManagerExtended\";\nimport { XRCamera } from \"./XRCamera\";\nimport { XRController } from \"./XRController\";\nimport { XRInput } from \"./XRInput\";\nimport { XRInputButton } from \"./XRInputButton\";\nimport { XRInputEventType } from \"./XRInputEventType\";\nimport { XRTargetRayMode } from \"./XRTargetRayMode\";\nimport { XRTrackedInputDevice } from \"./XRTrackedInputDevice\";\nimport { XRTrackingState } from \"./XRTrackingState\";\n\n/**\n * The manager of XR input.\n */\nexport class XRInputManager {\n  /** @internal */\n  _cameras: XRCamera[] = [];\n  /** @internal */\n  _controllers: XRController[] = [];\n\n  private _added: XRInput[] = [];\n  private _removed: XRInput[] = [];\n  private _trackedDevices: XRInput[] = [];\n  private _statusSnapshot: XRTrackingState[] = [];\n  private _listeners: SafeLoopArray<IXRListener> = new SafeLoopArray<IXRListener>();\n\n  /**\n   * @internal\n   */\n  constructor(\n    private _xrManager: XRManagerExtended,\n    private _engine: Engine\n  ) {\n    const { _trackedDevices: trackedDevices, _controllers: controllers, _cameras: cameras } = this;\n    for (let i = 0; i < 6; i++) {\n      switch (i) {\n        case XRTrackedInputDevice.Camera:\n        case XRTrackedInputDevice.LeftCamera:\n        case XRTrackedInputDevice.RightCamera:\n          cameras.push((trackedDevices[i] = new XRCamera(i)));\n          break;\n        case XRTrackedInputDevice.Controller:\n        case XRTrackedInputDevice.LeftController:\n        case XRTrackedInputDevice.RightController:\n          controllers.push((trackedDevices[i] = new XRController(i)));\n          break;\n        default:\n          break;\n      }\n    }\n    this._statusSnapshot.fill(XRTrackingState.NotTracking, 0, trackedDevices.length);\n  }\n\n  /**\n   * Returns the tracked device instance.\n   * @param type - The tracked input device type\n   * @returns The input instance\n   */\n  getTrackedDevice<T extends XRInput>(type: XRTrackedInputDevice): T {\n    return <T>this._trackedDevices[type];\n  }\n\n  /**\n   * Add a listener for tracked device changes.\n   * @param listener - The listener to add\n   */\n  addTrackedDeviceChangedListener(listener: (added: readonly XRInput[], removed: readonly XRInput[]) => void): void {\n    this._listeners.push({ fn: listener });\n  }\n\n  /**\n   * Remove a listener of tracked device changes.\n   * @param listener - The listener to remove\n   */\n  removeTrackedDeviceChangedListener(listener: (added: readonly XRInput[], removed: readonly XRInput[]) => void): void {\n    this._listeners.findAndRemove((value) => (value.fn === listener ? (value.destroyed = true) : false));\n  }\n\n  /**\n   * @internal\n   */\n  _onUpdate(): void {\n    const { _added: added, _removed: removed, _statusSnapshot: statusSnapshot } = this;\n    const { _trackedDevices: trackedDevices, _controllers: controllers } = this;\n    // Reset data\n    added.length = removed.length = 0;\n    for (let i = 0, n = controllers.length; i < n; i++) {\n      const controller = controllers[i];\n      controller.down = controller.up = 0;\n    }\n    // Handle events and update tracked devices\n    const { _platformSession: platformSession } = this._xrManager.sessionManager;\n    const { events: platformEvents } = platformSession;\n    for (let i = 0, n = platformEvents.length; i < n; i++) {\n      this._handleEvent(platformEvents[i]);\n    }\n    platformSession.resetEvents();\n    platformSession.frame.updateInputs(trackedDevices);\n    for (let i = 0, n = trackedDevices.length; i < n; i++) {\n      const input = trackedDevices[i];\n      if (!input) continue;\n      const nowState = input.trackingState;\n      if (statusSnapshot[i] === XRTrackingState.Tracking) {\n        if (nowState !== XRTrackingState.Tracking) {\n          removed.push(input);\n        }\n      } else {\n        if (nowState === XRTrackingState.Tracking) {\n          added.push(input);\n        }\n      }\n      statusSnapshot[i] = nowState;\n    }\n    // Dispatch change event\n    if (added.length > 0 || removed.length > 0) {\n      const listeners = this._listeners.getLoopArray();\n      for (let i = 0, n = listeners.length; i < n; i++) {\n        const listener = listeners[i];\n        !listener.destroyed && listener.fn(added, removed);\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {\n    this._listeners.findAndRemove((value) => (value.destroyed = true));\n  }\n\n  private _handleEvent(event: IXRInputEvent): void {\n    const input = <XRController>this._trackedDevices[event.input];\n    switch (event.targetRayMode) {\n      case XRTargetRayMode.TrackedPointer:\n        switch (event.type) {\n          case XRInputEventType.SelectStart:\n            input.down |= XRInputButton.Select;\n            input.pressedButtons |= XRInputButton.Select;\n            break;\n          case XRInputEventType.SelectEnd:\n            input.up |= XRInputButton.Select;\n            input.pressedButtons &= ~XRInputButton.Select;\n            break;\n          case XRInputEventType.SqueezeStart:\n            input.down |= XRInputButton.Squeeze;\n            input.pressedButtons |= XRInputButton.Squeeze;\n            break;\n          case XRInputEventType.SqueezeEnd:\n            input.up |= XRInputButton.Squeeze;\n            input.pressedButtons &= ~XRInputButton.Squeeze;\n            break;\n          default:\n            break;\n        }\n        break;\n      case XRTargetRayMode.Screen:\n        const { _engine: engine } = this;\n        // @ts-ignore\n        const target: EventTarget = engine.inputManager._pointerManager._target;\n        // @ts-ignore\n        const canvas = <HTMLCanvasElement>engine.canvas._webCanvas;\n        const { clientWidth, clientHeight } = canvas;\n        const clientX = clientWidth * (event.x + 1) * 0.5;\n        const clientY = clientHeight * (event.y + 1) * 0.5;\n        // @ts-ignore\n        switch (event.type) {\n          case XRInputEventType.SelectStart:\n            target.dispatchEvent(this._makeUpPointerEvent(\"pointerdown\", event.id, clientX, clientY));\n            break;\n          case XRInputEventType.Select:\n            target.dispatchEvent(this._makeUpPointerEvent(\"pointermove\", event.id, clientX, clientY));\n            break;\n          case XRInputEventType.SelectEnd:\n            target.dispatchEvent(this._makeUpPointerEvent(\"pointerup\", event.id, clientX, clientY));\n            target.dispatchEvent(this._makeUpPointerEvent(\"pointerleave\", event.id, clientX, clientY));\n            break;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _makeUpPointerEvent(type: string, pointerId: number, clientX: number, clientY: number): PointerEvent {\n    const eventInitDict: PointerEventInit = {\n      pointerId,\n      clientX,\n      clientY\n    };\n    switch (type) {\n      case \"pointerdown\":\n        eventInitDict.button = 0;\n        eventInitDict.buttons = 1;\n        break;\n      case \"pointermove\":\n        eventInitDict.button = -1;\n        eventInitDict.buttons = 1;\n        break;\n      case \"pointerup\":\n        eventInitDict.button = 0;\n        eventInitDict.buttons = 0;\n        break;\n      case \"pointerleave\":\n        eventInitDict.button = 0;\n        eventInitDict.buttons = 0;\n        break;\n      default:\n        break;\n    }\n    return new PointerEvent(type, eventInitDict);\n  }\n}\n","/**\n * The type of XR session.\n */\nexport enum XRSessionMode {\n  None,\n  AR,\n  VR\n}\n","import { Engine, SafeLoopArray } from \"@galacean/engine\";\nimport { IHardwareRenderer, IXRSession } from \"@galacean/engine-design\";\nimport { IXRListener, XRManagerExtended } from \"../XRManagerExtended\";\nimport { XRFeature } from \"../feature/XRFeature\";\nimport { XRSessionMode } from \"./XRSessionMode\";\nimport { XRSessionState } from \"./XRSessionState\";\n\n/**\n * XRSessionManager manages the life cycle of XR sessions.\n */\nexport class XRSessionManager {\n  /** @internal */\n  _platformSession: IXRSession;\n\n  private _mode: XRSessionMode = XRSessionMode.None;\n  private _state: XRSessionState = XRSessionState.None;\n  private _rhi: IHardwareRenderer;\n  private _raf: (callback: FrameRequestCallback) => number;\n  private _caf: (id: number) => void;\n  private _listeners: SafeLoopArray<IXRListener> = new SafeLoopArray<IXRListener>();\n\n  /**\n   * The current session mode( AR or VR ).\n   */\n  get mode(): XRSessionMode {\n    return this._mode;\n  }\n\n  /**\n   * Return the current session state.\n   */\n  get state(): XRSessionState {\n    return this._state;\n  }\n\n  /**\n   * Return a list of supported frame rates.(only available in-session)\n   */\n  get supportedFrameRate(): Float32Array {\n    return this._platformSession.supportedFrameRates;\n  }\n\n  /**\n   * Return the current frame rate as reported by the device.\n   */\n  get frameRate(): number {\n    return this._platformSession.frameRate;\n  }\n\n  /**\n   * @internal\n   */\n  constructor(\n    private _xrManager: XRManagerExtended,\n    private _engine: Engine\n  ) {\n    // @ts-ignore\n    this._rhi = _engine._hardwareRenderer;\n    this._raf = requestAnimationFrame.bind(window);\n    this._caf = cancelAnimationFrame.bind(window);\n    this._onSessionExit = this._onSessionExit.bind(this);\n  }\n\n  /**\n   * Check if the specified mode is supported.\n   * @param mode - The mode to check\n   * @returns A promise that resolves if the mode is supported, otherwise rejects\n   */\n  isSupportedMode(mode: XRSessionMode): Promise<void> {\n    return this._xrManager._platformDevice.isSupportedSessionMode(mode);\n  }\n\n  /**\n   * Run the session.\n   */\n  run(): void {\n    const { _platformSession: platformSession, _engine: engine } = this;\n    if (!platformSession) {\n      throw new Error(\"Without session to run.\");\n    }\n    platformSession.start();\n    this._setState(XRSessionState.Running);\n    this._xrManager._onSessionStart();\n    if (!engine.isPaused) {\n      engine.pause();\n      engine.resume();\n    }\n  }\n\n  /**\n   * Stop the session.\n   */\n  stop(): void {\n    const { _platformSession: platformSession, _engine: engine, _rhi: rhi } = this;\n    if (!platformSession) {\n      throw new Error(\"Without session to stop.\");\n    }\n    if (this._state !== XRSessionState.Running) {\n      throw new Error(\"Session is not running.\");\n    }\n    rhi._mainFrameBuffer = null;\n    rhi._mainFrameWidth = rhi._mainFrameHeight = 0;\n    platformSession.stop();\n    this._setState(XRSessionState.Paused);\n    this._xrManager._onSessionStop();\n    if (!engine.isPaused) {\n      engine.pause();\n      engine.resume();\n    }\n  }\n\n  /**\n   * Add a listening function for session state changes.\n   * @param listener - The listening function\n   */\n  addStateChangedListener(listener: (state: XRSessionState) => void): void {\n    this._listeners.push({ fn: listener });\n  }\n\n  /**\n   * Remove a listening function of session state changes.\n   * @param listener - The listening function\n   */\n  removeStateChangedListener(listener: (state: XRSessionState) => void): void {\n    this._listeners.findAndRemove((value) => (value.fn === listener ? (value.destroyed = true) : false));\n  }\n\n  /**\n   * @internal\n   */\n  _setState(value: XRSessionState) {\n    this._state = value;\n    const listeners = this._listeners.getLoopArray();\n    for (let i = 0, n = listeners.length; i < n; i++) {\n      const listener = listeners[i];\n      !listener.destroyed && listener.fn(value);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _initialize(mode: XRSessionMode, features: XRFeature[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const { _xrManager: xrManager } = this;\n      // Initialize all features\n      const platformFeatures = [];\n      for (let i = 0, n = features.length; i < n; i++) {\n        const { _platformFeature: platformFeature } = features[i];\n        platformFeature && platformFeatures.push(platformFeature);\n      }\n      xrManager._platformDevice\n        .requestSession(this._rhi, mode, platformFeatures)\n        .then((platformSession: IXRSession) => {\n          this._mode = mode;\n          this._platformSession = platformSession;\n          this._setState(XRSessionState.Initialized);\n          platformSession.setSessionExitCallBack(this._onSessionExit);\n          platformSession.addEventListener();\n          xrManager._onSessionInit();\n          resolve();\n        }, reject);\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _onUpdate() {\n    const { _rhi: rhi, _platformSession: platformSession } = this;\n    rhi._mainFrameBuffer = platformSession.framebuffer;\n    rhi._mainFrameWidth = platformSession.framebufferWidth;\n    rhi._mainFrameHeight = platformSession.framebufferHeight;\n  }\n\n  /**\n   * @internal\n   */\n  _getRequestAnimationFrame(): (callback: FrameRequestCallback) => number {\n    if (this._state === XRSessionState.Running) {\n      return this._platformSession.requestAnimationFrame;\n    } else {\n      return this._raf;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _getCancelAnimationFrame(): (id: number) => void {\n    if (this._state === XRSessionState.Running) {\n      return this._platformSession.cancelAnimationFrame;\n    } else {\n      return this._caf;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _exit(): Promise<void> {\n    const { _platformSession: platformSession } = this;\n    if (!platformSession) {\n      return Promise.reject(\"Without session to stop.\");\n    }\n    return platformSession.end();\n  }\n\n  private _onSessionExit() {\n    const { _rhi: rhi, _platformSession: platformSession, _engine: engine } = this;\n    rhi._mainFrameBuffer = null;\n    rhi._mainFrameWidth = rhi._mainFrameHeight = 0;\n    platformSession.removeEventListener();\n    this._platformSession = null;\n    this._setState(XRSessionState.None);\n    this._xrManager._onSessionExit();\n    if (!engine.isPaused) {\n      engine.pause();\n      engine.resume();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {\n    this._listeners.findAndRemove((value) => (value.destroyed = true));\n    this._raf = this._caf = null;\n  }\n}\n","import { CameraClearFlags, CameraType, Engine, Entity, XRManager } from \"@galacean/engine\";\nimport { IXRDevice } from \"@galacean/engine-design\";\nimport { XRFeature } from \"./feature/XRFeature\";\nimport { XRFeatureType } from \"./feature/XRFeatureType\";\nimport { XRCameraManager } from \"./feature/camera/XRCameraManager\";\nimport { XRInputManager } from \"./input/XRInputManager\";\nimport { XRSessionManager } from \"./session/XRSessionManager\";\nimport { XRSessionMode } from \"./session/XRSessionMode\";\nimport { XRSessionState } from \"./session/XRSessionState\";\n/**\n * @internal\n */\nexport class XRManagerExtended extends XRManager {\n  /** @internal */\n  static _featureMap: Map<TFeatureConstructor<XRFeature>, XRFeatureType> = new Map();\n\n  override inputManager: XRInputManager;\n  override sessionManager: XRSessionManager;\n  override cameraManager: XRCameraManager;\n\n  /** @internal */\n  _platformDevice: IXRDevice;\n\n  private _features: XRFeature[];\n  private _origin: Entity;\n\n  override get features(): XRFeature[] {\n    return this._features;\n  }\n\n  override get origin(): Entity {\n    return this._origin;\n  }\n\n  override set origin(value: Entity) {\n    if (this.sessionManager._platformSession) {\n      throw new Error(\"Cannot set origin when the session is initialized.\");\n    }\n    this._origin = value;\n  }\n\n  override isSupportedFeature<T extends XRFeature>(feature: TFeatureConstructor<T>): boolean {\n    return this._platformDevice.isSupportedFeature(XRManagerExtended._featureMap.get(feature));\n  }\n\n  override addFeature<T extends new (xrManager: XRManagerExtended, ...args: any[]) => XRFeature>(\n    type: T,\n    ...args: TFeatureConstructorArguments<T>\n  ): InstanceType<T> | null {\n    if (this.sessionManager._platformSession) {\n      throw new Error(\"Cannot add feature when the session is initialized.\");\n    }\n    if (!this._platformDevice.isSupportedFeature(XRManagerExtended._featureMap.get(type))) {\n      throw new Error(\"The feature is not supported\");\n    }\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      if (features[i] instanceof type) throw new Error(\"The feature has been added\");\n    }\n    const feature = new type(this, ...args) as InstanceType<T>;\n    features.push(feature);\n    return feature;\n  }\n\n  override getFeature<T extends XRFeature>(type: TFeatureConstructor<T>): T | null {\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      const feature = features[i];\n      if (feature instanceof type) {\n        return feature;\n      }\n    }\n  }\n\n  override enterXR(sessionMode: XRSessionMode, autoRun: boolean = true): Promise<void> {\n    const { sessionManager } = this;\n    if (sessionManager._platformSession) {\n      throw new Error(\"Please exit XR immersive mode first.\");\n    }\n    if (!this._origin) {\n      throw new Error(\"Please set origin before enter XR.\");\n    }\n    return new Promise((resolve, reject) => {\n      // 1. Check if this xr mode is supported\n      sessionManager.isSupportedMode(sessionMode).then(() => {\n        sessionManager._setState(XRSessionState.Initializing);\n        // 2. Initialize session\n        sessionManager._initialize(sessionMode, this.features).then(() => {\n          autoRun && sessionManager.run();\n          resolve();\n        }, reject);\n      }, reject);\n    });\n  }\n\n  override exitXR(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.sessionManager._exit().then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  override _initialize(engine: Engine, xrDevice: IXRDevice): void {\n    this._features = [];\n    this._platformDevice = xrDevice;\n    this.sessionManager = new XRSessionManager(this, engine);\n    this.inputManager = new XRInputManager(this, engine);\n    this.cameraManager = new XRCameraManager(this);\n  }\n\n  override _update(): void {\n    const { sessionManager } = this;\n    if (sessionManager.state !== XRSessionState.Running) return;\n    sessionManager._onUpdate();\n    this.inputManager._onUpdate();\n    this.cameraManager._onUpdate();\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      const feature = features[i];\n      feature.enabled && feature._onUpdate();\n    }\n  }\n\n  override _destroy(): void {\n    if (this.sessionManager._platformSession) {\n      this.exitXR().then(() => {\n        this.sessionManager._onDestroy();\n        this.inputManager._onDestroy();\n        this.cameraManager._onDestroy();\n      });\n    } else {\n      this.sessionManager._onDestroy();\n      this.inputManager._onDestroy();\n      this.cameraManager._onDestroy();\n    }\n  }\n\n  override _getRequestAnimationFrame(): (callback: FrameRequestCallback) => number {\n    return this.sessionManager._getRequestAnimationFrame();\n  }\n\n  override _getCancelAnimationFrame(): (id: number) => void {\n    return this.sessionManager._getCancelAnimationFrame();\n  }\n\n  override _getCameraIgnoreClearFlags(type: CameraType): CameraClearFlags {\n    return this.cameraManager._getIgnoreClearFlags(type);\n  }\n\n  /**\n   * @internal\n   */\n  _onSessionStop(): void {\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      const feature = features[i];\n      feature.enabled && feature._onSessionStop();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSessionInit(): void {\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      const feature = features[i];\n      feature.enabled && feature._onSessionInit();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSessionStart(): void {\n    this.cameraManager._onSessionStart();\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      const feature = features[i];\n      feature.enabled && feature._onSessionStart();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSessionExit(): void {\n    this.cameraManager._onSessionExit();\n    const { features } = this;\n    for (let i = 0, n = features.length; i < n; i++) {\n      const feature = features[i];\n      feature.enabled && feature._onSessionExit();\n      feature._onDestroy();\n    }\n    features.length = 0;\n  }\n}\n\n/**\n * @internal\n */\nexport function registerXRFeature<T extends XRFeature>(type: XRFeatureType): (feature: TFeatureConstructor<T>) => void {\n  return (feature: TFeatureConstructor<T>) => {\n    XRManagerExtended._featureMap.set(feature, type);\n  };\n}\n\nexport interface IXRListener {\n  fn: (...args: any[]) => any;\n  destroyed?: boolean;\n}\n\ntype TFeatureConstructor<T extends XRFeature> = new (xrManager: XRManagerExtended, ...args: any[]) => T;\n\ntype TFeatureConstructorArguments<T extends new (xrManager: XRManagerExtended, ...args: any[]) => XRFeature> =\n  T extends new (xrManager: XRManagerExtended, ...args: infer P) => XRFeature ? P : never;\n\ndeclare module \"@galacean/engine\" {\n  interface XRManager {\n    /** Input manager for XR. */\n    inputManager: XRInputManager;\n    /** Session manager for XR. */\n    sessionManager: XRSessionManager;\n    /** Camera manager for XR. */\n    cameraManager: XRCameraManager;\n\n    /** Initialized features. */\n    get features(): XRFeature[];\n\n    /**\n     * The current origin of XR space.\n     * @remarks The connection point between the virtual world and the real world ( XR Space )\n     */\n    get origin(): Entity;\n    set origin(value: Entity);\n\n    /**\n     * Check if the specified feature is supported.\n     * @param type - The type of the feature\n     * @returns If the feature is supported\n     */\n    isSupportedFeature<T extends XRFeature>(feature: TFeatureConstructor<T>): boolean;\n\n    /**\n     * Add feature based on the xr feature type.\n     * @param type - The type of the feature\n     * @param args - The constructor params of the feature\n     * @returns The feature which has been added\n     */\n    addFeature<T extends new (xrManager: XRManagerExtended, ...args: any[]) => XRFeature>(\n      type: T,\n      ...args: TFeatureConstructorArguments<T>\n    ): InstanceType<T> | null;\n\n    /**\n     * Get feature which match the type.\n     * @param type - The type of the feature\n     * @returns\tThe feature which match type\n     */\n    getFeature<T extends XRFeature>(type: TFeatureConstructor<T>): T | null;\n    /**\n     * Enter XR immersive mode, when you call this method, it will initialize and display the XR virtual world.\n     * @param sessionMode - The mode of the session\n     * @param autoRun - Whether to automatically run the session, when `autoRun` is set to true, xr will start working immediately after initialization. Otherwise, you need to call `sessionManager.run` later to work.\n     * @returns A promise that resolves if the XR virtual world is entered, otherwise rejects\n     */\n    enterXR(sessionMode: XRSessionMode, autoRun?: boolean): Promise<void>;\n    /**\n     * Exit XR immersive mode, when you call this method, it will destroy the XR virtual world.\n     * @returns A promise that resolves if the XR virtual world is destroyed, otherwise rejects\n     */\n    exitXR(): Promise<void>;\n\n    /**\n     * @internal\n     */\n    _initialize(engine: Engine, xrDevice: IXRDevice): void;\n\n    /**\n     * @internal\n     */\n    _getRequestAnimationFrame(): (callback: FrameRequestCallback) => number;\n\n    /**\n     * @internal\n     */\n    _getCancelAnimationFrame(): (id: number) => void;\n\n    /**\n     * @internal\n     */\n    _getCameraIgnoreClearFlags(type: CameraType): CameraClearFlags;\n\n    /**\n     * @internal\n     */\n    _update(): void;\n\n    /**\n     * @internal\n     */\n    _destroy(): void;\n  }\n}\n\n// 实现混入的函数\nfunction ApplyMixins(derivedCtor: any, baseCtors: any[]): void {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null)\n      );\n    });\n  });\n}\n\nApplyMixins(XRManager, [XRManagerExtended]);\n","import { IXRPlatformFeature } from \"@galacean/engine-design\";\nimport { XRManagerExtended } from \"../XRManagerExtended\";\nimport { XRFeatureType } from \"./XRFeatureType\";\n\n/**\n * The base class of XR feature manager.\n */\nexport abstract class XRFeature<T extends IXRPlatformFeature = IXRPlatformFeature> {\n  /** @internal */\n  _platformFeature: T;\n  protected _enabled: boolean = true;\n\n  /**\n   * Returns whether the feature is enabled.\n   */\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(value: boolean) {\n    if (this.enabled !== value) {\n      this._enabled = value;\n      value ? this._onEnable() : this._onDisable();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  constructor(\n    protected _xrManager: XRManagerExtended,\n    protected _type: XRFeatureType,\n    ...args: any[]\n  ) {\n    this._platformFeature = <T>_xrManager._platformDevice.createPlatformFeature(_type, ...args);\n    this._onEnable();\n  }\n\n  /**\n   * @internal\n   */\n  _onEnable(): void {}\n\n  /**\n   * @internal\n   */\n  _onDisable(): void {}\n\n  /**\n   * @internal\n   */\n  _onUpdate(): void {}\n\n  /**\n   * @internal\n   */\n  _onSessionInit(): void {}\n\n  /**\n   * @internal\n   */\n  _onSessionStart(): void {}\n\n  /**\n   * @internal\n   */\n  _onSessionStop(): void {}\n\n  /**\n   * @internal\n   */\n  _onSessionExit(): void {}\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {}\n}\n","export enum XRFeatureType {\n  AnchorTracking,\n  ImageTracking,\n  PlaneTracking,\n  HitTest\n}\n","export enum XRRequestTrackingState {\n  None,\n  Submitted,\n  Resolved,\n  Rejected,\n  Destroyed,\n  WaitingDestroy\n}\n","import { SafeLoopArray } from \"@galacean/engine\";\nimport { IXRTrackablePlatformFeature } from \"@galacean/engine-design\";\nimport { IXRListener } from \"../../XRManagerExtended\";\nimport { XRTrackingState } from \"../../input/XRTrackingState\";\nimport { XRFeature } from \"../XRFeature\";\nimport { XRFeatureType } from \"../XRFeatureType\";\nimport { XRRequestTracking } from \"./XRRequestTracking\";\nimport { XRRequestTrackingState } from \"./XRRequestTrackingState\";\nimport { XRTracked } from \"./XRTracked\";\n\n/**\n * The base class of XR trackable manager.\n */\nexport abstract class XRTrackableFeature<\n  T extends XRTracked = XRTracked,\n  K extends XRRequestTracking<T> = XRRequestTracking<T>\n> extends XRFeature<IXRTrackablePlatformFeature<T, K>> {\n  protected static _uuid = 0;\n\n  protected _requestTrackings: K[] = [];\n  protected _tracked: T[] = [];\n  protected _added: T[] = [];\n  protected _updated: T[] = [];\n  protected _removed: T[] = [];\n  protected _statusSnapshot: Record<number, XRTrackingState> = {};\n  private _listeners: SafeLoopArray<IXRListener> = new SafeLoopArray<IXRListener>();\n\n  /**\n   * Add a listening function for tracked object changes.\n   * @param listener - The listening function\n   */\n  addChangedListener(listener: (added: readonly T[], updated: readonly T[], removed: readonly T[]) => void): void {\n    this._listeners.push({ fn: listener });\n  }\n\n  /**\n   * Remove a listening function of tracked object changes.\n   * @param listener - The listening function\n   */\n  removeChangedListener(listener: (added: readonly T[], updated: readonly T[], removed: readonly T[]) => void): void {\n    this._listeners.findAndRemove((value) => (value.fn === listener ? (value.destroyed = true) : false));\n  }\n\n  override _onUpdate(): void {\n    const { _platformSession: platformSession } = this._xrManager.sessionManager;\n    const { frame: platformFrame } = platformSession;\n    const {\n      _platformFeature: platformFeature,\n      _requestTrackings: requestTrackings,\n      _statusSnapshot: statusSnapshot,\n      _tracked: allTracked,\n      _added: added,\n      _updated: updated,\n      _removed: removed\n    } = this;\n    if (!platformFrame || !requestTrackings.length) {\n      return;\n    }\n    if (!platformFeature.checkAvailable(platformSession, platformFrame, requestTrackings)) {\n      return;\n    }\n    added.length = updated.length = removed.length = 0;\n    platformFeature.getTrackedResult(platformSession, platformFrame, requestTrackings, this._generateTracked);\n    for (let i = 0, n = requestTrackings.length; i < n; i++) {\n      const requestTracking = requestTrackings[i];\n      switch (requestTracking.state) {\n        case XRRequestTrackingState.Destroyed:\n          const destroyedTracked = requestTracking.tracked;\n          for (let j = 0, n = destroyedTracked.length; j < n; j++) {\n            const tracked = destroyedTracked[j];\n            const trackId = tracked.id;\n            if (statusSnapshot[trackId] === XRTrackingState.Tracking) {\n              removed.push(tracked);\n              allTracked.splice(allTracked.indexOf(tracked), 1);\n            }\n            statusSnapshot[trackId] = XRTrackingState.NotTracking;\n          }\n          break;\n        case XRRequestTrackingState.Resolved:\n          const { tracked } = requestTracking;\n          for (let j = 0, n = tracked.length; j < n; j++) {\n            const trackedObject = tracked[j];\n            const trackId = trackedObject.id;\n            if (trackedObject.state === XRTrackingState.Tracking) {\n              if (statusSnapshot[trackId] === XRTrackingState.Tracking) {\n                updated.push(trackedObject);\n              } else {\n                added.push(trackedObject);\n                statusSnapshot[trackId] = XRTrackingState.Tracking;\n                allTracked.push(trackedObject);\n              }\n            } else {\n              if (statusSnapshot[trackId] === XRTrackingState.Tracking) {\n                removed.push(trackedObject);\n                allTracked.splice(allTracked.indexOf(trackedObject), 1);\n              }\n              statusSnapshot[trackId] = trackedObject.state;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n    for (let i = requestTrackings.length - 1; i >= 0; i--) {\n      requestTrackings[i].state === XRRequestTrackingState.Destroyed && requestTrackings.splice(i, 1);\n    }\n    if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n      const listeners = this._listeners.getLoopArray();\n      for (let i = 0, n = listeners.length; i < n; i++) {\n        const listener = listeners[i];\n        !listener.destroyed && listener.fn(added, updated, removed);\n      }\n    }\n  }\n\n  override _onSessionStop(): void {\n    this._added.length = this._updated.length = this._removed.length = 0;\n  }\n\n  override _onSessionExit(): void {\n    // prettier-ignore\n    this._requestTrackings.length = this._tracked.length = this._added.length = this._updated.length = this._removed.length  = 0;\n    this._listeners.findAndRemove((value) => (value.destroyed = true));\n  }\n\n  protected _addRequestTracking(requestTracking: K): void {\n    const { _platformFeature: platformFeature } = this;\n    if (this._xrManager.sessionManager._platformSession && !platformFeature.canModifyRequestTrackingAfterInit) {\n      throw new Error(XRFeatureType[this._type] + \" request tracking cannot be modified after initialization.\");\n    }\n    this._requestTrackings.push(requestTracking);\n    platformFeature.onAddRequestTracking(requestTracking);\n  }\n\n  protected _removeRequestTracking(requestTracking: K): void {\n    const { _platformFeature: platformFeature } = this;\n    if (this._xrManager.sessionManager._platformSession && !platformFeature.canModifyRequestTrackingAfterInit) {\n      throw new Error(XRFeatureType[this._type] + \" request tracking cannot be modified after initialization.\");\n    }\n    platformFeature.onDelRequestTracking(requestTracking);\n  }\n\n  protected _removeAllRequestTrackings(): void {\n    const { _platformFeature: platformFeature } = this;\n    if (this._xrManager.sessionManager._platformSession && !platformFeature.canModifyRequestTrackingAfterInit) {\n      throw new Error(XRFeatureType[this._type] + \" request tracking cannot be modified after initialization.\");\n    }\n    const { _requestTrackings: requestTrackings } = this;\n    for (let i = 0, n = requestTrackings.length; i < n; i++) {\n      platformFeature.onDelRequestTracking(requestTrackings[i]);\n    }\n  }\n\n  protected abstract _generateTracked(): T;\n}\n","import { IXRTracked } from \"@galacean/engine-design\";\nimport { XRPose } from \"../../XRPose\";\nimport { XRTrackingState } from \"../../input/XRTrackingState\";\n\n/**\n * The base class of XR tracked object.\n */\nexport abstract class XRTracked implements IXRTracked {\n  /** The unique id of the trackable. */\n  id: number;\n  /** The pose of the trackable in XR space. */\n  pose: XRPose = new XRPose();\n  /** The tracking state of the trackable. */\n  state: XRTrackingState = XRTrackingState.NotTracking;\n}\n","/**\n * Enum for the types of hit test that can be performed.\n * Note: currently only supports plane.\n */\nexport enum TrackableType {\n  /** Tracked plane. */\n  Plane = 0x1,\n  /** All tracked objects. */\n  All = 0x1\n}\n","import { IXRTracked } from \"@galacean/engine-design\";\nimport { TrackableType } from \"./TrackableType\";\nimport { Vector3 } from \"@galacean/engine\";\n\n/**\n * XR hit result.\n * It is the detection result returned by using XR HitTest feature.\n */\nexport class XRHitResult {\n  /** The position of the hit point. */\n  point: Vector3 = new Vector3();\n  /** The normal of the hit point. */\n  normal: Vector3 = new Vector3();\n  /** The distance from the origin of the ray to the hit point. */\n  distance: number;\n  /** The hit tracked object, such as IXRTrackedPlane. */\n  trackedObject: IXRTracked;\n  /** The type of tracked object detected, such as TrackableType.Plane */\n  trackableType: TrackableType;\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\n * Enumerates modes of plane in XR.\n */\nexport enum XRPlaneMode {\n  /** None. */\n  None = 0,\n  /** Horizontal */\n  Horizontal = 0b1,\n  /** Vertical */\n  Vertical = 0b10,\n  /** Includes horizontal and vertical. */\n  EveryThing = 0b11\n}\n","import { XRRequestTrackingState } from \"./XRRequestTrackingState\";\nimport { XRTracked } from \"./XRTracked\";\n\n/**\n * @internal\n */\nexport abstract class XRRequestTracking<T extends XRTracked> {\n  /** The status of the current request tracking. */\n  state: XRRequestTrackingState = XRRequestTrackingState.None;\n  /** Tracked instances, make up from the tracking data returned by Session. */\n  tracked: T[] = [];\n}\n","import { IXRRequestPlane } from \"@galacean/engine-design\";\nimport { XRRequestTracking } from \"../XRRequestTracking\";\nimport { XRTrackedPlane } from \"./XRTrackedPlane\";\n\n/**\n * The request plane in XR space.\n */\nexport class XRRequestPlane extends XRRequestTracking<XRTrackedPlane> implements IXRRequestPlane {\n  /**\n   * @param detectionMode - The plane detection mode\n   */\n  constructor(public detectionMode: number) {\n    super();\n  }\n}\n","import { Vector3 } from \"@galacean/engine\";\nimport { IXRTrackedPlane } from \"@galacean/engine-design\";\nimport { XRTracked } from \"../XRTracked\";\nimport { XRPlaneMode } from \"./XRPlaneMode\";\n\n/**\n * The tracked plane in XR space.\n */\nexport class XRTrackedPlane extends XRTracked implements IXRTrackedPlane {\n  /** Whether the detected plane is horizontal or vertical. */\n  planeMode: XRPlaneMode;\n  /** The points that make up this plane.\n   *  Note: These points are in the plane coordinate system,\n   *  and their Y coordinates are all zero.\n   */\n  polygon: Vector3[] = [];\n  /**\n   * Whether this frame changes the attributes of the plane.\n   * Note: Includes `polygon` but no `pose`.\n   */\n  attributesDirty: boolean = false;\n}\n","import { XRManagerExtended, registerXRFeature } from \"../../../XRManagerExtended\";\nimport { XRFeatureType } from \"../../XRFeatureType\";\nimport { XRTrackableFeature } from \"../XRTrackableFeature\";\nimport { XRPlaneMode } from \"./XRPlaneMode\";\nimport { XRRequestPlane } from \"./XRRequestPlane\";\nimport { XRTrackedPlane } from \"./XRTrackedPlane\";\n\n/**\n * The manager of plane tracking feature.\n */\n@registerXRFeature(XRFeatureType.PlaneTracking)\nexport class XRPlaneTracking extends XRTrackableFeature<XRTrackedPlane, XRRequestPlane> {\n  /**\n   * The plane detection mode.\n   */\n  get detectionMode(): XRPlaneMode {\n    return this._requestTrackings[0].detectionMode;\n  }\n\n  /**\n   * The tracked planes.\n   */\n  get trackedPlanes(): readonly XRTrackedPlane[] {\n    return this._tracked;\n  }\n\n  /**\n   * @param xrManager - The xr manager\n   * @param detectionMode - The plane detection mode\n   */\n  constructor(xrManager: XRManagerExtended, detectionMode: XRPlaneMode = XRPlaneMode.EveryThing) {\n    super(xrManager, XRFeatureType.PlaneTracking, detectionMode);\n    this._addRequestTracking(new XRRequestPlane(detectionMode));\n  }\n\n  protected override _generateTracked(): XRTrackedPlane {\n    const plane = new XRTrackedPlane();\n    plane.id = XRTrackableFeature._uuid++;\n    return plane;\n  }\n}\n","import { Plane, Ray, Vector2, Vector3 } from \"@galacean/engine\";\nimport { IXRTrackedPlane } from \"@galacean/engine-design\";\nimport { XRManagerExtended, registerXRFeature } from \"../../XRManagerExtended\";\nimport { XRCamera } from \"../../input/XRCamera\";\nimport { XRTrackedInputDevice } from \"../../input/XRTrackedInputDevice\";\nimport { XRSessionMode } from \"../../session/XRSessionMode\";\nimport { XRFeature } from \"../XRFeature\";\nimport { XRFeatureType } from \"../XRFeatureType\";\nimport { XRPlaneTracking } from \"../trackable/plane/XRPlaneTracking\";\nimport { TrackableType } from \"./TrackableType\";\nimport { XRHitResult } from \"./XRHitResult\";\n\n/**\n * The manager of XR hit test.\n */\n@registerXRFeature(XRFeatureType.HitTest)\nexport class XRHitTest extends XRFeature {\n  private _tempRay: Ray = new Ray();\n  private _tempPlane: Plane = new Plane();\n  private _tempVec2: Vector2 = new Vector2();\n  private _tempVec30: Vector3 = new Vector3();\n  private _tempVec31: Vector3 = new Vector3();\n  private _tempVec32: Vector3 = new Vector3();\n  private _tempVec33: Vector3 = new Vector3();\n  private _tempVec34: Vector3 = new Vector3();\n  private _tempVec35: Vector3 = new Vector3();\n\n  /**\n   * @param xrManager - The xr manager\n   */\n  constructor(xrManager: XRManagerExtended) {\n    super(xrManager, XRFeatureType.HitTest);\n  }\n\n  /**\n   * Hit test.\n   * @param ray - The ray to test\n   * @param type - The type of hit test\n   * @returns The hit result\n   */\n  hitTest(ray: Ray, type: TrackableType): XRHitResult[] {\n    const result = [];\n    if (type & TrackableType.Plane) {\n      this._hitTestPlane(ray, result);\n    }\n    return result;\n  }\n\n  /**\n   * Screen hit test.\n   * @param x - The x coordinate of the screen point\n   * @param y - The y coordinate of the screen point\n   * @param type - The type of hit test\n   * @returns The hit result\n   */\n  screenHitTest(x: number, y: number, type: TrackableType): XRHitResult[] {\n    const { _xrManager: xrManager } = this;\n    if (xrManager.sessionManager.mode !== XRSessionMode.AR) {\n      throw new Error(\"Only AR mode supports using screen ray hit test.\");\n    }\n    const { _camera: camera } = xrManager.inputManager.getTrackedDevice<XRCamera>(XRTrackedInputDevice.Camera);\n    if (!camera) {\n      throw new Error(\"No camera available.\");\n    }\n    const ray = camera.screenPointToRay(this._tempVec2.set(x, y), this._tempRay);\n    return this.hitTest(ray, type);\n  }\n\n  private _hitTestPlane(ray: Ray, result: XRHitResult[]): void {\n    const planeManager = this._xrManager.getFeature(XRPlaneTracking);\n    if (!planeManager || !planeManager.enabled) {\n      throw new Error(\"The plane estimation function needs to be turned on for plane hit test.\");\n    }\n    const { _tempPlane: plane, _tempVec30: normal, _tempVec31: hitPoint, _tempVec32: hitPointInPlane } = this;\n    const { trackedPlanes } = planeManager;\n    for (let i = 0, n = trackedPlanes.length; i < n; i++) {\n      const trackedPlane = trackedPlanes[i];\n      normal.set(0, 1, 0).transformNormal(trackedPlane.pose.matrix);\n      plane.normal.copyFrom(normal);\n      plane.distance = -Vector3.dot(normal, trackedPlane.pose.position);\n      const distance = ray.intersectPlane(plane);\n      if (distance >= 0) {\n        ray.getPoint(distance, hitPoint);\n        Vector3.transformToVec3(hitPoint, trackedPlane.pose.inverseMatrix, hitPointInPlane);\n        // Check if the hit position is within the plane boundary.\n        if (this._checkPointerWithinPlane(hitPointInPlane, trackedPlane)) {\n          const hitResult = new XRHitResult();\n          hitResult.point.copyFrom(hitPoint);\n          hitResult.normal.copyFrom(normal);\n          hitResult.distance = distance;\n          hitResult.trackedObject = trackedPlane;\n          hitResult.trackableType = TrackableType.Plane;\n          result.push(hitResult);\n        }\n      }\n    }\n  }\n\n  private _checkPointerWithinPlane(pointer: Vector3, plane: IXRTrackedPlane): boolean {\n    const { _tempVec33: preToCur, _tempVec34: preToPointer, _tempVec35: cross } = this;\n    const { polygon } = plane;\n    const length = polygon.length;\n    let prePoint = polygon[length - 1];\n    let side = 0;\n    for (let i = 0; i < length; i++) {\n      const curPoint = polygon[i];\n      Vector3.subtract(curPoint, prePoint, preToCur);\n      Vector3.subtract(pointer, prePoint, preToPointer);\n      Vector3.cross(preToCur, preToPointer, cross);\n      const y = cross.y;\n      if (side === 0) {\n        if (y > 0) {\n          side = 1;\n        } else if (y < 0) {\n          side = -1;\n        }\n      } else {\n        if ((y > 0 && side < 0) || (y < 0 && side > 0)) {\n          return false;\n        }\n      }\n      prePoint = curPoint;\n    }\n    return true;\n  }\n}\n","import { XRTracked } from \"../XRTracked\";\n\n/**\n * The anchor in XR space.\n */\nexport class XRAnchor extends XRTracked {}\n","import { Quaternion, Vector3 } from \"@galacean/engine\";\nimport { IXRRequestAnchor } from \"@galacean/engine-design\";\nimport { XRRequestTracking } from \"../XRRequestTracking\";\nimport { XRAnchor } from \"./XRAnchor\";\n\n/**\n * The request anchor in XR space.\n */\nexport class XRRequestAnchor extends XRRequestTracking<XRAnchor> implements IXRRequestAnchor {\n  /**\n   * @param position - Requests the position of the anchor to be added\n   * @param rotation - Requests the rotation of the anchor to be added\n   */\n  constructor(\n    public position: Vector3,\n    public rotation: Quaternion\n  ) {\n    super();\n  }\n}\n","import { Quaternion, Vector3 } from \"@galacean/engine\";\nimport { XRManagerExtended, registerXRFeature } from \"../../../XRManagerExtended\";\nimport { XRFeatureType } from \"../../XRFeatureType\";\nimport { XRTrackableFeature } from \"../XRTrackableFeature\";\nimport { XRAnchor } from \"./XRAnchor\";\nimport { XRRequestAnchor } from \"./XRRequestAnchor\";\n\n/**\n * The manager of XR anchor tracking.\n */\n@registerXRFeature(XRFeatureType.AnchorTracking)\nexport class XRAnchorTracking extends XRTrackableFeature<XRAnchor, XRRequestAnchor> {\n  private _anchors: XRAnchor[] = [];\n\n  /**\n   * The anchors to tracking.\n   */\n  get trackingAnchors(): readonly XRAnchor[] {\n    return this._anchors;\n  }\n\n  /**\n   * The tracked anchors.\n   */\n  get trackedAnchors(): readonly XRAnchor[] {\n    return this._tracked;\n  }\n\n  /**\n   * @param xrManager - The xr manager\n   */\n  constructor(xrManager: XRManagerExtended) {\n    super(xrManager, XRFeatureType.AnchorTracking);\n  }\n\n  /**\n   * Add a anchor in XR space.\n   * @param anchor - The anchor to be added\n   */\n  addAnchor(position: Vector3, rotation: Quaternion): XRAnchor {\n    if (!this._enabled) {\n      throw new Error(\"Cannot add an anchor from a disabled anchor manager.\");\n    }\n    const { _anchors: anchors } = this;\n    const requestAnchor = new XRRequestAnchor(position, rotation);\n    const xrAnchor = this._generateTracked();\n    requestAnchor.tracked[0] = xrAnchor;\n    this._addRequestTracking(requestAnchor);\n    anchors.push(xrAnchor);\n    return xrAnchor;\n  }\n\n  /**\n   * Remove a anchor in XR space.\n   * @param anchor - The anchor to be removed\n   */\n  removeAnchor(anchor: XRAnchor): void {\n    if (!this._enabled) {\n      throw new Error(\"Cannot remove an anchor from a disabled anchor manager.\");\n    }\n    const { _requestTrackings: requestTrackings, _anchors: anchors } = this;\n    for (let i = 0, n = requestTrackings.length; i < n; i++) {\n      const requestAnchor = requestTrackings[i];\n      if (requestAnchor.tracked[0] === anchor) {\n        this._removeRequestTracking(requestAnchor);\n        break;\n      }\n    }\n    anchors.splice(anchors.indexOf(anchor), 1);\n  }\n\n  /**\n   * Remove all tracking anchors.\n   */\n  clearAnchors(): void {\n    if (!this._enabled) {\n      throw new Error(\"Cannot remove anchors from a disabled anchor manager.\");\n    }\n    this._removeAllRequestTrackings();\n  }\n\n  protected override _generateTracked(): XRAnchor {\n    const anchor = new XRAnchor();\n    anchor.id = XRTrackableFeature._uuid++;\n    return anchor;\n  }\n}\n","import { IXRRequestImage } from \"@galacean/engine-design\";\nimport { XRRequestTracking } from \"../XRRequestTracking\";\nimport { XRReferenceImage } from \"./XRReferenceImage\";\nimport { XRTrackedImage } from \"./XRTrackedImage\";\n\n/**\n * The request image in XR space.\n */\nexport class XRRequestImage extends XRRequestTracking<XRTrackedImage> implements IXRRequestImage {\n  /**\n   * @param image - The image to be tracked\n   */\n  constructor(public image: XRReferenceImage) {\n    super();\n  }\n}\n","import { IXRTrackedImage } from \"@galacean/engine-design\";\nimport { XRTracked } from \"../XRTracked\";\nimport { XRReferenceImage } from \"./XRReferenceImage\";\n\n/**\n * A tracked image in XR space.\n */\nexport class XRTrackedImage extends XRTracked implements IXRTrackedImage {\n  /** The reference image which was used to detect this image in the environment.  */\n  referenceImage: XRReferenceImage;\n  /** The width of the image in meters in the physical world. */\n  measuredPhysicalWidth: number;\n}\n","import { XRManagerExtended, registerXRFeature } from \"../../../XRManagerExtended\";\nimport { XRFeatureType } from \"../../XRFeatureType\";\nimport { XRTrackableFeature } from \"../XRTrackableFeature\";\nimport { XRReferenceImage } from \"./XRReferenceImage\";\nimport { XRRequestImage } from \"./XRRequestImage\";\nimport { XRTrackedImage } from \"./XRTrackedImage\";\n\n/**\n * The manager of XR image tracking.\n */\n@registerXRFeature(XRFeatureType.ImageTracking)\nexport class XRImageTracking extends XRTrackableFeature<XRTrackedImage, XRRequestImage> {\n  private _trackingImages: XRReferenceImage[];\n  /**\n   * The image to tracking.\n   */\n  get trackingImages(): readonly XRReferenceImage[] {\n    return this._trackingImages;\n  }\n\n  /**\n   * The tracked images.\n   */\n  get trackedImages(): readonly XRTrackedImage[] {\n    return this._tracked;\n  }\n\n  /**\n   * @param xrManager - The xr manager\n   * @param trackingImages - The images to be tracked\n   */\n  constructor(xrManager: XRManagerExtended, trackingImages: XRReferenceImage[]) {\n    super(xrManager, XRFeatureType.ImageTracking, trackingImages);\n    this._trackingImages = trackingImages;\n    const imageLength = trackingImages ? trackingImages.length : 0;\n    if (imageLength > 0) {\n      for (let i = 0, n = trackingImages.length; i < n; i++) {\n        this._addRequestTracking(new XRRequestImage(trackingImages[i]));\n      }\n    } else {\n      console.warn(\"No image to be tracked.\");\n    }\n  }\n\n  protected override _generateTracked(): XRTrackedImage {\n    const image = new XRTrackedImage();\n    image.id = XRTrackableFeature._uuid++;\n    return image;\n  }\n}\n","import { IXRReferenceImage } from \"@galacean/engine-design\";\n\n/**\n *  A reference image is an image to look for in the physical environment.\n */\nexport class XRReferenceImage implements IXRReferenceImage {\n  /**\n   * Create a reference image.\n   * @param name - The name of the image to be tracked\n   * @param imageSource - The image to be tracked\n   * @param physicalWidth - The expected physical width measurement for the real-world image being tracked in meters\n   */\n  constructor(\n    public name: string,\n    public imageSource: ImageBitmapSource,\n    public physicalWidth: number\n  ) {}\n}\n","import { BufferReader, Engine, decoder } from \"@galacean/engine\";\nimport { XRReferenceImage } from \"../feature/trackable/image/XRReferenceImage\";\n\n@decoder(\"XRReferenceImage\")\nexport class XRReferenceImageDecoder {\n  static decode(engine: Engine, bufferReader: BufferReader): Promise<XRReferenceImage> {\n    return new Promise((resolve, reject) => {\n      const physicalWidth = bufferReader.nextFloat32();\n      bufferReader.nextUint8();\n      const img = new Image();\n      img.onload = () => {\n        resolve(new XRReferenceImage(\"\", img, physicalWidth));\n      };\n      img.src = URL.createObjectURL(new window.Blob([bufferReader.nextImagesData(1)[0]]));\n    });\n  }\n}\n","function _extends() {\n    _extends = Object.assign || function assign(target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n        }\n\n        return target;\n    };\n\n    return _extends.apply(this, arguments);\n}\nexport { _extends as _ };\n","import { AssetPromise, decode, Loader, LoadItem, resourceLoader, ResourceManager } from \"@galacean/engine\";\nimport { XRReferenceImage } from \"../feature/trackable/image/XRReferenceImage\";\n\n@resourceLoader(\"XRReferenceImage\", [])\nexport class XRReferenceImageLoader extends Loader<XRReferenceImage> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<XRReferenceImage> {\n    return new AssetPromise((resolve, reject) => {\n      resourceManager\n        // @ts-ignore\n        ._request<ArrayBuffer>(item.url, { ...item, type: \"arraybuffer\" })\n        .then((data) => {\n          decode<XRReferenceImage>(data, resourceManager.engine).then((referenceImage) => {\n            resolve(referenceImage);\n          });\n        })\n        .catch(reject);\n    });\n  }\n}\n"],"names":["XRTrackedInputDevice","XRSessionState","XRCameraManager","_xrManager","attachCamera","type","camera","xrCamera","inputManager","getTrackedDevice","preCamera","_camera","_cameraType","CameraType","Normal","Camera","XRCenterCamera","LeftCamera","XRLeftCamera","RightCamera","XRRightCamera","detachCamera","_onSessionStart","_onUpdate","_cameras","cameras","i","n","length","cameraDevice","transform","entity","pose","position","rotationQuaternion","rotation","viewport","x","y","width","height","z","w","set","Matrix","equals","projectionMatrix","_onSessionExit","_getIgnoreClearFlags","cameraType","sessionManager","state","Running","CameraClearFlags","Color","None","_onDestroy","fixedFoveation","_platformSession","platformSession","getFixedFoveation","Error","value","setFixedFoveation","XRPose","Vector3","Quaternion","matrix","inverseMatrix","XRTrackingState","XRInput","trackingState","NotTracking","XRCamera","Rect","XRInputButton","XRController","gripPose","targetRayPose","pressedButtons","down","up","isButtonDown","button","isButtonUp","isButtonHeldDown","XRInputEventType","XRTargetRayMode","XRInputManager","_engine","_controllers","_added","_removed","_trackedDevices","_statusSnapshot","_listeners","SafeLoopArray","trackedDevices","controllers","push","Controller","LeftController","RightController","fill","addTrackedDeviceChangedListener","listener","fn","removeTrackedDeviceChangedListener","findAndRemove","destroyed","added","removed","statusSnapshot","controller","platformEvents","events","_handleEvent","resetEvents","frame","updateInputs","input","nowState","Tracking","listeners","getLoopArray","event","targetRayMode","TrackedPointer","SelectStart","Select","SelectEnd","SqueezeStart","Squeeze","SqueezeEnd","Screen","engine","target","_pointerManager","_target","canvas","_webCanvas","clientWidth","clientHeight","clientX","clientY","dispatchEvent","_makeUpPointerEvent","id","pointerId","eventInitDict","buttons","PointerEvent","XRSessionMode","XRSessionManager","_mode","_state","_rhi","_hardwareRenderer","_raf","requestAnimationFrame","bind","window","_caf","cancelAnimationFrame","isSupportedMode","mode","_platformDevice","isSupportedSessionMode","run","start","_setState","isPaused","pause","resume","stop","rhi","_mainFrameBuffer","_mainFrameWidth","_mainFrameHeight","Paused","_onSessionStop","addStateChangedListener","removeStateChangedListener","_initialize","features","Promise","resolve","reject","platformFeatures","platformFeature","_platformFeature","xrManager","requestSession","then","Initialized","setSessionExitCallBack","addEventListener","_onSessionInit","framebuffer","framebufferWidth","framebufferHeight","_getRequestAnimationFrame","_getCancelAnimationFrame","_exit","end","removeEventListener","supportedFrameRate","supportedFrameRates","frameRate","XRManagerExtended","isSupportedFeature","feature","_featureMap","get","addFeature","args","getFeature","enterXR","sessionMode","autoRun","_origin","Initializing","exitXR","xrDevice","_features","cameraManager","_update","enabled","_destroy","_getCameraIgnoreClearFlags","origin","XRManager","Map","registerXRFeature","ApplyMixins","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","defineProperty","getOwnPropertyDescriptor","create","XRFeature","_type","_enabled","createPlatformFeature","_onEnable","_onDisable","XRFeatureType","XRRequestTrackingState","XRTrackableFeature","_requestTrackings","_tracked","_updated","addChangedListener","removeChangedListener","platformFrame","requestTrackings","allTracked","updated","checkAvailable","getTrackedResult","_generateTracked","requestTracking","Destroyed","destroyedTracked","tracked","j","trackId","splice","indexOf","Resolved","trackedObject","_addRequestTracking","canModifyRequestTrackingAfterInit","onAddRequestTracking","_removeRequestTracking","onDelRequestTracking","_removeAllRequestTrackings","_uuid","XRTracked","TrackableType","XRHitResult","point","normal","XRPlaneMode","XRRequestTracking","XRRequestPlane","detectionMode","XRTrackedPlane","polygon","attributesDirty","XRPlaneTracking","EveryThing","PlaneTracking","plane","trackedPlanes","XRHitTest","HitTest","_tempRay","Ray","_tempPlane","Plane","_tempVec2","Vector2","_tempVec30","_tempVec31","_tempVec32","_tempVec33","_tempVec34","_tempVec35","hitTest","ray","result","_hitTestPlane","screenHitTest","AR","screenPointToRay","planeManager","hitPoint","hitPointInPlane","trackedPlane","transformNormal","copyFrom","distance","dot","intersectPlane","getPoint","transformToVec3","_checkPointerWithinPlane","hitResult","trackableType","pointer","preToCur","preToPointer","cross","prePoint","side","curPoint","subtract","XRAnchor","XRRequestAnchor","XRAnchorTracking","AnchorTracking","_anchors","addAnchor","anchors","requestAnchor","xrAnchor","removeAnchor","anchor","clearAnchors","trackingAnchors","trackedAnchors","XRRequestImage","image","XRTrackedImage","XRImageTracking","trackingImages","ImageTracking","_trackingImages","imageLength","console","warn","trackedImages","XRReferenceImage","imageSource","physicalWidth","XRReferenceImageDecoder","decode","bufferReader","nextFloat32","nextUint8","img","Image","onload","src","URL","createObjectURL","Blob","nextImagesData","XRReferenceImageLoader","load","item","resourceManager","AssetPromise","_request","url","data","referenceImage","catch","Loader"],"mappings":"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"}