import { log } from '../log.js';
import '@galacean/engine';

var ShaderHook = /*#__PURE__*/ function() {
    function ShaderHook(gl) {
        this.shaders = 0;
        this.realAttachShader = gl.attachShader;
        this.realDetachShader = gl.detachShader;
        gl.attachShader = this.hookedAttachShader.bind(this);
        gl.detachShader = this.hookedDetachShader.bind(this);
        this.hooked = true;
        this.gl = gl;
        log("Shader is hooked.");
    }
    var _proto = ShaderHook.prototype;
    _proto.hookedAttachShader = function hookedAttachShader(program, shader) {
        this.realAttachShader.call(this.gl, program, shader);
        this.shaders++;
        log("AttachShader:", shader, "shaders: " + this.shaders);
    };
    _proto.hookedDetachShader = function hookedDetachShader(program, shader) {
        this.realDetachShader.call(this.gl, program, shader);
        this.shaders--;
        log("DetachShader. shaders: " + this.shaders);
    };
    _proto.reset = function reset() {
        this.shaders = 0;
    };
    _proto.release = function release() {
        if (this.hooked) {
            this.gl.attachShader = this.realAttachShader;
            this.gl.detachShader = this.realDetachShader;
        }
        this.hooked = false;
    };
    return ShaderHook;
}();

export { ShaderHook as default };
//# sourceMappingURL=ShaderHook.js.map
