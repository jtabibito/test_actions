{"version":3,"file":"Core.js","sources":["../../src/Core.ts"],"sourcesContent":["import DrawCallHook from \"./hooks/DrawCallHook\";\nimport { RequestHook } from \"./hooks/RequestHook\";\nimport ShaderHook from \"./hooks/ShaderHook\";\nimport TextureHook from \"./hooks/TextureHook\";\n\ndeclare global {\n  interface Performance {\n    memory: any;\n  }\n}\n\n/**\n * Hook gl to calculate stats\n */\nexport class Core {\n  private readonly gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private drawCallHook: DrawCallHook;\n  private textureHook: TextureHook;\n  private shaderHook: ShaderHook;\n  private requestHook: RequestHook;\n  private samplingFrames: number = 60;\n  private samplingIndex: number = 0;\n  private updateCounter: number = 0;\n  private updateTime: number = 0;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.gl = gl;\n    this.hook(gl);\n  }\n\n  private hook(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n    this.drawCallHook = new DrawCallHook(gl);\n    this.textureHook = new TextureHook(gl);\n    this.shaderHook = new ShaderHook(gl);\n    this.requestHook = new RequestHook();\n  }\n\n  /**\n   * reset draw call hook\n   */\n  public reset(): void {\n    this.drawCallHook && this.drawCallHook.reset();\n  }\n\n  /**\n   * release hook\n   */\n  public release(): void {\n    this.drawCallHook && this.drawCallHook.release();\n    this.textureHook && this.textureHook.release();\n    this.shaderHook && this.shaderHook.release();\n  }\n\n  /**\n   * update performance data\n   */\n  public update(): PerformanceData {\n    this.updateCounter++;\n    let now = performance.now();\n    if (now - this.updateTime < 1000) {\n      return;\n    }\n\n    if (this.samplingIndex !== this.samplingFrames) {\n      this.reset();\n      this.samplingIndex++;\n      return;\n    }\n\n    this.samplingIndex = 0;\n\n    let data: PerformanceData = {\n      fps: Math.round((this.updateCounter * 1000) / (now - this.updateTime)),\n      memory:\n        performance.memory &&\n        (performance.memory.usedJSHeapSize / 1048576) >> 0,\n      drawCall: this.drawCallHook.drawCall,\n      triangles: this.drawCallHook.triangles,\n      lines: this.drawCallHook.lines,\n      points: this.drawCallHook.points,\n      textures: this.textureHook.textures,\n      size: this.requestHook.size,\n      shaders: this.shaderHook.shaders,\n      webglContext:\n        window.hasOwnProperty(\"WebGL2RenderingContext\") &&\n        this.gl instanceof WebGL2RenderingContext\n          ? \"2.0\"\n          : \"1.0\",\n    };\n\n    this.reset();\n\n    this.updateCounter = 0;\n    this.updateTime = now;\n\n    return data;\n  }\n}\n\ninterface PerformanceData {\n  fps: number;\n  memory: number;\n  drawCall: number;\n  triangles: number;\n  lines: number;\n  points: number;\n  textures: number;\n  shaders: number;\n  size: string;\n  webglContext: string;\n}\n"],"names":["Core","gl","samplingFrames","samplingIndex","updateCounter","updateTime","hook","drawCallHook","DrawCallHook","textureHook","TextureHook","shaderHook","ShaderHook","requestHook","RequestHook","reset","release","update","now","performance","data","fps","Math","round","memory","usedJSHeapSize","drawCall","triangles","lines","points","textures","size","shaders","webglContext","window","hasOwnProperty","WebGL2RenderingContext"],"mappings":"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"}