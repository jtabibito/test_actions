{"version":3,"file":"browser.js","sources":["../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_create_class.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_set_prototype_of.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_inherits.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.7/node_modules/@swc/helpers/esm/_instanceof.js","../../src/hooks/RequestHook.ts","../../src/log.ts","../../src/hooks/DrawCallHook.ts","../../src/hooks/ShaderHook.ts","../../src/hooks/TextureHook.ts","../../src/Core.ts","../../src/Monitor.ts","../../src/Stats.ts"],"sourcesContent":["function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _set_prototype_of } from \"./_set_prototype_of.js\";\n\nexport function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","export function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n        return !!right[Symbol.hasInstance](left);\n    } else return left instanceof right;\n}\nexport { _instanceof as _ };\n","\nlet requestSize = 0;\n\nexport function hookRequest() {\n\n  let originalSend = XMLHttpRequest.prototype.send;\n  \n  const cacheMap = new Map<string, number>();\n  function addRequestSize(url: string, size: number) {\n    if (cacheMap.get(url) == undefined) {\n      cacheMap.set(url, size);\n      requestSize += size;\n    }\n  }\n  \n  XMLHttpRequest.prototype.send = function (body) {\n    this.addEventListener(\n      \"load\",\n      function () {\n        let size = 0;\n        if (this.responseType === \"\" || this.responseType === \"text\") {\n          size = new Blob([JSON.stringify(this.responseText)]).size;\n        } else if (this.response instanceof Blob) {\n          size = this.response.size;\n        } else if (this.response instanceof ArrayBuffer) {\n          size = this.response.byteLength;\n        } else if (this.responseType === \"json\") {\n          size = new Blob([JSON.stringify(this.response)]).size;\n        }\n  \n        addRequestSize((this as XMLHttpRequest).responseURL, size);\n      },\n      false\n    );\n  \n    originalSend.call(this, body);\n  \n    var originalImageSrc = Object.getOwnPropertyDescriptor(\n      Image.prototype,\n      \"src\"\n    ).set;\n  \n    this.originalImageSrc = originalImageSrc;\n  \n    Object.defineProperty(Image.prototype, \"src\", {\n      set: function (value) {\n        fetch(value).then((response) => {\n          if (response.ok) {\n            response.blob().then((blob) => {\n              addRequestSize((this as XMLHttpRequest).responseURL, blob.size);\n            });\n          }\n        });\n        originalImageSrc.call(this, value);\n      },\n    });\n  };\n}\n\n\nexport class RequestHook {\n  private _originalSend;\n  private _hooked = false;\n\n  get size() {\n    return formatNumber(requestSize / 1024 / 1024);\n  }\n\n  constructor() {\n    this._hooked = true;\n  }\n\n  public reset(): void {\n    requestSize = 0;\n  }\n\n  public release(): void {\n    if (this._hooked) {\n      XMLHttpRequest.prototype.send = this._originalSend;\n      Object.defineProperty(Image.prototype, \"src\", {\n        set: function (value) {\n          this.src.call(this, value);\n        },\n      });\n    }\n    this._hooked = false;\n  }\n}\n\nfunction formatNumber(num: number): string {\n  return Number(num).toFixed(\n    Math.max(6 - num.toString().split(\".\")[0].length, 0)\n  );\n}\n","import { Logger } from \"@galacean/engine\";\n\nexport function log(...args: any): void {\n  Logger.info(\"ðŸš€ [galacean engine--stats]\", ...args);\n}\n\nexport function errorLog(...args: any): void {\n  Logger.error(\"ðŸš€ [galacean engine-stats]\", ...args);\n}\n","import { log, errorLog } from \"../log\";\n\n/**\n * @class DrawCallHook\n */\nexport default class DrawCallHook {\n  public drawCall: number = 0;\n  public triangles: number = 0;\n  public lines: number = 0;\n  public points: number = 0;\n  private hooked: boolean;\n  private readonly realDrawElements: any;\n  private readonly realDrawArrays: any;\n  private readonly realDrawElementsInstanced: any;\n  private readonly realDrawArraysInstanced: any;\n  private readonly gl: WebGLRenderingContext | WebGL2RenderingContext;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.realDrawElements = gl.drawElements;\n    this.realDrawArrays = gl.drawArrays;\n\n    gl.drawElements = this.hookedDrawElements.bind(this);\n    gl.drawArrays = this.hookedDrawArrays.bind(this);\n\n    const hasInstancedFunc = this.hasInstancedFunction(gl);\n    if (hasInstancedFunc) {\n      // @ts-ignore\n      this.realDrawElementsInstanced = gl.drawElementsInstanced;\n      // @ts-ignore\n      this.realDrawArraysInstanced = gl.drawArraysInstanced;\n\n      // @ts-ignore\n      gl.drawElementsInstanced = this.hookedDrawElementsInstanced.bind(this);\n      // @ts-ignore\n      gl.drawArraysInstanced = this.hookedDrawArraysInstanced.bind(this);\n    } else {\n      const extAngleInstancedArrays = gl.getExtension(\"ANGLE_instanced_arrays\");\n      if (extAngleInstancedArrays) {\n        this.realDrawElementsInstanced = extAngleInstancedArrays.drawElementsInstancedANGLE;\n        this.realDrawArraysInstanced = extAngleInstancedArrays.drawArraysInstancedANGLE;\n\n        extAngleInstancedArrays.drawElementsInstancedANGLE = this.hookedDrawElementsInstanced.bind(this);\n        extAngleInstancedArrays.drawArraysInstancedANGLE = this.hookedDrawArraysInstanced.bind(this);\n      } else {\n        errorLog(`GPU Instancing is not supported.`);\n      }\n    }\n\n    this.hooked = true;\n    this.gl = gl;\n\n    log(`DrawCall is hooked.`);\n  }\n\n  private hasInstancedFunction(gl: WebGLRenderingContext | WebGL2RenderingContext): boolean {\n    return (gl instanceof WebGL2RenderingContext || ((gl as any).hasOwnProperty(\"drawElementsInstanced\") && (gl as any).hasOwnProperty(\"drawArraysInstanced\")));\n  }\n\n  private hookedDrawElements(mode: number, count: number, type: number, offset: number): void {\n    this.realDrawElements.call(this.gl, mode, count, type, offset);\n    this.update(count, mode);\n  }\n\n  private hookedDrawArrays(mode: number, first: number, count: number): void {\n    this.realDrawArrays.call(this.gl, mode, first, count);\n    this.update(count, mode);\n  }\n\n  private hookedDrawElementsInstanced(mode: number, count: number, type: number, offset: number, primcount: number): void {\n    this.realDrawElementsInstanced.call(this.gl, mode, count, type, offset, primcount);\n    this.update(count, mode);\n  }\n\n  private hookedDrawArraysInstanced(mode: number, first: number, count: number, primcount: number): void {\n    this.realDrawArraysInstanced.call(this.gl, mode, first, count, primcount);\n    this.update(count, mode);\n  }\n\n  private update(count: number, mode: number): void {\n    const { gl } = this;\n\n    this.drawCall++;\n\n    switch (mode) {\n      case gl.TRIANGLES:\n        this.triangles += count / 3;\n        break;\n\n      case gl.TRIANGLE_STRIP:\n      case gl.TRIANGLE_FAN:\n        this.triangles += count - 2;\n        break;\n\n      case gl.LINES:\n        this.lines += count / 2;\n        break;\n\n      case gl.LINE_STRIP:\n        this.lines += count - 1;\n        break;\n\n      case gl.LINE_LOOP:\n        this.lines += count;\n        break;\n\n      case gl.POINTS:\n        this.points += count;\n        break;\n\n      default:\n        errorLog(`Unknown draw mode: ${mode}`);\n        break;\n    }\n  }\n\n  public reset(): void {\n    this.drawCall = 0;\n    this.triangles = 0;\n    this.lines = 0;\n    this.points = 0;\n  }\n\n  public release(): void {\n    if (this.hooked) {\n      const { gl } = this;\n      gl.drawElements = this.realDrawElements;\n      gl.drawArrays = this.realDrawArrays;\n\n      const hasInstancedFunc = this.hasInstancedFunction(gl);\n      if (hasInstancedFunc) {\n        // @ts-ignore\n        gl.drawElementsInstanced = this.realDrawElementsInstanced;\n        // @ts-ignore\n        gl.drawArraysInstanced = this.realDrawArraysInstanced;\n      } else {\n        const extAngleInstancedArrays = gl.getExtension(\"ANGLE_instanced_arrays\");\n        if (extAngleInstancedArrays) {\n          extAngleInstancedArrays.drawElementsInstancedANGLE = this.realDrawElementsInstanced;\n          extAngleInstancedArrays.drawArraysInstancedANGLE = this.realDrawArraysInstanced;\n        }\n      }\n    }\n\n    this.hooked = false;\n  }\n}\n","import { log } from \"../log\";\n\n/**\n * @class ShaderHook\n */\nexport default class ShaderHook {\n  public shaders: number = 0;\n  private readonly realAttachShader: any;\n  private readonly realDetachShader: any;\n  private readonly gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private hooked: boolean;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.realAttachShader = gl.attachShader;\n    this.realDetachShader = gl.detachShader;\n\n    gl.attachShader = this.hookedAttachShader.bind(this);\n    gl.detachShader = this.hookedDetachShader.bind(this);\n\n    this.hooked = true;\n    this.gl = gl;\n\n    log(`Shader is hooked.`);\n  }\n\n  private hookedAttachShader(program: any, shader: any): void {\n    this.realAttachShader.call(this.gl, program, shader);\n\n    this.shaders++;\n\n    log(`AttachShader:`, shader, `shaders: ${this.shaders}`);\n  }\n\n  private hookedDetachShader(program: any, shader: any): void {\n    this.realDetachShader.call(this.gl, program, shader);\n\n    this.shaders--;\n\n    log(`DetachShader. shaders: ${this.shaders}`);\n  }\n\n  public reset(): void {\n    this.shaders = 0;\n  }\n\n  public release(): void {\n    if (this.hooked) {\n      this.gl.attachShader = this.realAttachShader;\n      this.gl.detachShader = this.realDetachShader;\n    }\n\n    this.hooked = false;\n  }\n}\n","import { log } from \"../log\";\n\n/**\n * @class TextureHook\n */\nexport default class TextureHook {\n  public textures: number = 0;\n  private readonly realCreateTexture: any;\n  private readonly realDeleteTexture: any;\n  private readonly gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private hooked: boolean;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.realCreateTexture = gl.createTexture;\n    this.realDeleteTexture = gl.deleteTexture;\n\n    gl.createTexture = this.hookedCreateTexture.bind(this);\n    gl.deleteTexture = this.hookedDeleteTexture.bind(this);\n\n    this.hooked = true;\n    this.gl = gl;\n\n    log(`Texture is hooked.`);\n  }\n\n  private hookedCreateTexture(): void {\n    let texture = this.realCreateTexture.call(this.gl);\n\n    this.textures++;\n\n    log(`CreateTexture:`, texture, `textures: ${this.textures}`);\n\n    return texture;\n  }\n\n  private hookedDeleteTexture(texture: any): void {\n    this.realDeleteTexture.call(this.gl, texture);\n\n    this.textures--;\n\n    log(`DeleteTexture. textures: ${this.textures}`);\n  }\n\n  public reset(): void {\n    this.textures = 0;\n  }\n\n  public release(): void {\n    if (this.hooked) {\n      this.gl.createTexture = this.realCreateTexture;\n      this.gl.deleteTexture = this.realDeleteTexture;\n    }\n\n    this.hooked = false;\n  }\n}\n","import DrawCallHook from \"./hooks/DrawCallHook\";\nimport { RequestHook } from \"./hooks/RequestHook\";\nimport ShaderHook from \"./hooks/ShaderHook\";\nimport TextureHook from \"./hooks/TextureHook\";\n\ndeclare global {\n  interface Performance {\n    memory: any;\n  }\n}\n\n/**\n * Hook gl to calculate stats\n */\nexport class Core {\n  private readonly gl: WebGLRenderingContext | WebGL2RenderingContext;\n  private drawCallHook: DrawCallHook;\n  private textureHook: TextureHook;\n  private shaderHook: ShaderHook;\n  private requestHook: RequestHook;\n  private samplingFrames: number = 60;\n  private samplingIndex: number = 0;\n  private updateCounter: number = 0;\n  private updateTime: number = 0;\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.gl = gl;\n    this.hook(gl);\n  }\n\n  private hook(gl: WebGLRenderingContext | WebGL2RenderingContext): void {\n    this.drawCallHook = new DrawCallHook(gl);\n    this.textureHook = new TextureHook(gl);\n    this.shaderHook = new ShaderHook(gl);\n    this.requestHook = new RequestHook();\n  }\n\n  /**\n   * reset draw call hook\n   */\n  public reset(): void {\n    this.drawCallHook && this.drawCallHook.reset();\n  }\n\n  /**\n   * release hook\n   */\n  public release(): void {\n    this.drawCallHook && this.drawCallHook.release();\n    this.textureHook && this.textureHook.release();\n    this.shaderHook && this.shaderHook.release();\n  }\n\n  /**\n   * update performance data\n   */\n  public update(): PerformanceData {\n    this.updateCounter++;\n    let now = performance.now();\n    if (now - this.updateTime < 1000) {\n      return;\n    }\n\n    if (this.samplingIndex !== this.samplingFrames) {\n      this.reset();\n      this.samplingIndex++;\n      return;\n    }\n\n    this.samplingIndex = 0;\n\n    let data: PerformanceData = {\n      fps: Math.round((this.updateCounter * 1000) / (now - this.updateTime)),\n      memory:\n        performance.memory &&\n        (performance.memory.usedJSHeapSize / 1048576) >> 0,\n      drawCall: this.drawCallHook.drawCall,\n      triangles: this.drawCallHook.triangles,\n      lines: this.drawCallHook.lines,\n      points: this.drawCallHook.points,\n      textures: this.textureHook.textures,\n      size: this.requestHook.size,\n      shaders: this.shaderHook.shaders,\n      webglContext:\n        window.hasOwnProperty(\"WebGL2RenderingContext\") &&\n        this.gl instanceof WebGL2RenderingContext\n          ? \"2.0\"\n          : \"1.0\",\n    };\n\n    this.reset();\n\n    this.updateCounter = 0;\n    this.updateTime = now;\n\n    return data;\n  }\n}\n\ninterface PerformanceData {\n  fps: number;\n  memory: number;\n  drawCall: number;\n  triangles: number;\n  lines: number;\n  points: number;\n  textures: number;\n  shaders: number;\n  size: string;\n  webglContext: string;\n}\n","import { Core } from \"./Core\";\n\nlet tpl = `\n  <dl>\n    <dt>FPS</dt>\n    <dd>0</dd>\n    <dt>Memory <span class=\"unit\">(MB)</span></dt>\n    <dd>0</dd>\n    <dt>DrawCall</dt>\n    <dd>0</dd>\n    <dt>Triangles</dt>\n    <dd>0</dd>\n    <dt>Textures</dt>\n    <dd>0</dd>\n    <dt>Shaders</dt>\n    <dd>0</dd>\n    <dt>Network Size <span class=\"unit\">(MB)</span></dt>\n    <dd>0</dd>\n    <dt>WebGL</dt>\n    <dd></dd>\n  </dl>\n`;\nlet css = `\n  .gl-perf {\n    pointer-events: none;\n    user-select: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: ${10 / 7.5}vh ${10 / 7.5}vh 0 ${10 / 7.5}vh;\n    background: rgba(0, 0, 0, 0.3);\n    color: #fff;\n    font: ${10 / 7.5}vh arial;\n  }\n\n  .gl-perf dl,\n  .gl-perf dt,\n  .gl-perf dd {\n    padding: 0;\n    margin: 0;\n  }\n\n  .gl-perf dt {\n    color: #fff;\n    text-shadow: #000 0 0 1px;\n  }\n\n  .gl-perf dt .unit{\n    font-size: ${10 / 7.5}vh;\n  }\n\n  .gl-perf dd {\n    font-size: ${20 / 7.5}vh;\n    padding: ${10 / 7.5}vh 0 ${10 / 7.5}vh;\n  }\n`;\n\nexport default class Monitor {\n  private core: Core;\n  private doms: HTMLElement[];\n  private container: HTMLElement;\n  private readonly items: string[];\n\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext) {\n    this.core = new Core(gl);\n    this.items = [];\n    this.items = [\n      \"fps\",\n      \"memory\",\n      \"drawCall\",\n      \"triangles\",\n      \"textures\",\n      \"shaders\",\n      \"size\",\n      \"webglContext\",\n    ];\n    this.createContainer();\n    this.update = this.update.bind(this);\n  }\n\n  private createContainer(): void {\n    let container = document.createElement(\"div\");\n    container.classList.add(\"gl-perf\");\n    container.innerHTML = tpl;\n\n    container.appendChild(this.createStyle());\n\n    document.body.appendChild(container);\n\n    this.doms = Array.prototype.slice.apply(container.querySelectorAll(\"dd\"));\n    this.container = container;\n  }\n\n  private createStyle(): HTMLStyleElement {\n    let style: HTMLStyleElement = document.createElement(\"style\");\n\n    style.type = \"text/css\";\n\n    style.appendChild(document.createTextNode(css));\n\n    return style;\n  }\n\n  /**\n   * Update per frame\n   */\n  public update(): void {\n    let data = this.core.update();\n\n    if (data) {\n      for (let i = 0, l = this.items.length; i < l; i++) {\n        let dom = this.doms[i];\n        let item = this.items[i];\n        let value = data[item] || 0;\n\n        // see: http://wilsonpage.co.uk/preventing-layout-thrashing/\n        requestAnimationFrame(() => {\n          dom.innerText = value;\n        });\n      }\n    }\n  }\n\n  /**\n   * reset all hooks\n   */\n  public reset(): void {\n    this.core.reset();\n  }\n\n  /**\n   * release all hooks\n   */\n  public release(): void {\n    this.core.release();\n  }\n\n  /**\n   * destroy the instance\n   */\n  public destroy(): void {\n    this.release();\n    document.body.removeChild(this.container);\n  }\n}\n","import { Script, Camera } from \"@galacean/engine\";\nimport { hookRequest } from \"./hooks/RequestHook\";\nimport Monitor from \"./Monitor\";\n\n/**\n * Display engine status data such as FPS.\n */\nexport class Stats extends Script {\n  private monitor: Monitor;\n  private camera: Camera;\n\n  static hookRequest() {\n    hookRequest();\n  }\n\n  override set enabled(value: boolean) {\n    value ? this._setupMonitor() : this.monitor.destroy();\n  }\n\n  override onBeginRender(camera: Camera): void {\n    this.camera = camera;\n    if (!this.monitor) {\n      this._setupMonitor();\n    }\n  }\n\n  override onEndRender(camera: Camera): void {\n    if (this.monitor) {\n      this.monitor.update();\n    }\n  }\n\n  private _setupMonitor() {\n    // @ts-ignore\n    const gl = this.camera.engine._hardwareRenderer.gl;\n    if (gl) {\n      this.monitor = new Monitor(gl);\n    }\n  }\n}\n"],"names":["requestSize","hookRequest","originalSend","XMLHttpRequest","prototype","send","cacheMap","Map","addRequestSize","url","size","get","undefined","set","body","addEventListener","responseType","Blob","JSON","stringify","responseText","response","ArrayBuffer","byteLength","responseURL","call","originalImageSrc","Object","getOwnPropertyDescriptor","Image","defineProperty","value","fetch","then","ok","blob","RequestHook","_hooked","reset","release","_originalSend","src","formatNumber","num","Number","toFixed","Math","max","toString","split","length","log","args","Logger","info","errorLog","error","DrawCallHook","gl","drawCall","triangles","lines","points","realDrawElements","drawElements","realDrawArrays","drawArrays","hookedDrawElements","bind","hookedDrawArrays","hasInstancedFunc","hasInstancedFunction","realDrawElementsInstanced","drawElementsInstanced","realDrawArraysInstanced","drawArraysInstanced","hookedDrawElementsInstanced","hookedDrawArraysInstanced","extAngleInstancedArrays","getExtension","drawElementsInstancedANGLE","drawArraysInstancedANGLE","hooked","WebGL2RenderingContext","hasOwnProperty","mode","count","type","offset","update","first","primcount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","ShaderHook","shaders","realAttachShader","attachShader","realDetachShader","detachShader","hookedAttachShader","hookedDetachShader","program","shader","TextureHook","textures","realCreateTexture","createTexture","realDeleteTexture","deleteTexture","hookedCreateTexture","hookedDeleteTexture","texture","Core","samplingFrames","samplingIndex","updateCounter","updateTime","hook","drawCallHook","textureHook","shaderHook","requestHook","now","performance","data","fps","round","memory","usedJSHeapSize","webglContext","window","tpl","css","Monitor","core","items","createContainer","container","document","createElement","classList","add","innerHTML","appendChild","createStyle","doms","Array","slice","apply","querySelectorAll","style","createTextNode","dom","i","item","requestAnimationFrame","innerText","l","destroy","removeChild","Stats","onBeginRender","camera","monitor","_setupMonitor","onEndRender","engine","_hardwareRenderer","enabled","Script"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}