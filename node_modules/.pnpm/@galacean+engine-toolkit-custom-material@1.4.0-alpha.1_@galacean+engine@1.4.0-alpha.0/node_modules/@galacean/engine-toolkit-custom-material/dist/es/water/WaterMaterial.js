import { _ as _create_class } from '../_create_class-8d4b456b.js';
import { _ as _inherits } from '../_inherits-5a51c3d0.js';
import { Shader, ShaderProperty, Vector2, Vector4, BaseMaterial } from '@galacean/engine';

var vertexSource = "\n    attribute vec3 POSITION;\n    attribute vec2 TEXCOORD_0;\n    attribute vec4 COLOR_0;\n\n    uniform mat4 renderer_MVPMat;\n    \n    uniform float u_time;\n    uniform vec2 u_water_speed; \n    uniform vec2 u_distorsion_speed; \n    \n    varying vec4 v_color;\n    varying vec2 waterTexCoords;\n    varying vec2 normalTexCoords;\n  \n    void main() {\n      gl_Position = renderer_MVPMat * vec4(POSITION, 1.0);\n  \n      waterTexCoords = TEXCOORD_0 + vec2(u_water_speed.x * sin(u_time), u_water_speed.y * cos(u_time));\n      normalTexCoords = TEXCOORD_0 + vec2(u_distorsion_speed.x * cos(u_time), u_distorsion_speed.y * sin(u_time));     \n      \n      v_color = COLOR_0;\n    }\n    ";
var fragmentSource = "\n    #include <common>\n    varying vec4 v_color;\n    varying vec2 waterTexCoords;\n    varying vec2 normalTexCoords;\n  \n    uniform sampler2D material_NormalTexture;\n    uniform sampler2D u_waterTex;\n    uniform sampler2D u_edgeTex;\n  \n    uniform vec4 u_edgeColor;\n    uniform vec2 u_edgeParam;\n    uniform float u_distorsion_amount;\n  \n    void main() {\n      vec4 normalTex = texture2D(material_NormalTexture, normalTexCoords) * 2.0 - 1.0;\n      vec4 waterTex = texture2D(u_waterTex, waterTexCoords + (normalTex.rg * u_distorsion_amount));\n      vec4 edgeTex = texture2D(u_edgeTex, waterTexCoords + (normalTex.rg * u_distorsion_amount));\n  \n      float edge = pow((v_color.r + edgeTex.r) * v_color.r, 2.0);\n      edge = saturate(1.0 - smoothstep(u_edgeParam.x - u_edgeParam.y, u_edgeParam.x + u_edgeParam.y, edge));\n      vec4 finalCol = mix(waterTex, u_edgeColor, edge);\n  \n      gl_FragColor = finalCol;\n    }\n    ";
Shader.create("water", vertexSource, fragmentSource);
var WaterMaterial = /*#__PURE__*/ function(BaseMaterial) {
    _inherits(WaterMaterial, BaseMaterial);
    function WaterMaterial(engine) {
        var _this;
        _this = BaseMaterial.call(this, engine, Shader.find("water")) || this;
        _this.shaderData.setVector2(WaterMaterial._waterSpeed, new Vector2(-0.02, 0.02));
        _this.shaderData.setVector4(WaterMaterial._edgeColor, new Vector4((69 + 255) / 510, (156 + 255) / 510, (247 + 255) / 510, 1));
        _this.shaderData.setVector2(WaterMaterial._edgeParam, new Vector2(0.008, 0.002));
        _this.shaderData.setFloat(WaterMaterial._distorsionAmount, 0.02);
        _this.shaderData.setVector2(WaterMaterial._distorsionSpeed, new Vector2(0.2, 0.2));
        return _this;
    }
    _create_class(WaterMaterial, [
        {
            key: "normalTexture",
            get: /**
   *  Normal Texture Map
   */ function get() {
                return this.shaderData.getTexture(WaterMaterial._normalTextureProp);
            },
            set: function set(value) {
                this.shaderData.setTexture(WaterMaterial._normalTextureProp, value);
            }
        },
        {
            key: "waterTexture",
            get: /**
   *  Water Texture Map
   */ function get() {
                return this.shaderData.getTexture(WaterMaterial._waterTextureProp);
            },
            set: function set(value) {
                this.shaderData.setTexture(WaterMaterial._waterTextureProp, value);
            }
        },
        {
            key: "edgeTexture",
            get: /**
   *  Edge Texture Map
   */ function get() {
                return this.shaderData.getTexture(WaterMaterial._edgeTextureProp);
            },
            set: function set(value) {
                this.shaderData.setTexture(WaterMaterial._edgeTextureProp, value);
            }
        },
        {
            key: "waterSpeed",
            get: /**
   *  Water Speed on x direction and y direction
   */ function get() {
                return this.shaderData.getVector2(WaterMaterial._waterSpeed);
            },
            set: function set(val) {
                this.shaderData.setVector2(WaterMaterial._waterSpeed, val);
            }
        },
        {
            key: "edgeColor",
            get: /**
   * Water Edge Color
   */ function get() {
                return this.shaderData.getVector4(WaterMaterial._edgeColor);
            },
            set: function set(val) {
                this.shaderData.setVector4(WaterMaterial._edgeColor, val);
            }
        },
        {
            key: "edgeParam",
            get: /**
   * Edge Param;
   * x for edge thickness, must between 0 ~ 1;
   * y for edge smoothness, must between 0 ~ 0.5;
   */ function get() {
                return this.shaderData.getVector2(WaterMaterial._edgeParam);
            },
            set: function set(val) {
                this.shaderData.setVector2(WaterMaterial._edgeParam, val);
            }
        },
        {
            key: "distorsionAmount",
            get: /**
   * Distorsion Amount, must between -1 ~ 1
   */ function get() {
                return this.shaderData.getFloat(WaterMaterial._distorsionAmount);
            },
            set: function set(val) {
                this.shaderData.setFloat(WaterMaterial._distorsionAmount, val);
            }
        },
        {
            key: "distorsionSpeed",
            get: /**
   * Distorsion Speed on x direction and y direction
   */ function get() {
                return this.shaderData.getVector2(WaterMaterial._distorsionSpeed);
            },
            set: function set(val) {
                this.shaderData.setVector2(WaterMaterial._distorsionSpeed, val);
            }
        }
    ]);
    return WaterMaterial;
}(BaseMaterial);
WaterMaterial._waterSpeed = ShaderProperty.getByName("u_water_speed");
WaterMaterial._edgeColor = ShaderProperty.getByName("u_edgeColor");
WaterMaterial._edgeParam = ShaderProperty.getByName("u_edgeParam");
WaterMaterial._distorsionAmount = ShaderProperty.getByName("u_distorsion_amount");
WaterMaterial._distorsionSpeed = ShaderProperty.getByName("u_distorsion_speed");
WaterMaterial._waterTextureProp = ShaderProperty.getByName("u_waterTex");
WaterMaterial._edgeTextureProp = ShaderProperty.getByName("u_edgeTex");

export { WaterMaterial };
//# sourceMappingURL=WaterMaterial.js.map
