{"version":3,"file":"GridMesh.js","sources":["../../../src/grid/GridMesh.ts"],"sourcesContent":["import {\n  Buffer,\n  BufferBindFlag,\n  BufferUsage,\n  ContentRestorer,\n  Engine,\n  MeshTopology,\n  ModelMesh,\n  VertexElement,\n  VertexElementFormat\n} from \"@galacean/engine\";\n\nexport class GridMesh {\n  static createGridPlane(engine: Engine): ModelMesh {\n    const mesh = new ModelMesh(engine);\n    GridMesh._updateGridData(mesh);\n    engine.resourceManager.addContentRestorer(new GridMeshRestorer(mesh));\n    return mesh;\n  }\n\n  static _updateGridData(mesh: ModelMesh) {\n    // No-FlipY: POSITION_FLIP.xy, FlipY: POSITION_FLIP.zw\n    // prettier-ignore\n    const vertices = new Float32Array([\n      -1, -1, 1, -1, // left-bottom\n      1, -1, -1, -1,  // right-bottom\n      -1, 1, 1, 1,  // left-top\n      1, 1, -1, 1]); // right-top\n\n    mesh.setVertexElements([new VertexElement(\"POSITION_FLIP\", 0, VertexElementFormat.Vector4, 0)]);\n    mesh.setVertexBufferBinding(new Buffer(mesh.engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static), 16);\n    mesh.addSubMesh(0, 4, MeshTopology.TriangleStrip);\n\n    const { bounds } = mesh;\n    bounds.min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    bounds.max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    return mesh;\n  }\n}\n\n/**\n * @internal\n */\nexport class GridMeshRestorer extends ContentRestorer<ModelMesh> {\n  constructor(resource: ModelMesh) {\n    super(resource);\n  }\n\n  /**\n   * @override\n   */\n  restoreContent(): void {\n    GridMesh._updateGridData(this.resource);\n  }\n}\n"],"names":["GridMesh","createGridPlane","engine","mesh","ModelMesh","_updateGridData","resourceManager","addContentRestorer","GridMeshRestorer","vertices","Float32Array","setVertexElements","VertexElement","VertexElementFormat","Vector4","setVertexBufferBinding","Buffer","BufferBindFlag","VertexBuffer","BufferUsage","Static","addSubMesh","MeshTopology","TriangleStrip","bounds","min","set","Number","MAX_VALUE","max","resource","restoreContent","ContentRestorer"],"mappings":";;;AAYO,IAAA,QAAMA,iBAAD,WAAL;AAAMA,IAAAA,SAAAA,QAAAA,GAAAA,EAAAA;AAAAA,IAAAA,QAAAA,CACJC,eAKN,GALD,SAAOA,eAAAA,CAAgBC,MAAc,EAAA;QACnC,IAAMC,IAAAA,GAAO,IAAIC,SAAUF,CAAAA,MAAAA,CAAAA,CAAAA;AAFlBF,QAAAA,QAAAA,CAGAK,eAAe,CAACF,IAAAA,CAAAA,CAAAA;AACzBD,QAAAA,MAAAA,CAAOI,eAAe,CAACC,kBAAkB,CAAC,IAAIC,gBAAiBL,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA;QAC/D,OAAOA,IAAAA,CAAAA;AACT,KAAA,CAAA;AANWH,IAAAA,QAAAA,CAQJK,eAiBN,GAjBD,SAAOA,eAAAA,CAAgBF,IAAe,EAAA;;;QAGpC,IAAMM,QAAAA,GAAW,IAAIC,YAAa,CAAA;YAChC,CAAC,CAAA;YAAG,CAAC,CAAA;AAAG,YAAA,CAAA;YAAG,CAAC,CAAA;AACZ,YAAA,CAAA;YAAG,CAAC,CAAA;YAAG,CAAC,CAAA;YAAG,CAAC,CAAA;YACZ,CAAC,CAAA;AAAG,YAAA,CAAA;AAAG,YAAA,CAAA;AAAG,YAAA,CAAA;AACV,YAAA,CAAA;AAAG,YAAA,CAAA;YAAG,CAAC,CAAA;AAAG,YAAA,CAAA;AAAE,SAAA,CAAA,CAAA;AAEdP,QAAAA,IAAAA,CAAKQ,iBAAiB,CAAC;AAAC,YAAA,IAAIC,aAAc,CAAA,eAAA,EAAiB,CAAGC,EAAAA,mBAAAA,CAAoBC,OAAO,EAAE,CAAA,CAAA;AAAG,SAAA,CAAA,CAAA;AAC9FX,QAAAA,IAAAA,CAAKY,sBAAsB,CAAC,IAAIC,MAAAA,CAAOb,IAAKD,CAAAA,MAAM,EAAEe,cAAAA,CAAeC,YAAY,EAAET,QAAUU,EAAAA,WAAAA,CAAYC,MAAM,CAAG,EAAA,EAAA,CAAA,CAAA;AAChHjB,QAAAA,IAAAA,CAAKkB,UAAU,CAAC,CAAG,EAAA,CAAA,EAAGC,aAAaC,aAAa,CAAA,CAAA;QAEhD,IAAQC,SAAWrB,IAAXqB,CAAAA,MAAAA,CAAAA;AACRA,QAAAA,MAAAA,CAAOC,GAAG,CAACC,GAAG,CAAC,CAACC,MAAOC,CAAAA,SAAS,EAAE,CAACD,MAAOC,CAAAA,SAAS,EAAE,CAACD,OAAOC,SAAS,CAAA,CAAA;QACtEJ,MAAOK,CAAAA,GAAG,CAACH,GAAG,CAACC,MAAAA,CAAOC,SAAS,EAAED,MAAOC,CAAAA,SAAS,EAAED,MAAAA,CAAOC,SAAS,CAAA,CAAA;QACnE,OAAOzB,IAAAA,CAAAA;AACT,KAAA,CAAA;AAzBWH,IAAAA,OAAAA,QAAAA,CAAAA;AA0BZ,CAAA,GAAA;AAED;;AAEC,IACM,IAAA,gBAAMQ,iBAAD,SAAL,eAAA,EAAA;AAAMA,IAAAA,SAAAA,CAAAA,gBAAAA,EAAAA,eAAAA,CAAAA,CAAAA;AAAAA,IAAAA,SAAAA,gBAAAA,CACCsB,QAAmB,EAAA;AACvBA,QAAAA,OAAAA,eAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,QAAAA,CAAAA,CAAAA;;AAFGtB,IAAAA,IAAAA,MAAAA,GAAAA,gBAAAA,CAAAA,SAAAA,CAAAA;AAKX;;MAGAuB,MAAAA,CAAAA,cAEC,GAFDA,SAAAA,cAAAA,GAAAA;AACE/B,QAAAA,QAAAA,CAASK,eAAe,CAAC,IAAI,CAACyB,QAAQ,CAAA,CAAA;AACxC,KAAA,CAAA;AAVWtB,IAAAA,OAAAA,gBAAAA,CAAAA;EAAyBwB,eAWrC;;;;"}