import { _ as _inherits } from '../_inherits-5a51c3d0.js';
import { ModelMesh, VertexElement, VertexElementFormat, Buffer, BufferBindFlag, BufferUsage, MeshTopology, ContentRestorer } from '@galacean/engine';

var GridMesh = /*#__PURE__*/ function() {
    function GridMesh() {}
    GridMesh.createGridPlane = function createGridPlane(engine) {
        var mesh = new ModelMesh(engine);
        GridMesh._updateGridData(mesh);
        engine.resourceManager.addContentRestorer(new GridMeshRestorer(mesh));
        return mesh;
    };
    GridMesh._updateGridData = function _updateGridData(mesh) {
        // No-FlipY: POSITION_FLIP.xy, FlipY: POSITION_FLIP.zw
        // prettier-ignore
        var vertices = new Float32Array([
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            1,
            -1,
            1
        ]); // right-top
        mesh.setVertexElements([
            new VertexElement("POSITION_FLIP", 0, VertexElementFormat.Vector4, 0)
        ]);
        mesh.setVertexBufferBinding(new Buffer(mesh.engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static), 16);
        mesh.addSubMesh(0, 4, MeshTopology.TriangleStrip);
        var bounds = mesh.bounds;
        bounds.min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);
        bounds.max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);
        return mesh;
    };
    return GridMesh;
}();
/**
 * @internal
 */ var GridMeshRestorer = /*#__PURE__*/ function(ContentRestorer) {
    _inherits(GridMeshRestorer, ContentRestorer);
    function GridMeshRestorer(resource) {
        return ContentRestorer.call(this, resource);
    }
    var _proto = GridMeshRestorer.prototype;
    /**
   * @override
   */ _proto.restoreContent = function restoreContent() {
        GridMesh._updateGridData(this.resource);
    };
    return GridMeshRestorer;
}(ContentRestorer);

export { GridMesh, GridMeshRestorer };
//# sourceMappingURL=GridMesh.js.map
