{"version":3,"file":"WaterRippleMaterial.js","sources":["../../../src/water/WaterRippleMaterial.ts"],"sourcesContent":["import { BaseMaterial, Engine, Shader, ShaderProperty, Texture2D, Vector2, Vector3 } from \"@galacean/engine\";\n\nconst vertexSource = `\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n  uniform mat4 renderer_MVPMat;\n  \n  uniform float u_time;\n  uniform vec2 u_foam_speed; \n  uniform vec2 u_distorsion_speed; \n  varying vec2 waterTexCoords;\n  varying vec2 normalTexCoords;\n  varying vec4 v_color;\n      \n  void main() {\n    gl_Position = renderer_MVPMat * vec4(POSITION, 1.0);\n    waterTexCoords = TEXCOORD_0 + vec2(u_foam_speed.x * u_time, u_foam_speed.y * u_time);\n    normalTexCoords = TEXCOORD_0 + vec2(u_distorsion_speed.x * cos(u_time), u_distorsion_speed.y * sin(u_time));\n    v_color = COLOR_0; \n  }\n  `;\n\nconst fragmentSource = `\n  #include <common>\n  varying vec4 v_color;\n  varying vec2 waterTexCoords;\n  varying vec2 normalTexCoords;\n  uniform sampler2D material_NormalTexture;\n  uniform sampler2D u_foamTex;\n  uniform vec3 u_foamColor;\n  uniform vec2 u_foam_param;\n  uniform float u_distorsion_amount;\n  void main() {  \n    vec4 normalTex = texture2D(material_NormalTexture, normalTexCoords) * 2.0 - 1.0;\n    vec4 waterTex = texture2D(u_foamTex, waterTexCoords + (normalTex.rg * u_distorsion_amount));\n    float alphaComp = v_color.r * waterTex.r * u_foam_param.x;\n    float alpha = pow(alphaComp,2.0);\n    alpha = smoothstep(0.5 - u_foam_param.y, 0.5+ u_foam_param.y, alpha);\n    alpha = saturate(alpha);\n    \n    gl_FragColor = vec4(u_foamColor.rgb, alpha);\n  }\n  `;\n\nShader.create(\"water-ripple\", vertexSource, fragmentSource);\n\nexport class WaterRippleMaterial extends BaseMaterial {\n  private static _foamColor = ShaderProperty.getByName(\"u_foamColor\");\n  private static _foamSpeed = ShaderProperty.getByName(\"u_foam_speed\");\n  private static _foamParam = ShaderProperty.getByName(\"u_foam_param\");\n  private static _distorsionSpeed = ShaderProperty.getByName(\"u_distorsion_speed\");\n  private static _distorsionAmount = ShaderProperty.getByName(\"u_distorsion_amount\");\n\n  static _foamTextureProp = ShaderProperty.getByName(\"u_foamTex\");\n\n  /**\n   * Foam Texture Map\n   */\n  get foamTexture(): Texture2D {\n    return <Texture2D>this.shaderData.getTexture(WaterRippleMaterial._foamTextureProp);\n  }\n\n  set foamTexture(value: Texture2D) {\n    this.shaderData.setTexture(WaterRippleMaterial._foamTextureProp, value);\n  }\n\n  /**\n   * Normal Texture Map\n   */\n  get normalTexture(): Texture2D {\n    return <Texture2D>this.shaderData.getTexture(WaterRippleMaterial._normalTextureProp);\n  }\n\n  set normalTexture(value: Texture2D) {\n    this.shaderData.setTexture(WaterRippleMaterial._normalTextureProp, value);\n  }\n\n  /**\n   * Foam Color\n   */\n  get foamColor(): Vector3 {\n    return this.shaderData.getVector3(WaterRippleMaterial._foamColor);\n  }\n\n  set foamColor(val: Vector3) {\n    this.shaderData.setVector3(WaterRippleMaterial._foamColor, val);\n  }\n\n  /**\n   * Foam speed on x direction and y direction\n   * foam speed y, foam amount, foam smoothness\n   */\n  get foamSpeed(): Vector2 {\n    return this.shaderData.getVector2(WaterRippleMaterial._foamSpeed);\n  }\n\n  set foamSpeed(val: Vector2) {\n    this.shaderData.setVector2(WaterRippleMaterial._foamSpeed, val);\n  }\n\n  /**\n   * Foam Param;\n   * x for foam amount\n   * y for foam smoothness, must between 0 ~ 0.5;\n   */\n  get foamParam(): Vector2 {\n    return this.shaderData.getVector2(WaterRippleMaterial._foamParam);\n  }\n\n  set foamParam(val: Vector2) {\n    this.shaderData.setVector2(WaterRippleMaterial._foamParam, val);\n  }\n\n  /**\n   * Distorsion Speed on x direction and y direction\n   */\n  get distorsionSpeed(): Vector2 {\n    return this.shaderData.getVector2(WaterRippleMaterial._distorsionSpeed);\n  }\n\n  set distorsionSpeed(val: Vector2) {\n    this.shaderData.setVector2(WaterRippleMaterial._distorsionSpeed, val);\n  }\n\n  /**\n   * Distorsion Amount, must between -1 ~ 1\n   */\n  get distorsionAmount(): number {\n    return this.shaderData.getFloat(WaterRippleMaterial._distorsionAmount);\n  }\n\n  set distorsionAmount(val: number) {\n    this.shaderData.setFloat(WaterRippleMaterial._distorsionAmount, val);\n  }\n\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"water-ripple\"));\n    this.isTransparent = true;\n\n    const shaderData = this.shaderData;\n    shaderData.setVector3(\n      WaterRippleMaterial._foamColor,\n      new Vector3((69 + 255) / 400, (156 + 255) / 400, (247 + 255) / 400)\n    );\n    shaderData.setVector2(WaterRippleMaterial._foamSpeed, new Vector2(-1, 0.3));\n    shaderData.setVector2(WaterRippleMaterial._foamParam, new Vector2(2.0, 0.05));\n    shaderData.setVector2(WaterRippleMaterial._distorsionSpeed, new Vector2(1.0, 0));\n    shaderData.setFloat(WaterRippleMaterial._distorsionAmount, 0.03);\n  }\n}\n"],"names":["vertexSource","fragmentSource","Shader","create","WaterRippleMaterial","engine","find","isTransparent","shaderData","setVector3","_foamColor","Vector3","setVector2","_foamSpeed","Vector2","_foamParam","_distorsionSpeed","setFloat","_distorsionAmount","foamTexture","getTexture","_foamTextureProp","value","setTexture","normalTexture","_normalTextureProp","foamColor","getVector3","val","foamSpeed","getVector2","foamParam","distorsionSpeed","distorsionAmount","getFloat","BaseMaterial","ShaderProperty","getByName"],"mappings":"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"}