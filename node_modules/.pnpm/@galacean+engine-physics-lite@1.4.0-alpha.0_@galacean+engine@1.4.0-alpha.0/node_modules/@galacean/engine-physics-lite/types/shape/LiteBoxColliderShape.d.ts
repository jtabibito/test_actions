import { Vector3 } from "@galacean/engine";
import { IBoxColliderShape } from "@galacean/engine-design";
import { LitePhysicsMaterial } from "../LitePhysicsMaterial";
import { LiteColliderShape } from "./LiteColliderShape";
/**
 * Box collider shape in Lite.
 */
export declare class LiteBoxColliderShape extends LiteColliderShape implements IBoxColliderShape {
    private static _tempBox;
    private _halfSize;
    private _sizeScale;
    /**
     * Init Box Shape.
     * @param uniqueID - UniqueID mark Shape.
     * @param size - Size of Shape.
     * @param material - Material of PhysXCollider.
     */
    constructor(uniqueID: number, size: Vector3, material: LitePhysicsMaterial);
    /**
     * {@inheritDoc IColliderShape.setPosition }
     */
    setPosition(position: Vector3): void;
    /**
     * {@inheritDoc IColliderShape.setWorldScale }
     */
    setWorldScale(scale: Vector3): void;
    /**
     * {@inheritDoc IBoxColliderShape.setSize }
     */
    setSize(value: Vector3): void;
    private _setBondingBox;
}
