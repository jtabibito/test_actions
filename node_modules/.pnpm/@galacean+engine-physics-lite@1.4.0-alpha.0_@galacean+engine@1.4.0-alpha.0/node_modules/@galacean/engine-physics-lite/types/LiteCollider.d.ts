import { ICollider } from "@galacean/engine-design";
import { Quaternion, Vector3 } from "@galacean/engine";
import { LiteColliderShape } from "./shape/LiteColliderShape";
/**
 * Abstract class of physical collider.
 */
export declare abstract class LiteCollider implements ICollider {
    protected constructor();
    /**
     * {@inheritDoc ICollider.addShape }
     */
    addShape(shape: LiteColliderShape): void;
    /**
     * {@inheritDoc ICollider.removeShape }
     */
    removeShape(shape: LiteColliderShape): void;
    /**
     * {@inheritDoc ICollider.setWorldTransform }
     */
    setWorldTransform(position: Vector3, rotation: Quaternion): void;
    /**
     * {@inheritDoc ICollider.getWorldTransform }
     */
    getWorldTransform(outPosition: Vector3, outRotation: Quaternion): void;
    /**
     * {@inheritDoc ICollider.destroy }
     */
    destroy(): void;
}
