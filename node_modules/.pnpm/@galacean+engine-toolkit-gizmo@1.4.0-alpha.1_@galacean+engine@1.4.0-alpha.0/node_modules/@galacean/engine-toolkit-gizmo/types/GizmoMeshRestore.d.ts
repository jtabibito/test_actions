import { ContentRestorer, ModelMesh, Vector3 } from "@galacean/engine";
/**
 * @internal
 */
export declare class GizmoMeshRestorer extends ContentRestorer<ModelMesh> {
    primitiveInfo: GizmoMeshRestoreInfo;
    constructor(resource: ModelMesh, primitiveInfo: GizmoMeshRestoreInfo);
    /**
     * @override
     */
    restoreContent(): void;
}
declare enum GizmoMeshType {
    Circle = 0,
    Line = 1,
    CircleTube = 2
}
/**
 * @internal
 */
export declare class GizmoMeshRestoreInfo {
    type: GizmoMeshType;
    constructor(type: GizmoMeshType);
}
/**
 * @internal
 */
export declare class CircleRestoreInfo extends GizmoMeshRestoreInfo {
    startPoint: Vector3;
    normal: Vector3;
    thetaLength: number;
    center: Vector3;
    constructor(startPoint: Vector3, normal: Vector3, thetaLength: number, center: Vector3);
}
/**
 * @internal
 */
export declare class CircleTubeRestoreInfo extends GizmoMeshRestoreInfo {
    arc: number;
    radius: number;
    tubeRadius: number;
    tubularSegments: number;
    radialSegments: number;
    constructor(arc: number, radius: number, tubeRadius: number, tubularSegments: number, radialSegments: number);
}
/**
 * @internal
 */
export declare class LineRestoreInfo extends GizmoMeshRestoreInfo {
    points: Array<Vector3>;
    constructor(points: Array<Vector3>);
}
export {};
