{"version":3,"file":"Axis.js","sources":["../../src/Axis.ts"],"sourcesContent":["import { Component, Entity, MeshRenderer, Color } from \"@galacean/engine\";\nimport { AxisProps } from \"./Type\";\nimport { PlainColorMaterial } from \"@galacean/engine-toolkit-custom-material\";\n\nexport class Axis extends Component {\n  private _material: PlainColorMaterial;\n  private _color: Color = new Color();\n  private _highLightColor: Color = new Color();\n  private _yellowColor: Color = new Color(1.0, 0.95, 0.0, 1.0);\n  private _grayColor: Color = new Color(0.75, 0.75, 0.75, 0.6);\n\n  constructor(entity: Entity) {\n    super(entity);\n  }\n\n  /** setup axis geometry */\n  initAxis(value: AxisProps): void {\n    this._material = value.axisMaterial;\n    this._color.copyFrom(value.axisMaterial.baseColor);\n\n    this._highLightColor.copyFrom(this._color);\n    this._highLightColor.r = this._highLightColor.r + 0.3;\n    this._highLightColor.g = this._highLightColor.g + 0.3;\n    this._highLightColor.b = this._highLightColor.b + 0.3;\n    this._highLightColor.a = this._highLightColor.a + 0.1;\n\n    // setup visible axis\n    for (let i = 0; i < value.axisMesh.length; i++) {\n      const axisEntity = this.entity.createChild(value.name);\n      axisEntity.transform.rotate(value.axisRotation[i]);\n      axisEntity.transform.translate(value.axisTranslation[i], false);\n      const axisRenderer = axisEntity.addComponent(MeshRenderer);\n      axisRenderer.receiveShadows = false;\n      axisRenderer.castShadows = false;\n      axisRenderer.priority = value.priority ? value.priority : 100;\n      axisRenderer.mesh = value.axisMesh[i];\n      axisRenderer.setMaterial(this._material);\n    }\n\n    // setup invisible axis\n    const gizmoHelperEntity = this.entity.parent.parent.findByName(\"invisible\");\n    for (let i = 0; i < value.axisHelperMesh.length; i++) {\n      const temp = gizmoHelperEntity.createChild(value.name);\n      const axisHelperEntity = temp.createChild(value.name);\n      axisHelperEntity.transform.rotate(value.axisRotation[i]);\n      axisHelperEntity.transform.translate(value.axisTranslation[i], false);\n      const axisHelperRenderer = axisHelperEntity.addComponent(MeshRenderer);\n      axisHelperRenderer.receiveShadows = false;\n      axisHelperRenderer.castShadows = false;\n      axisHelperRenderer.priority = value.priority ? value.priority : 100;\n      axisHelperRenderer.mesh = value.axisHelperMesh[i];\n      axisHelperRenderer.setMaterial(value.axisHelperMaterial);\n    }\n  }\n  /** highlight axis */\n  highLight(): void {\n    this._material.baseColor.copyFrom(this._highLightColor);\n  }\n  /** unhighligh axis */\n  unLight(): void {\n    this._material.baseColor.copyFrom(this._color);\n  }\n  /** change axis color into yellow */\n  yellow(): void {\n    this._material.baseColor.copyFrom(this._yellowColor);\n  }\n  /** change axis color into gray */\n  gray(): void {\n    this._material.baseColor.copyFrom(this._grayColor);\n  }\n  /** recover axis color */\n  recover(): void {\n    this._material.baseColor.copyFrom(this._color);\n  }\n  /** change axis alpha */\n  alpha(v: number): void {\n    this._material.baseColor.a = v;\n  }\n}\n"],"names":["Axis","entity","_color","Color","_highLightColor","_yellowColor","_grayColor","initAxis","value","_material","axisMaterial","copyFrom","baseColor","r","g","b","a","i","axisMesh","length","axisEntity","createChild","name","transform","rotate","axisRotation","translate","axisTranslation","axisRenderer","addComponent","MeshRenderer","receiveShadows","castShadows","priority","mesh","setMaterial","gizmoHelperEntity","parent","findByName","axisHelperMesh","temp","axisHelperEntity","axisHelperRenderer","axisHelperMaterial","highLight","unLight","yellow","gray","recover","alpha","v","Component"],"mappings":"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"}