{"version":3,"file":"Utils.js","sources":["../../src/Utils.ts"],"sourcesContent":["import { Engine, PrimitiveMesh, ModelMesh, CullMode, Vector3 } from \"@galacean/engine\";\nimport { State } from \"./enums/GizmoState\";\nimport { GizmoMesh } from \"./GizmoMesh\";\nimport { PlainColorMaterial } from \"@galacean/engine-toolkit-custom-material\";\nexport class Utils {\n  static rotateCircleRadius = 1.6;\n  static scaleFactor = 0.05773502691896257;\n\n  static redMaterialTrans: PlainColorMaterial;\n  static lightRedMaterial: PlainColorMaterial;\n  static greenMaterialTrans: PlainColorMaterial;\n  static lightGreenMaterial: PlainColorMaterial;\n  static blueMaterialTrans: PlainColorMaterial;\n  static lightBlueMaterial: PlainColorMaterial;\n  static invisibleMaterialTrans: PlainColorMaterial;\n\n  static redArcMaterial: PlainColorMaterial;\n  static greenArcMaterial: PlainColorMaterial;\n  static blueArcMaterial: PlainColorMaterial;\n  static yellowMaterial: PlainColorMaterial;\n  static rotatePlaneMaterial: PlainColorMaterial;\n  static invisibleMaterialRotate: PlainColorMaterial;\n  static invisibleMaterialCircle: PlainColorMaterial;\n\n  static redMaterialScale: PlainColorMaterial;\n  static greenMaterialScale: PlainColorMaterial;\n  static blueMaterialScale: PlainColorMaterial;\n  static greyMaterial: PlainColorMaterial;\n  static lightMaterial: PlainColorMaterial;\n  static invisibleMaterialScale: PlainColorMaterial;\n\n  static lineMesh: ModelMesh;\n  static lineMeshShort: ModelMesh;\n  static axisXTorusMesh: ModelMesh;\n  static axisYTorusMesh: ModelMesh;\n  static axisZTorusMesh: ModelMesh;\n  static axisXYZTorusMesh: ModelMesh;\n\n  static axisHelpertorusMesh: ModelMesh;\n  static axisHelperLineMesh: ModelMesh;\n  static axisHelperPlaneMesh: ModelMesh;\n  static axisArrowMesh: ModelMesh;\n  static axisPlaneMesh: ModelMesh;\n  static axisCubeMesh: ModelMesh;\n  static axisSphereMesh: ModelMesh;\n  static axisEndCubeMesh: ModelMesh;\n\n  static xAxisPositive: Vector3;\n  static yAxisPositive: Vector3;\n  static zAxisPositive: Vector3;\n\n  static init(engine: Engine) {\n    // translate material\n    Utils.redMaterialTrans = this._createPlainColorMaterial(engine, State.translate, 1.0, 0.25, 0.25, 1.0);\n    Utils.lightRedMaterial = this._createPlainColorMaterial(engine, State.translate, 1.0, 0.25, 0.25, 0.9);\n    Utils.greenMaterialTrans = this._createPlainColorMaterial(engine, State.translate, 0.5, 0.8, 0.2, 1.0);\n    Utils.lightGreenMaterial = this._createPlainColorMaterial(engine, State.translate, 0.5, 0.8, 0.2, 0.9);\n    Utils.blueMaterialTrans = this._createPlainColorMaterial(engine, State.translate, 0.3, 0.5, 1.0, 1.0);\n    Utils.lightBlueMaterial = this._createPlainColorMaterial(engine, State.translate, 0.3, 0.5, 1.0, 0.9);\n    Utils.invisibleMaterialTrans = this._createPlainColorMaterial(engine, State.translate, 0, 0, 0, 0);\n\n    // rotate material\n    Utils.redArcMaterial = this._createPlainColorMaterial(engine, State.rotate, 1.0, 0.25, 0.25);\n    Utils.greenArcMaterial = this._createPlainColorMaterial(engine, State.rotate, 0.5, 0.8, 0.2);\n    Utils.blueArcMaterial = this._createPlainColorMaterial(engine, State.rotate, 0.3, 0.5, 1.0);\n    Utils.yellowMaterial = this._createPlainColorMaterial(engine, State.rotate, 1.0, 0.95, 0.0, 1.0);\n    Utils.rotatePlaneMaterial = this._createPlainColorMaterial(engine, State.rotate, 1.0, 0.95, 0.0, 0.2);\n    Utils.rotatePlaneMaterial.renderState.rasterState.cullMode = CullMode.Off;\n    Utils.invisibleMaterialRotate = this._createPlainColorMaterial(engine, State.rotate, 0, 0, 0, 0);\n    Utils.invisibleMaterialRotate.renderState.rasterState.cullMode = CullMode.Off;\n\n    Utils.invisibleMaterialCircle = this._createPlainColorMaterial(engine, State.rotate, 0, 0, 0, 0);\n\n    // scale material\n    Utils.redMaterialScale = this._createPlainColorMaterial(engine, State.scale, 1.0, 0.25, 0.25, 1.0);\n    Utils.greenMaterialScale = this._createPlainColorMaterial(engine, State.scale, 0.5, 0.8, 0.2, 1.0);\n    Utils.blueMaterialScale = this._createPlainColorMaterial(engine, State.scale, 0.3, 0.5, 1.0, 1.0);\n    Utils.greyMaterial = this._createPlainColorMaterial(engine, State.scale, 0.75, 0.75, 0.75, 1.0);\n\n    Utils.lightMaterial = this._createPlainColorMaterial(engine, State.scale, 0.7, 0.7, 0.7, 1.0);\n\n    Utils.invisibleMaterialScale = this._createPlainColorMaterial(engine, State.scale, 0, 0, 0, 0);\n\n    Utils.lineMesh = PrimitiveMesh.createCylinder(engine, 0.02, 0.02, 1.5);\n    Utils.lineMeshShort = PrimitiveMesh.createCylinder(engine, 0.02, 0.02, 1.3);\n    Utils.axisArrowMesh = PrimitiveMesh.createCone(engine, 0.08, 0.3);\n    Utils.axisPlaneMesh = PrimitiveMesh.createPlane(engine, 0.35, 0.35);\n    Utils.axisCubeMesh = PrimitiveMesh.createCuboid(engine, 0.32, 0.32, 0.32);\n    Utils.axisSphereMesh = PrimitiveMesh.createSphere(engine, 1.8, 48);\n    Utils.axisEndCubeMesh = PrimitiveMesh.createCuboid(engine, 0.25, 0.25, 0.25);\n    Utils.axisXTorusMesh = GizmoMesh.createCircleTube(engine, Math.PI, 1.6, 0.02);\n    Utils.axisYTorusMesh = GizmoMesh.createCircleTube(engine, Math.PI, 1.6, 0.02);\n    Utils.axisZTorusMesh = GizmoMesh.createCircleTube(engine, Math.PI, 1.6, 0.02);\n\n    Utils.axisXYZTorusMesh = GizmoMesh.createCircleTube(engine, 2 * Math.PI, 1.8, 0.02);\n\n    Utils.axisHelperLineMesh = PrimitiveMesh.createCylinder(engine, 0.15, 0.15, 1.75);\n    Utils.axisHelperPlaneMesh = PrimitiveMesh.createPlane(engine, 0.75, 0.75);\n    Utils.axisHelpertorusMesh = GizmoMesh.createCircleTube(engine, Math.PI, 1.6, 0.24);\n\n    Utils.xAxisPositive = new Vector3(-1, 0, 0);\n    Utils.yAxisPositive = new Vector3(0, -1, 0);\n    Utils.zAxisPositive = new Vector3(0, 0, -1);\n  }\n\n  private static _createPlainColorMaterial(\n    engine: Engine,\n    name: State,\n    r: number = 1.0,\n    g: number = 1.0,\n    b: number = 1.0,\n    a: number = 1.0\n  ): PlainColorMaterial {\n    const material = new PlainColorMaterial(engine);\n    material.isTransparent = true;\n    material.renderState.depthState.enabled = false;\n    material.baseColor.set(r, g, b, a);\n    material.name = name.toString();\n    return material;\n  }\n}\n"],"names":["Utils","init","engine","redMaterialTrans","_createPlainColorMaterial","State","translate","lightRedMaterial","greenMaterialTrans","lightGreenMaterial","blueMaterialTrans","lightBlueMaterial","invisibleMaterialTrans","redArcMaterial","rotate","greenArcMaterial","blueArcMaterial","yellowMaterial","rotatePlaneMaterial","renderState","rasterState","cullMode","CullMode","Off","invisibleMaterialRotate","invisibleMaterialCircle","redMaterialScale","scale","greenMaterialScale","blueMaterialScale","greyMaterial","lightMaterial","invisibleMaterialScale","lineMesh","PrimitiveMesh","createCylinder","lineMeshShort","axisArrowMesh","createCone","axisPlaneMesh","createPlane","axisCubeMesh","createCuboid","axisSphereMesh","createSphere","axisEndCubeMesh","axisXTorusMesh","GizmoMesh","createCircleTube","Math","PI","axisYTorusMesh","axisZTorusMesh","axisXYZTorusMesh","axisHelperLineMesh","axisHelperPlaneMesh","axisHelpertorusMesh","xAxisPositive","Vector3","yAxisPositive","zAxisPositive","name","r","g","b","a","material","PlainColorMaterial","isTransparent","depthState","enabled","baseColor","set","toString","rotateCircleRadius","scaleFactor"],"mappings":"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"}