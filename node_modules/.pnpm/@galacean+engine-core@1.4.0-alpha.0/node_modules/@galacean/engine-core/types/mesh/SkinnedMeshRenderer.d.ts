import { BoundingBox } from "@galacean/engine-math";
import { Entity } from "../Entity";
import { RenderContext } from "../RenderPipeline/RenderContext";
import { MeshRenderer } from "./MeshRenderer";
import { Skin } from "./Skin";
/**
 * SkinnedMeshRenderer.
 */
export declare class SkinnedMeshRenderer extends MeshRenderer {
    private static _jointCountProperty;
    private static _jointSamplerProperty;
    private static _jointMatrixProperty;
    private _localBounds;
    private _jointDataCreateCache;
    private _blendShapeWeights;
    private _maxVertexUniformVectors;
    private _jointTexture;
    private _skin;
    /**
     * Skin of the SkinnedMeshRenderer.
     */
    get skin(): Skin;
    set skin(value: Skin);
    /**
     * The weights of the BlendShapes.
     * @remarks Array index is BlendShape index.
     */
    get blendShapeWeights(): Float32Array;
    set blendShapeWeights(value: Float32Array);
    /**
     * Local bounds.
     */
    get localBounds(): BoundingBox;
    set localBounds(value: BoundingBox);
    protected _update(context: RenderContext): void;
    private _checkBlendShapeWeightLength;
    private _onLocalBoundsChanged;
    private _onSkinUpdated;
    private _applySkin;
    /**
     * @deprecated use {@link SkinnedMeshRenderer.skin.rootBone} instead.
     */
    get rootBone(): Entity;
    set rootBone(value: Entity);
    /**
     * @deprecated use {@link SkinnedMeshRenderer.skin.bones} instead.
     */
    get bones(): Readonly<Entity[]>;
    set bones(value: Readonly<Entity[]>);
}
