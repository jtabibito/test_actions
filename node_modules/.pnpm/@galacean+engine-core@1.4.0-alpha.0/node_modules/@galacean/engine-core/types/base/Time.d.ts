/**
 * Provide time related information.
 */
export declare class Time {
    private static _elapsedTimeProperty;
    private static _deltaTimeProperty;
    private _frameCount;
    private _deltaTime;
    private _actualDeltaTime;
    private _elapsedTime;
    private _actualElapsedTime;
    private _lastSystemTime;
    private _elapsedTimeValue;
    private _deltaTimeValue;
    /** Maximum delta time allowed per frame in seconds. */
    maximumDeltaTime: number;
    /** The scale of time. */
    timeScale: number;
    get frameCount(): number;
    /**
     * The delta time in seconds from the last frame to the current frame.
     *
     * @remarks When the frame rate is low or stutter occurs, `deltaTime` will not exceed the value of `maximumDeltaTime` * `timeScale`.
     */
    get deltaTime(): number;
    /**
     * The amount of elapsed time in seconds since the start of the engine.
     */
    get elapsedTime(): number;
    /**
     * The actual delta time in seconds from the last frame to the current frame.
     *
     * @remarks The actual delta time is not affected by `maximumDeltaTime` and `timeScale`.
     */
    get actualDeltaTime(): number;
    /**
     * The amount of actual elapsed time in seconds since the start of the engine.
     */
    get actualElapsedTime(): number;
    /**
     * Constructor of the Time.
     */
    constructor();
}
