import { ShaderMacro } from "../../shader";
import { ShaderProperty } from "../../shader/ShaderProperty";
import { ParticleSimulationSpace } from "../enums/ParticleSimulationSpace";
import { ParticleCompositeCurve } from "./ParticleCompositeCurve";
import { ParticleGeneratorModule } from "./ParticleGeneratorModule";
import { ParticleGenerator } from "../ParticleGenerator";
/**
 * Velocity over lifetime module.
 */
export declare class VelocityOverLifetimeModule extends ParticleGeneratorModule {
    static readonly _constantMacro: ShaderMacro;
    static readonly _curveMacro: ShaderMacro;
    static readonly _randomConstantMacro: ShaderMacro;
    static readonly _randomCurveMacro: ShaderMacro;
    static readonly _minConstantProperty: ShaderProperty;
    static readonly _maxConstantProperty: ShaderProperty;
    static readonly _minGradientXProperty: ShaderProperty;
    static readonly _minGradientYProperty: ShaderProperty;
    static readonly _minGradientZProperty: ShaderProperty;
    static readonly _maxGradientXProperty: ShaderProperty;
    static readonly _maxGradientYProperty: ShaderProperty;
    static readonly _maxGradientZProperty: ShaderProperty;
    static readonly _spaceProperty: ShaderProperty;
    private _velocityMinConstant;
    private _velocityMaxConstant;
    private _velocityMacro;
    private _velocityX;
    private _velocityY;
    private _velocityZ;
    private _space;
    /**
     * Velocity over lifetime for x axis.
     */
    get velocityX(): ParticleCompositeCurve;
    set velocityX(value: ParticleCompositeCurve);
    /**
     * Velocity over lifetime for y axis.
     */
    get velocityY(): ParticleCompositeCurve;
    set velocityY(value: ParticleCompositeCurve);
    /**
     * Velocity over lifetime for z axis.
     */
    get velocityZ(): ParticleCompositeCurve;
    set velocityZ(value: ParticleCompositeCurve);
    /**
     * Velocity space.
     */
    get space(): ParticleSimulationSpace;
    set space(value: ParticleSimulationSpace);
    get enabled(): boolean;
    set enabled(value: boolean);
    constructor(generator: ParticleGenerator);
    private _onCompositeCurveChange;
}
