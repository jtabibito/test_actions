import { Vector3 } from "@galacean/engine-math";
import { Light } from "./Light";
/**
 * Directional light.
 */
export declare class DirectLight extends Light {
    private static _cullingMaskProperty;
    private static _colorProperty;
    private static _directionProperty;
    /**
     * The offset distance in the opposite direction of light direction when generating shadows.
     * @remarks Increasing this value can avoid the holes in the shadow caused by low polygon models.
     */
    shadowNearPlaneOffset: number;
    private _reverseDirection;
    /**
     * Get direction.
     */
    get direction(): Vector3;
    /**
     * Get the opposite direction of the directional light direction.
     */
    get reverseDirection(): Vector3;
}
/**
 * Shader properties data of direct lights in the scene.
 */
export interface IDirectLightShaderData {
    cullingMask: Int32Array;
    color: Float32Array;
    direction: Float32Array;
}
