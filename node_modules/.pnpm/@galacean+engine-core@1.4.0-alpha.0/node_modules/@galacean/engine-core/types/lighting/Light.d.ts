import { Color, Matrix } from "@galacean/engine-math";
import { Component } from "../Component";
import { Layer } from "../Layer";
import { ShadowType } from "../shadow";
/**
 * Light base class.
 */
export declare abstract class Light extends Component {
    /** Light Intensity */
    intensity: number;
    /**
     * Culling mask - which layers the light affect.
     * @remarks Support bit manipulation, corresponding to `Layer`.
     */
    cullingMask: Layer;
    /** How this light casts shadows. */
    shadowType: ShadowType;
    /** Shadow bias.*/
    shadowBias: number;
    /** Shadow mapping normal-based bias. */
    shadowNormalBias: number;
    /**
     * @deprecated
     * Please use `shadowNearPlaneOffset` instead.
     */
    shadowNearPlane: number;
    private _shadowStrength;
    private _color;
    private _viewMat;
    private _inverseViewMat;
    /** Shadow intensity, the larger the value, the clearer and darker the shadow, range [0,1]. */
    get shadowStrength(): number;
    set shadowStrength(value: number);
    /**
     * Light Color.
     */
    get color(): Color;
    set color(value: Color);
    /**
     * View matrix.
     */
    get viewMatrix(): Matrix;
    /**
     * Inverse view matrix.
     */
    get inverseViewMatrix(): Matrix;
}
