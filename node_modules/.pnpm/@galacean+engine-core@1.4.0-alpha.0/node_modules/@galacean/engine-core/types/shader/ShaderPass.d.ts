import { ShaderPart } from "./ShaderPart";
/**
 * Shader pass containing vertex and fragment source.
 */
export declare class ShaderPass extends ShaderPart {
    private static _shaderPassCounter;
    private _vertexSource;
    private _fragmentSource;
    private readonly _type;
    private readonly _shaderLabSource;
    private readonly _vertexEntry;
    private readonly _fragmentEntry;
    private _platformMacros;
    /**
     * Create a shader pass.
     * @param name - Shader pass name
     * @param vertexSource - Vertex shader source
     * @param fragmentSource - Fragment shader source
     * @param tags - Tags
     */
    constructor(name: string, vertexSource: string, fragmentSource: string, tags?: Record<string, number | string | boolean>);
    /**
     * Create a shader pass.
     * @param vertexSource - Vertex shader source
     * @param fragmentSource - Fragment shader source
     * @param tags - Tags
     */
    constructor(vertexSource: string, fragmentSource: string, tags?: Record<string, number | string | boolean>);
    /**
     * Shader Lab compilation
     */
    private _compileShaderProgram;
    private _getCanonicalShaderProgram;
}
