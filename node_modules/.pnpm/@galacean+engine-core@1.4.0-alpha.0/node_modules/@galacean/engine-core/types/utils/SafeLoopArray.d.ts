export declare class SafeLoopArray<T> {
    private _array;
    private _loopArray;
    private _loopArrayDirty;
    /**
     * Get the length of the array.
     */
    get length(): number;
    /**
     * Push item to the array.
     * @param item - The item which want to be pushed
     */
    push(item: T): void;
    /**
     * Add item to the array.
     * @param index - The index of the array
     * @param item - The item which want to be added
     */
    add(index: number, item: T): void;
    /**
     * Remove item from the array.
     * @param index - The index of the array
     */
    removeByIndex(index: number): void;
    /**
     * Remove item from array that pass the specified comparison function.
     * @param filter - The comparison function
     */
    findAndRemove(filter: (value: T) => boolean): void;
    /**
     * The index of the item.
     * @param item - The item which want to get the index
     * @returns Index of the item
     */
    indexOf(item: T): number;
    /**
     * Get the array.
     * @returns The array
     */
    getArray(): ReadonlyArray<T>;
    /**
     * Get the array use for loop.
     * @returns The array use for loop
     */
    getLoopArray(): ReadonlyArray<T>;
}
