import { AssetPromise, Engine, EngineConfiguration, Loader, LoadItem, ResourceManager } from "@galacean/engine-core";
import { GLTFResource } from "./gltf/GLTFResource";
export declare class GLTFLoader extends Loader<GLTFResource> {
    /**
     * Release glTF loader memory(includes meshopt workers).
     * @remarks If use loader after releasing, we should release again.
     */
    static release(): void;
    initialize(_: Engine, configuration: EngineConfiguration): Promise<void>;
    load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<GLTFResource>;
}
/**
 * GlTF loader params.
 */
export interface GLTFParams {
    /**
     * @beta Now only contains vertex information, need to improve.
     * Keep raw mesh data for glTF parser, default is false.
     */
    keepMeshData?: boolean;
    [key: string]: any;
}
