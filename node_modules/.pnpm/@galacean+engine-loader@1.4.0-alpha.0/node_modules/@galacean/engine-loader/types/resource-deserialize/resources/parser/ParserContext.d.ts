import { Component, Engine, EngineObject, Entity, ReferResource, ResourceManager, Scene } from "@galacean/engine-core";
import type { IEntity, IHierarchyFile } from "../schema";
export declare enum ParserType {
    Prefab = 0,
    Scene = 1
}
/**
 * Parser context
 * @export
 * @class ParserContext
 * @template T
 * @template I
 */
export declare class ParserContext<T extends IHierarchyFile, I extends EngineObject> {
    readonly engine: Engine;
    readonly type: ParserType;
    readonly resource: ReferResource | Scene;
    entityMap: Map<string, Entity>;
    entityConfigMap: Map<string, IEntity>;
    components: Map<string, Component>;
    rootIds: string[];
    strippedIds: string[];
    readonly resourceManager: ResourceManager;
    constructor(engine: Engine, type: ParserType, resource: ReferResource | Scene);
    /**
     * Destroy the context.
     * @memberof ParserContext
     */
    clear(): void;
}
