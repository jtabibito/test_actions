import { Vector3 } from "@galacean/engine";
/**
 * Wireframe primitive.
 */
export declare class WireframePrimitive {
    static _shift: Vector3;
    /** global settings for vertex count */
    static circleVertexCount: number;
    /**
     * Get cuboid wire frame index count.
     */
    static get cuboidIndexCount(): number;
    /**
     * Get cuboid wire frame position count.
     */
    static get cuboidPositionCount(): number;
    /**
     * Get sphere wire frame index count.
     */
    static get sphereIndexCount(): number;
    /**
     * Get sphere wire frame position count.
     */
    static get spherePositionCount(): number;
    /**
     * Get cone wire frame index count.
     */
    static get coneIndexCount(): number;
    /**
     * Get cone wire frame position count.
     */
    static get conePositionCount(): number;
    /**
     * Get unbound cylinder wire frame index count.
     */
    static get unboundCylinderIndexCount(): number;
    /**
     * Get unbound cylinder wire frame position count.
     */
    static get unboundCylinderPositionCount(): number;
    /**
     * Get capsule wire frame index count.
     */
    static get capsuleIndexCount(): number;
    /**
     * Get capsule wire frame position count.
     */
    static get capsulePositionCount(): number;
    /**
     * Get circle wire frame index count.
     */
    static get circleIndexCount(): number;
    /**
     * Get circle wire frame position count.
     */
    static get circlePositionCount(): number;
    /**
     * Get elliptic wire frame index count.
     */
    static get ellipticIndexCount(): number;
    /**
     * Get elliptic wire frame position count.
     */
    static get ellipticPositionCount(): number;
    /**
     * Get frustum wire frame index count.
     */
    static get frustumIndexCount(): number;
    /**
     * Get frustum wire frame position count.
     */
    static get frustumPositionCount(): number;
    /**
     * Get hemisphere wire frame index count.
     */
    static get hemisphereIndexCount(): number;
    /**
     * Get hemisphere wire frame position count.
     */
    static get hemispherePositionCount(): number;
    /**
     * Store cuboid wireframe mesh data.
     * The origin located in center of cuboid.
     * @param width - Cuboid width
     * @param height - Cuboid height
     * @param depth - Cuboid depth
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createCuboidWireframe(width: number, height: number, depth: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store sphere wireframe mesh data.
     * The origin located in center of sphere.
     * @param radius - Sphere radius
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createSphereWireframe(radius: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store cone wireframe mesh data.
     * The origin located in top of cone.
     * @param radius - The radius of cap
     * @param height - The height of cone
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createConeWireframe(radius: number, height: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store unbound cylinder wireframe mesh data.
     * The origin located in center of sphere.
     * @param radius - The radius
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createUnboundCylinderWireframe(radius: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store capsule wireframe mesh data.
     * The origin located in center of capsule.
     * @param radius - The radius of the two hemispherical ends
     * @param height - The height of the cylindrical part, measured between the centers of the hemispherical ends
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createCapsuleWireframe(radius: number, height: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store circle wireframe mesh data.
     * @param radius - The radius
     * @param axis - The default direction
     * @param shift - The default shift
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createCircleWireframe(radius: number, axis: number, shift: Vector3, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store elliptic wireframe mesh data.
     * @param radius - The radius of the two hemispherical ends
     * @param height - The height of the cylindrical part, measured between the centers of the hemispherical ends
     * @param axis - The default direction
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createEllipticWireframe(radius: number, height: number, axis: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store frustum wireframe mesh data.
     * The origin located in the center of cap.
     * @param radius - The radius of cap
     * @param height - The height of cone
     * @param angle - The angle of cone
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createFrustumWireframe(radius: number, height: number, angle: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
    /**
     * Store hemisphere wireframe mesh data.
     * @param radius - The radius of hemisphere
     * @param axis - The default direction
     * @param positions - position array
     * @param positionOffset - The min of index list
     * @param indices - index array
     * @param indicesOffset - index array offset
     */
    static createHemisphereWireframe(radius: number, axis: number, positions: Vector3[], positionOffset: number, indices: Uint16Array | Uint32Array, indicesOffset: number): void;
}
