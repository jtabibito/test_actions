{"version":3,"file":"Line.js","sources":["../../../src/line/Line.ts"],"sourcesContent":["import {\n  Buffer,\n  BufferBindFlag,\n  BufferMesh,\n  BufferUsage,\n  Color,\n  IndexFormat,\n  MeshRenderer,\n  Script,\n  Vector2,\n  VertexElement,\n  VertexElementFormat\n} from \"@galacean/engine\";\nimport { LineMaterial } from \"./material/LineMaterial\";\nimport { LineCap, LineJoin } from \"./constants\";\nimport { LineVertexBuilder } from \"./vertexBuilder\";\n\n/**\n * Solid Line.\n */\nexport class Line extends Script {\n  protected _points: Vector2[] = [];\n  protected _cap = LineCap.Butt;\n  protected _join = LineJoin.Miter;\n  protected _renderer: MeshRenderer;\n  protected _material: LineMaterial;\n  protected _flattenPoints: number[] = [];\n  private _width: number = 0.1;\n  private _color: Color = new Color(0, 0, 0, 1);\n  private _mesh: BufferMesh;\n  private _needUpdate = false;\n\n  /**\n   * The points that make up the line.\n   */\n  get points(): Vector2[] {\n    return this._points;\n  }\n\n  set points(value: Vector2[]) {\n    this._points = value;\n    this._flattenPoints = this._points\n      .map((point) => {\n        return [point.x, point.y];\n      })\n      .flat();\n    this._needUpdate = true;\n  }\n\n  /**\n   * Determines the shape used to draw the end points of line.\n   */\n  get cap(): LineCap {\n    return this._cap;\n  }\n\n  set cap(value: LineCap) {\n    if (value !== this._cap) {\n      this._cap = value;\n      this._renderer?.shaderData.setInt(\"u_cap\", value);\n      this._needUpdate = true;\n    }\n  }\n\n  /**\n   * Determines the shape used to join two line segments where they meet.\n   */\n  get join(): LineJoin {\n    return this._join;\n  }\n\n  set join(value: LineJoin) {\n    if (value !== this._join) {\n      this._join = value;\n      this._renderer?.shaderData.setInt(\"u_join\", value);\n      this._needUpdate = true;\n    }\n  }\n\n  /**\n   * The thickness of line.\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value) {\n    this._width = value;\n    this._renderer.shaderData.setFloat(\"u_width\", value);\n  }\n\n  /**\n   * The color of line.\n   */\n  get color(): Color {\n    return this._color;\n  }\n\n  set color(value: Color) {\n    this._color = value;\n    this._renderer.shaderData.setColor(\"u_color\", value);\n  }\n\n  constructor(entity) {\n    super(entity);\n  }\n\n  /**\n   * @internal\n   */\n  override onAwake(): void {\n    this._renderer = this.entity.addComponent(MeshRenderer);\n    this.color = this._color;\n    this.join = this._join;\n    this.cap = this._cap;\n    this.width = this._width;\n    this._initMaterial();\n\n    this._mesh = new BufferMesh(this.engine, \"LineGeometry\");\n    // Add vertexElement\n    this._mesh.setVertexElements([\n      new VertexElement(\"a_pos\", 0, VertexElementFormat.Vector2, 0),\n      new VertexElement(\"a_normal\", 8, VertexElementFormat.Vector2, 0),\n      new VertexElement(\"a_data\", 16, VertexElementFormat.Short2, 0),\n      new VertexElement(\"a_lengthsofar\", 20, VertexElementFormat.Float, 0)\n    ]);\n\n    this._renderer.mesh = this._mesh;\n  }\n\n  /**\n   * @internal\n   */\n  override onUpdate(): void {\n    if (this._needUpdate) {\n      this._render();\n      this._needUpdate = false;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  override onEnable(): void {\n    this._renderer.enabled = true;\n  }\n\n  /**\n   * @internal\n   */\n  override onDisable(): void {\n    this._renderer.enabled = false;\n  }\n\n  /**\n   * @internal\n   */\n  override onDestroy() {\n    this._renderer.destroy();\n  }\n\n  protected async _generateData() {\n    return await LineVertexBuilder.instance.solidLine(this._flattenPoints, this._join, this._cap, -1);\n  }\n\n  protected async _render() {\n    const { vertices, indices } = await this._generateData();\n    const vertexBuffer = new Buffer(this.engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static);\n    const indexBuffer = new Buffer(this.engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n    vertexBuffer.setData(vertices);\n    indexBuffer.setData(indices);\n\n    // destroy old buffer\n    if (this._mesh) {\n      this._mesh.vertexBufferBindings.forEach((binding) => {\n        binding?.buffer?.destroy();\n      });\n      this._mesh.indexBufferBinding?.buffer?.destroy();\n    }\n\n    this._mesh.setVertexBufferBinding(vertexBuffer, 24, 0);\n    this._mesh.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n\n    this._mesh.clearSubMesh();\n    this._mesh.addSubMesh(0, indices.length);\n\n    // @ts-ignore\n    this._mesh._enableVAO = false;\n  }\n\n  protected _initMaterial() {\n    this._material = new LineMaterial(this.engine);\n    this._renderer.setMaterial(this._material);\n  }\n}\n"],"names":["Line","entity","_points","_cap","LineCap","Butt","_join","LineJoin","Miter","_flattenPoints","_width","_color","Color","_needUpdate","onAwake","_renderer","addComponent","MeshRenderer","color","join","cap","width","_initMaterial","_mesh","BufferMesh","engine","setVertexElements","VertexElement","VertexElementFormat","Vector2","Short2","Float","mesh","onUpdate","_render","onEnable","enabled","onDisable","onDestroy","destroy","_generateData","LineVertexBuilder","instance","solidLine","vertices","indices","vertexBuffer","indexBuffer","Buffer","BufferBindFlag","VertexBuffer","BufferUsage","Static","IndexBuffer","setData","vertexBufferBindings","forEach","binding","buffer","indexBufferBinding","setVertexBufferBinding","setIndexBufferBinding","IndexFormat","UInt16","clearSubMesh","addSubMesh","length","_enableVAO","_material","LineMaterial","setMaterial","points","value","map","point","x","y","flat","shaderData","setInt","setFloat","setColor","Script"],"mappings":"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"}