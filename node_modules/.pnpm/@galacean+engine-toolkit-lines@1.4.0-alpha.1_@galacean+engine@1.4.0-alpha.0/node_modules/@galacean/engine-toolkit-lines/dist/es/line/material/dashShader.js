import { Shader } from '@galacean/engine';

//-- Shader 代码
var vertexSource = "\nattribute vec2 a_pos;\nattribute vec2 a_normal;\nattribute vec2 a_data;\nattribute float a_lengthsofar;\n\nuniform mat4 renderer_MVPMat;\nuniform float u_width;\nuniform vec2 u_dash;\n\nvarying vec2 v_origin;\nvarying vec2 v_position;\nvarying float v_direction;\nvarying float v_part;\nvarying vec2 v_tex;\n\nvoid main() {\n    v_direction = a_data.x;\n    v_part = a_data.y;\n    float layer_index = 1.0;\n\n\n    v_origin = a_pos;\n\n    float texcoord_y = 0.0;\n\n    texcoord_y = a_lengthsofar / (u_dash.x + u_dash.y);\n    if (v_direction == 1.0) {\n        v_tex = vec2(1.0, texcoord_y);\n    } else {\n        v_tex = vec2(0.0, texcoord_y);\n    }\n    vec2 position = a_pos + a_normal * u_width;\n    v_position = position;\n    gl_Position = renderer_MVPMat * vec4(position, 0.0, 1);\n}\n  ";
var fragmentSource = "\nprecision highp float;\n\nuniform vec4 u_color;\nuniform int u_join;\nuniform int u_cap;\nuniform float u_width;\nuniform sampler2D u_texture;\n\nvarying vec2 v_origin;\nvarying vec2 v_position;\nvarying float v_direction;\nvarying float v_part;\nvarying vec2 v_tex;\n\nfloat IS_CAP = 0.0;\n\nvoid main() {\n    vec4 finalColor;\n    if (u_cap == 0 && v_part == IS_CAP) {\n      if (distance(v_position, v_origin) > u_width) {\n        discard;\n      }\n    }\n    if (u_join == 1 && v_part > 1.5) {\n      if (distance(v_position, v_origin) > u_width) {\n        discard;\n      }\n    }\n    vec4 textureColor = texture2D(u_texture, v_tex);\n    if (textureColor.a <= 0.5) {\n      gl_FragColor = vec4(u_color.rgb, 0.0);\n    } else {\n      gl_FragColor = u_color;\n    }\n}\n";
Shader.create("dash", vertexSource, fragmentSource);
//# sourceMappingURL=dashShader.js.map
