import { Shader } from '@galacean/engine';

//-- Shader 代码
var vertexSource = "\nattribute vec2 a_pos;\nattribute vec2 a_normal;\nattribute vec2 a_data;\n\nuniform mat4 renderer_MVPMat;\nuniform float u_width;\n\nvarying vec2 v_origin;\nvarying vec2 v_position;\nvarying float v_direction;\nvarying float v_part;\n\nvoid main() {\n    v_direction = a_data.x;\n    v_part = a_data.y;\n    float layer_index = 1.0;\n\n    v_origin = a_pos;\n    vec2 position = a_pos + a_normal * u_width;\n    v_position = position;\n    gl_Position = renderer_MVPMat * vec4(position, 0.0, 1);\n}\n  ";
var fragmentSource = "\nprecision highp float;\n\nuniform vec4 u_color;\nuniform int u_join;\nuniform int u_cap;\nuniform float u_width;\n\nvarying vec2 v_origin;\nvarying vec2 v_position;\nvarying float v_direction;\nvarying float v_part;\n\nfloat IS_CAP = 0.0;\n\nvoid main() {\n    vec4 finalColor;\n    if (u_cap == 0 && v_part == IS_CAP) {\n      if (distance(v_position, v_origin) > u_width) {\n        discard;\n      }\n    }\n    if (u_join == 1 && v_part > 1.0) {\n      if (distance(v_position, v_origin) > u_width) {\n        discard;\n      }\n    }\n\n    gl_FragColor = u_color;\n}\n\n  ";
Shader.create("line", vertexSource, fragmentSource);
//# sourceMappingURL=lineShader.js.map
