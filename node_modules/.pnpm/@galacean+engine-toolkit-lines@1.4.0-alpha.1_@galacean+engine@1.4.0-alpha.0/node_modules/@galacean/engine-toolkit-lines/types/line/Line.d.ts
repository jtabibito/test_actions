import { Color, MeshRenderer, Script, Vector2 } from "@galacean/engine";
import { LineMaterial } from "./material/LineMaterial";
import { LineCap, LineJoin } from "./constants";
/**
 * Solid Line.
 */
export declare class Line extends Script {
    protected _points: Vector2[];
    protected _cap: LineCap;
    protected _join: LineJoin;
    protected _renderer: MeshRenderer;
    protected _material: LineMaterial;
    protected _flattenPoints: number[];
    private _width;
    private _color;
    private _mesh;
    private _needUpdate;
    /**
     * The points that make up the line.
     */
    get points(): Vector2[];
    set points(value: Vector2[]);
    /**
     * Determines the shape used to draw the end points of line.
     */
    get cap(): LineCap;
    set cap(value: LineCap);
    /**
     * Determines the shape used to join two line segments where they meet.
     */
    get join(): LineJoin;
    set join(value: LineJoin);
    /**
     * The thickness of line.
     */
    get width(): number;
    set width(value: number);
    /**
     * The color of line.
     */
    get color(): Color;
    set color(value: Color);
    constructor(entity: any);
    /**
     * @internal
     */
    onAwake(): void;
    /**
     * @internal
     */
    onUpdate(): void;
    /**
     * @internal
     */
    onEnable(): void;
    /**
     * @internal
     */
    onDisable(): void;
    /**
     * @internal
     */
    onDestroy(): void;
    protected _generateData(): Promise<{
        vertices: Float32Array;
        indices: Uint16Array;
    }>;
    protected _render(): Promise<void>;
    protected _initMaterial(): void;
}
