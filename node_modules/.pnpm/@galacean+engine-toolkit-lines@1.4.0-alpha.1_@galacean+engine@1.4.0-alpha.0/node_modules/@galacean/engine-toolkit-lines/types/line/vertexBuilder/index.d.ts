/**
 * @file 构建线三角形
 */
import { LineCap, LineJoin } from "../constants";
type LineBuilderResult = {
    vertices: Float32Array;
    indices: Uint16Array;
};
declare class LineVertexBuilder {
    private static _instance;
    static get instance(): LineVertexBuilder;
    private _memory;
    private _heap32;
    private _heap16;
    private _wasmModule;
    private _wasmInitPromise;
    constructor();
    /**
     * Parse the solid line
     * @param points The points array
     * @param join Line's join property
     * @param cap Line's cap property
     * @param start The start index of the output vertex.
     * @returns The vertex buffer and index buffer.
     */
    solidLine(points: number[], join: LineJoin, cap: LineCap, start: number): Promise<LineBuilderResult>;
    /**
     * Parse the dash line
     * @param points The points array
     * @param join Line's join property
     * @param cap Line's cap property
     * @param lengthsofar Length of all previous lines.
     * @param start The start index of the output vertex.
     * @returns The vertex buffer and index buffer.
     */
    dashLine(points: number[], join: LineJoin, cap: LineCap, lengthsofar: number, start: number): Promise<LineBuilderResult>;
    private _getSolidVertexCount;
    private _getDashVertexCount;
}
export { LineVertexBuilder };
