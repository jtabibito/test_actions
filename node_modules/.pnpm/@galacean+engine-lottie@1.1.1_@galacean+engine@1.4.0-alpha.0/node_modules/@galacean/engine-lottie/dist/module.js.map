{"version":3,"file":"module.js","sources":["../node_modules/@swc/helpers/esm/_create_class.js","../node_modules/@swc/helpers/esm/_set_prototype_of.js","../node_modules/@swc/helpers/esm/_inherits.js","../node_modules/tslib/tslib.es6.js","../node_modules/bezier-easing/src/index.js","../src/bezier.ts","../src/tools.ts","../src/Expression.ts","../src/property/BaseProperty.ts","../src/property/ValueProperty.ts","../src/property/MultiDimensionalProperty.ts","../src/property/KeyframedValueProperty.ts","../src/property/KeyframedMultidimensionalProperty.ts","../src/TransformFrames.ts","../src/element/BaseLottieElement.ts","../src/element/CompLottieElement.ts","../src/element/SpriteLottieElement.ts","../src/element/TextLottieElement.ts","../src/LottieAnimation.ts","../node_modules/@swc/helpers/esm/_extends.js","../node_modules/@swc/helpers/esm/_type_of.js","../src/LottieResource.ts","../src/EditorLottieLoader.ts","../src/LottieLoader.ts","../src/index.ts"],"sourcesContent":["function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _ as _set_prototype_of } from \"./_set_prototype_of.js\";\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n","import BezierEasing from \"bezier-easing\";\n\nconst defaultCurveSegments = 200;\nconst beziers = {};\n\n/**\n * get a bezierEasing from real time or cache\n */\nfunction getBezierEasing(a: number, b: number, c: number, d: number, nm?: string): BezierEasing.EasingFunction {\n  const str = nm || (\"bez_\" + a + \"_\" + b + \"_\" + c + \"_\" + d).replace(/\\./g, \"p\");\n  let bezier = beziers[str];\n\n  if (bezier) {\n    return bezier;\n  }\n\n  bezier = BezierEasing(a, b, c, d);\n  beziers[str] = bezier;\n\n  return bezier;\n}\n\nconst storedData = {};\n\nfunction buildBezierData(s: number[], e: number[], to: number[], ti: number[], segments?: number) {\n  const curveSegments: number = segments ? Math.min(segments, defaultCurveSegments) : defaultCurveSegments;\n  const bezierName = (\n    s[0] +\n    \"_\" +\n    s[1] +\n    \"_\" +\n    e[0] +\n    \"_\" +\n    e[1] +\n    \"_\" +\n    to[0] +\n    \"_\" +\n    to[1] +\n    \"_\" +\n    ti[0] +\n    \"_\" +\n    ti[1] +\n    \"_\" +\n    curveSegments\n  ).replace(/\\./g, \"p\");\n\n  if (!storedData[bezierName]) {\n    let segmentLength: number = 0;\n    let lastPoint: number[];\n    let points = [];\n\n    for (let k = 0; k < curveSegments; k++) {\n      const len = to.length;\n      const point: number[] = new Array(len);\n      const perc: number = k / (curveSegments - 1);\n      let ptDistance: number = 0;\n\n      for (let i = 0; i < len; i += 1) {\n        const ptCoord =\n          Math.pow(1 - perc, 3) * s[i] +\n          3 * Math.pow(1 - perc, 2) * perc * (s[i] + to[i]) +\n          3 * (1 - perc) * Math.pow(perc, 2) * (e[i] + ti[i]) +\n          Math.pow(perc, 3) * e[i];\n\n        point[i] = ptCoord;\n\n        if (lastPoint) {\n          ptDistance += Math.pow(point[i] - lastPoint[i], 2);\n        }\n      }\n\n      ptDistance = Math.sqrt(ptDistance);\n      segmentLength += ptDistance;\n\n      points.push({\n        partialLength: ptDistance,\n        point\n      });\n\n      lastPoint = point;\n    }\n\n    storedData[bezierName] = {\n      segmentLength,\n      points\n    };\n  }\n\n  return storedData[bezierName];\n}\n\nexport default {\n  buildBezierData,\n  getBezierEasing\n};\n","/**\n * some useful toolkit\n * @namespace\n */\nconst Tools = {\n  /**\n   * euclidean modulo\n   * @method\n   * @param {Number} n input value\n   * @param {Number} m modulo\n   * @return {Number} re-map to modulo area\n   */\n  euclideanModulo: function (n, m) {\n    return ((n % m) + m) % m;\n  },\n\n  /**\n   * bounce value when value spill codomain\n   * @method\n   * @param {Number} n input value\n   * @param {Number} min lower boundary\n   * @param {Number} max upper boundary\n   * @return {Number} bounce back to boundary area\n   */\n  codomainBounce: function (n, min, max) {\n    if (n < min) return 2 * min - n;\n    if (n > max) return 2 * max - n;\n    return n;\n  },\n\n  /**\n   * clamp a value in range\n   * @method\n   * @param {Number} x input value\n   * @param {Number} a lower boundary\n   * @param {Number} b upper boundary\n   * @return {Number} clamp in range\n   */\n  clamp: function (x, a, b) {\n    return x < a ? a : x > b ? b : x;\n  }\n};\n\nexport default Tools;\n","// @ts-nocheck\nimport Tools from \"./tools\";\n\nconst EX_REG = /(loopIn|loopOut)\\(([^)]+)/;\nconst STR_REG = /[\"']\\w+[\"']/;\n\n/**\n * Cycle\n * @class\n * @private\n */\nclass Cycle {\n  /**\n   * Pingpong\n   * @param {*} type Pingpong\n   * @param {*} begin Pingpong\n   * @param {*} end Pingpong\n   */\n  constructor(type, begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.total = this.end - this.begin;\n    this.type = type;\n  }\n\n  /**\n   * progress\n   * @param {number} progress progress\n   * @return {number} progress\n   */\n  update(progress) {\n    if (this.type === \"in\") {\n      if (progress >= this.begin) return progress;\n      return this.end - Tools.euclideanModulo(this.begin - progress, this.total);\n    } else if (this.type === \"out\") {\n      if (progress <= this.end) return progress;\n      return this.begin + Tools.euclideanModulo(progress - this.end, this.total);\n    }\n  }\n}\n\n/**\n * Pingpong\n * @class\n * @private\n */\nclass Pingpong {\n  /**\n   * Pingpong\n   * @param {*} type Pingpong\n   * @param {*} begin Pingpong\n   * @param {*} end Pingpong\n   */\n  constructor(type, begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.total = this.end - this.begin;\n    this.type = type;\n  }\n\n  /**\n   * progress\n   * @param {number} progress progress\n   * @return {number} progress\n   */\n  update(progress) {\n    if ((this.type === \"in\" && progress < this.begin) || (this.type === \"out\" && progress > this.end)) {\n      const space = progress - this.end;\n      return this.pingpong(space);\n    }\n    return progress;\n  }\n\n  /**\n   * pingpong\n   * @param {number} space\n   * @return {number}\n   */\n  pingpong(space) {\n    const dir = Math.floor(space / this.total) % 2;\n    if (dir) {\n      return this.begin + Tools.euclideanModulo(space, this.total);\n    } else {\n      return this.end - Tools.euclideanModulo(space, this.total);\n    }\n  }\n}\n\nconst FN_MAPS = {\n  loopIn(datak, mode, offset) {\n    const begin = datak[0].t;\n    const last = datak.length - 1;\n    const endIdx = Math.min(last, offset);\n    const end = datak[endIdx].t;\n    switch (mode) {\n      case \"cycle\":\n        return new Cycle(\"in\", begin, end);\n      case \"pingpong\":\n        return new Pingpong(\"in\", begin, end);\n      default:\n        break;\n    }\n    return null;\n  },\n  loopOut(datak, mode, offset) {\n    const last = datak.length - 1;\n    const beginIdx = Math.max(0, last - offset);\n    const begin = datak[beginIdx].t;\n    const end = datak[last].t;\n    switch (mode) {\n      case \"cycle\":\n        return new Cycle(\"out\", begin, end);\n      case \"pingpong\":\n        return new Pingpong(\"out\", begin, end);\n      default:\n        break;\n    }\n    return null;\n  }\n};\n\n/**\n * parseParams\n * @ignore\n * @param {string} pStr string\n * @return {array}\n */\nfunction parseParams(pStr) {\n  const params = pStr.split(/\\s*,\\s*/);\n  return params.map((it) => {\n    if (STR_REG.test(it)) return it.replace(/\"|'/g, \"\");\n    return parseInt(it);\n  });\n}\n\n/**\n * parseEx\n * @ignore\n * @param {string} ex string\n * @return {object}\n */\nfunction parseEx(ex) {\n  const rs = ex.match(EX_REG);\n  const ps = parseParams(rs[2]);\n  return {\n    name: rs[1],\n    mode: ps[0],\n    offset: ps[1]\n  };\n}\n\n/**\n * hasSupportExpression\n * @ignore\n * @param {string} ksp string\n * @return {boolean}\n */\nfunction hasSupportExpression(ksp) {\n  return ksp.x && EX_REG.test(ksp.x);\n}\n\n/**\n * getExpression\n * @ignore\n * @param {object} ksp ksp\n * @return {object}\n */\nfunction getExpression(ksp) {\n  const { name, mode, offset = 0 } = parseEx(ksp.x);\n  const _offset = offset === 0 ? ksp.k.length - 1 : offset;\n  return FN_MAPS[name] && FN_MAPS[name](ksp.k, mode, _offset);\n}\n\nexport default { hasSupportExpression, getExpression };\n","import bez from \"../bezier\";\nimport Expression from \"../Expression\";\n\nexport type TypeValueProperty = {\n  k: number;\n  x?: Function;\n  ix?: number;\n  a: boolean;\n};\n\ntype TypePoint = {\n  partialLength: number;\n  point: number[];\n};\n\nexport type TypeKeyframe = {\n  e: number[];\n  s: number[];\n  t: number;\n  i?: { x: number; y: number };\n  o?: { x: number; y: number };\n  h?: number;\n  ti?: number[];\n  to?: number[];\n  beziers?: BezierEasing.EasingFunction[];\n  timeBezier?: BezierEasing.EasingFunction;\n  bezierData?: { segmentLength: number; points: TypePoint[] };\n  n?: string;\n};\n\nexport type TypeValueKeyframedProperty = {\n  k: TypeKeyframe[];\n  x?: Function;\n  ix?: number;\n  a: boolean;\n};\n\nexport type TypeMultiDimensionalProperty = {\n  k: number[];\n  x?: Function;\n  ix?: number;\n  a: boolean;\n};\n\nexport type TypeMultiDimensionalKeyframedProperty = {\n  k: TypeKeyframe[];\n  x?: Function;\n  ix?: number;\n  a: boolean;\n};\n/**\n * basic property for animate property unit\n * @internal\n */\nexport default class BaseProperty {\n  mult: number;\n  v: any;\n\n  value: any;\n  newValue: any;\n  expression: any;\n  animated: boolean;\n\n  constructor(\n    data:\n      | TypeValueProperty\n      | TypeValueKeyframedProperty\n      | TypeMultiDimensionalProperty\n      | TypeMultiDimensionalKeyframedProperty,\n    mult?: number\n  ) {\n    this.mult = mult || 1;\n    this.value = data.k;\n    this.animated = data.a;\n\n    if (Expression.hasSupportExpression(data)) {\n      this.expression = Expression.getExpression(data);\n    }\n  }\n\n  getValue(frameNum: number, i: number, keyData: TypeKeyframe, nextKeyData: TypeKeyframe) {\n    let perc: number;\n    const keyTime = keyData.t;\n    const nextKeyTime = nextKeyData.t;\n    const startValue = keyData.s[i];\n    const endValue = (nextKeyData.s || keyData.e)[i];\n\n    if (keyData.h === 1) {\n      return startValue;\n    }\n\n    if (frameNum >= nextKeyTime) {\n      perc = 1;\n    } else if (frameNum < keyTime) {\n      perc = 0;\n    } else {\n      let bezier: BezierEasing.EasingFunction = keyData.beziers[i];\n\n      if (!bezier) {\n        if (typeof keyData.o.x === \"number\") {\n          bezier = bez.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y);\n        } else {\n          bezier = bez.getBezierEasing(keyData.o.x[i], keyData.o.y[i], keyData.i.x[i], keyData.i.y[i]);\n        }\n        keyData.beziers[i] = bezier;\n      }\n\n      perc = bezier((frameNum - keyTime) / (nextKeyTime - keyTime));\n    }\n\n    return startValue + (endValue - startValue) * perc;\n  }\n\n  protected reset() {}\n}\n","import BaseProperty from \"./BaseProperty\";\nimport { TypeValueProperty } from \"./BaseProperty\";\n\n/**\n * unidimensional value property\n * @internal\n */\nexport default class ValueProperty extends BaseProperty {\n  constructor(data: TypeValueProperty, mult: number = 1) {\n    super(data, mult);\n    this.v = mult ? this.value * mult : this.value;\n  }\n\n  update() {\n    this.v = this.value * this.mult;\n  }\n}\n","import BaseProperty, { TypeMultiDimensionalProperty } from \"./BaseProperty\";\n\n/**\n * multidimensional value property\n */\nexport default class MultiDimensionalProperty extends BaseProperty {\n  constructor(data: TypeMultiDimensionalProperty, mult = 1) {\n    super(data, mult);\n    const len = this.value.length;\n    this.v = new Float32Array(len);\n    this.newValue = new Float32Array(len);\n\n    for (let i = 0; i < len; i += 1) {\n      this.v[i] = this.value[i] * this.mult;\n    }\n  }\n\n  update() {\n    let finalValue: number[];\n\n    finalValue = this.value;\n\n    for (let i = 0, len = this.v.length; i < len; i++) {\n      this.v[i] = finalValue[i] * this.mult;\n    }\n  }\n}\n","import Expression from \"../Expression\";\nimport BaseProperty, { TypeKeyframe, TypeValueKeyframedProperty } from \"./BaseProperty\";\n\n/**\n * keyframed unidimensional value property\n */\nexport default class KeyframedValueProperty extends BaseProperty {\n  private _value: number = 0;\n\n  constructor(data: TypeValueKeyframedProperty, mult: number = 1) {\n    super(data, mult);\n    this.v = 0;\n\n    if (Expression.hasSupportExpression(data)) {\n      this.expression = Expression.getExpression(data);\n    }\n  }\n\n  reset() {\n    this._value = 0;\n  }\n\n  update(frameNum: number) {\n    if (this.expression) {\n      frameNum = this.expression.update(frameNum);\n    }\n\n    const { value } = this;\n\n    let keyData: TypeKeyframe;\n    let nextKeyData: TypeKeyframe;\n\n    // Find current frame\n    for (let i = 0, l = value.length - 1; i < l; i++) {\n      keyData = value[i];\n      nextKeyData = value[i + 1];\n      if (nextKeyData.t > frameNum) {\n        break;\n      }\n    }\n\n    if (!keyData.beziers) {\n      keyData.beziers = [];\n    }\n\n    this.v = this.getValue(frameNum, 0, keyData, nextKeyData) * this.mult;\n  }\n}\n","import bez from \"../bezier\";\nimport BaseProperty, { TypeKeyframe, TypeMultiDimensionalKeyframedProperty } from \"./BaseProperty\";\n\n/**\n * keyframed multidimensional value property\n */\nexport default class KeyframedMultidimensionalProperty extends BaseProperty {\n  private _lastPoint: number = 0;\n  private _addedLength: number = 0;\n  private _frames: number;\n\n  constructor(data: TypeMultiDimensionalKeyframedProperty, mult: number = 1, frames?: number) {\n    super(data, mult);\n\n    let arrLen = this.value[0].s.length;\n\n    // Set bezier segments according to frames, which is better for performance.\n    if (frames) {\n      this._frames = frames >> 0;\n    }\n\n    this.newValue = new Float32Array(arrLen);\n    this.v = new Float32Array(arrLen);\n  }\n\n  update(frameNum: number) {\n    if (this.expression) {\n      frameNum = this.expression.update(frameNum);\n    }\n\n    const { value } = this;\n    let { newValue } = this;\n\n    let keyData: TypeKeyframe;\n    let nextKeyData: TypeKeyframe;\n\n    // Find current frame\n    for (let i = 0, l = value.length - 1; i < l; i++) {\n      keyData = value[i];\n      nextKeyData = value[i + 1];\n\n      if (nextKeyData.t > frameNum) {\n        this._lastPoint = 0;\n        this._addedLength = 0;\n        break;\n      }\n    }\n\n    if (frameNum > nextKeyData.t) {\n      for (let i = 0, len = this.v.length; i < len; i++) {\n        this.v[i] = this.getValue(frameNum, i, keyData, nextKeyData) * this.mult;\n      }\n      return;\n    }\n\n    if (keyData.to) {\n      let nextKeyTime: number = nextKeyData.t;\n      let keyTime: number = keyData.t;\n\n      if (!keyData.bezierData) {\n        keyData.bezierData = bez.buildBezierData(\n          keyData.s,\n          nextKeyData.s || keyData.e,\n          keyData.to,\n          keyData.ti,\n          this._frames\n        );\n      }\n\n      const { points, segmentLength } = keyData.bezierData;\n\n      let bezier = keyData.timeBezier;\n\n      // Cache time bezier easing\n      if (!bezier) {\n        bezier = bez.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n);\n        keyData.timeBezier = bezier;\n      }\n\n      let t = 0;\n\n      if (nextKeyTime >= 0) {\n        t = (frameNum - keyTime) / (nextKeyTime - keyTime);\n        t = Math.min(Math.max(0, t), 1);\n      }\n\n      const percent: number = bezier(t);\n\n      let distanceInLine: number = segmentLength * percent;\n\n      let addedLength = this._addedLength;\n      let lastPoint = this._lastPoint;\n\n      for (let i = lastPoint, l = points.length; i < l; i++) {\n        if (i === l - 1) {\n          lastPoint = 0;\n          addedLength = 0;\n\n          break;\n        }\n\n        lastPoint = i;\n\n        const point = points[i];\n        const nextPoint = points[i + 1];\n        const { partialLength } = nextPoint;\n\n        if (distanceInLine >= addedLength && distanceInLine < addedLength + partialLength) {\n          const segmentPercent: number = (distanceInLine - addedLength) / partialLength;\n\n          for (let k = 0, l = point.point.length; k < l; k += 1) {\n            newValue[k] = point.point[k] + (nextPoint.point[k] - point.point[k]) * segmentPercent;\n          }\n\n          break;\n        }\n\n        // Add partial length util the distanceInLine is between two points.\n        addedLength += partialLength;\n      }\n\n      this._lastPoint = lastPoint;\n      this._addedLength = addedLength;\n    } else {\n      if (!keyData.beziers) {\n        keyData.beziers = [];\n      }\n\n      for (let i = 0, len = keyData.s.length; i < len; i++) {\n        newValue[i] = this.getValue(frameNum, i, keyData, nextKeyData);\n      }\n    }\n\n    for (let i = 0, len = this.v.length; i < len; i++) {\n      this.v[i] = newValue[i] * this.mult;\n    }\n  }\n}\n","import ValueProperty from \"./property/ValueProperty\";\nimport MultiDimensionalProperty from \"./property/MultiDimensionalProperty\";\nimport KeyframedValueProperty from \"./property/KeyframedValueProperty\";\nimport KeyframedMultidimensionalProperty from \"./property/KeyframedMultidimensionalProperty\";\nimport { TypeMultiDimensionalKeyframedProperty, TypeValueKeyframedProperty } from \"./property/BaseProperty\";\n\ntype KeyFrames = {\n  a: TypeMultiDimensionalKeyframedProperty;\n  p: TypeMultiDimensionalKeyframedProperty;\n  s: TypeMultiDimensionalKeyframedProperty;\n  or?: TypeMultiDimensionalKeyframedProperty;\n  o: TypeValueKeyframedProperty;\n  r: TypeValueKeyframedProperty;\n  rx?: TypeValueKeyframedProperty;\n  ry?: TypeValueKeyframedProperty;\n  rz?: TypeValueKeyframedProperty;\n};\n\n/**\n * transform property origin from tr or ks\n */\nexport default class TransformFrames {\n  p: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  x: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  y: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  z: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  a: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  s: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  or: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  r: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  o: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  rx: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  ry: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  rz: ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty;\n  private properties = [];\n  private autoOrient: boolean = false;\n\n  static create(\n    data,\n    type = 0,\n    mult = 1\n  ): ValueProperty | MultiDimensionalProperty | KeyframedValueProperty | KeyframedMultidimensionalProperty {\n    if (!data.k.length) {\n      return new ValueProperty(data, mult);\n    } else if (typeof data.k[0] === \"number\") {\n      return new MultiDimensionalProperty(data, mult);\n    } else {\n      if (type) {\n        return new KeyframedMultidimensionalProperty(data, mult, data.k[data.k.length - 1].t - data.k[0].t);\n      } else {\n        return new KeyframedValueProperty(data, mult);\n      }\n    }\n  }\n\n  constructor(data: KeyFrames) {\n    const { create } = TransformFrames;\n\n    if (data.p.k) {\n      this.p = create(data.p, 1);\n      this.properties.push(this.p);\n    } else {\n      if (data.p.x) {\n        this.x = create(data.p.x, 1);\n        this.properties.push(this.x);\n      }\n\n      // @ts-ignore\n      if (data.p.y) {\n        // @ts-ignore\n        this.y = create(data.p.y, 1);\n        this.properties.push(this.y);\n      }\n\n      // @ts-ignore\n      if (data.p.z) {\n        // @ts-ignore\n        this.z = create(data.p.z, 1);\n        this.properties.push(this.z);\n      }\n    }\n\n    this.a = create(data.a, 1);\n    this.properties.push(this.a);\n\n    this.s = create(data.s, 1, 0.01);\n    this.properties.push(this.s);\n\n    this.o = create(data.o, 0, 0.01);\n    this.properties.push(this.o);\n\n    // 2d rotation\n    if (data.r) {\n      this.r = create(data.r, 0);\n      this.properties.push(this.r);\n    }\n    // 3d rotation\n    else if (data.rx || data.ry || data.rz) {\n      if (data.rx) {\n        this.rx = create(data.rx, 0);\n        this.properties.push(this.rx);\n      }\n      if (data.ry) {\n        this.ry = create(data.ry, 0);\n        this.properties.push(this.ry);\n      }\n      if (data.rz) {\n        this.rz = create(data.rz, 0);\n        this.properties.push(this.rz);\n      }\n    } else if (data.or) {\n      this.or = create(data.or, 1);\n      this.properties.push(this.or);\n    }\n\n    if (!this.properties.length) {\n      this.update();\n    }\n  }\n\n  reset() {\n    for (let i = 0, len = this.properties.length; i < len; i++) {\n      this.properties[i].reset();\n    }\n  }\n\n  update(frameNum: number = 0) {\n    const len = this.properties.length;\n\n    for (let i = 0; i < len; i++) {\n      this.properties[i].update(frameNum);\n    }\n\n    if (this.autoOrient) {\n      // TODO\n    }\n  }\n}\n","import { TypeLayer } from \"../LottieResource\";\nimport TransformFrames from \"../TransformFrames\";\nimport { Entity } from \"@galacean/engine\";\n\n/**\n * @internal\n */\nexport default class BaseLottieElement {\n  transform: TransformFrames;\n  is3D: boolean;\n  offsetTime: number;\n  name: string;\n  index: number;\n  stretch: number = 1;\n  parent: any = null;\n  inPoint: any;\n  outPoint: any;\n  timeRemapping: any;\n  width: number;\n  height: number;\n  visible: boolean = true;\n  entity: Entity;\n  startTime: number = 0;\n  treeIndex: number[] = [];\n\n  private childLayers = [];\n\n  constructor(layer: TypeLayer) {\n    this.is3D = !!layer.ddd;\n    this.name = layer.nm || \"\";\n    this.index = layer.index;\n    this.timeRemapping = layer.tm;\n    this.width = layer.w;\n    this.height = layer.h;\n\n    this.inPoint = layer.ip;\n    this.outPoint = layer.op;\n\n    if (layer.st) {\n      this.startTime = layer.st;\n    }\n\n    this.stretch = layer.stretch || 1;\n    this.offsetTime = layer.offsetTime || 0;\n    if (layer.ks) {\n      this.transform = new TransformFrames(layer.ks);\n    }\n  }\n\n  reset() {\n    if (this.transform) {\n      this.transform.reset();\n    }\n\n    for (let i = 0; i < this.childLayers.length; i++) {\n      this.childLayers[i].reset();\n    }\n  }\n\n  update(frameNum: number = 0, isParentVisible?: boolean) {\n    const frame = (frameNum - this.offsetTime) / this.stretch;\n\n    if (isParentVisible === true) {\n      this.visible = this.inPoint <= frame && this.outPoint >= frame;\n    } else if (isParentVisible === false) {\n      this.visible = false;\n    }\n\n    if (this.transform && this.visible) {\n      this.transform.update(frame);\n    }\n\n    for (let i = 0; i < this.childLayers.length; i++) {\n      this.childLayers[i].update(frameNum, this.visible);\n    }\n  }\n\n  /**\n   * add child layer\n   */\n  addChild(node) {\n    node.parent = this;\n    node.entity.parent = this.entity;\n    this.childLayers.push(node);\n  }\n\n  destroy() {\n    this.entity.parent = null;\n    this.entity.destroy();\n    this.entity = null;\n    this.transform = null;\n    this.parent = null;\n  }\n}\n","import { Engine, Entity } from \"@galacean/engine\";\nimport BaseLottieElement from \"./BaseLottieElement\";\n\n/**\n * @internal\n */\nexport default class CompLottieElement extends BaseLottieElement {\n  layers: any;\n  comps: [];\n\n  constructor(layer, engine?: Engine, entity?: Entity, name?: string) {\n    super(layer);\n\n    this.layers = layer.layers;\n    this.comps = layer.comps;\n\n    if (entity) {\n      this.entity = entity;\n      if (name) {\n        this.entity.name = name;\n      }\n    } else {\n      const compEntity = new Entity(engine, name);\n      this.entity = compEntity;\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.layers = null;\n    this.comps = null;\n  }\n}\n","import { Entity, Sprite, SpriteAtlas, SpriteRenderer, TextureWrapMode } from \"@galacean/engine\";\nimport BaseLottieElement from \"./BaseLottieElement\";\n\n/**\n * @internal\n */\nexport default class SpriteLottieElement extends BaseLottieElement {\n  sprite: Sprite;\n  spriteRenderer: SpriteRenderer;\n\n  constructor(layer, atlas: SpriteAtlas, entity: Entity, childEntity?: Entity) {\n    super(layer);\n\n    let spriteRenderer;\n\n    if (layer.refId) {\n      if (childEntity) {\n        this.entity = childEntity;\n        spriteRenderer = childEntity.getComponent(SpriteRenderer);\n        this.sprite = spriteRenderer.sprite;\n      } else {\n        this.sprite = atlas.getSprite(layer.refId);\n        const spriteEntity = new Entity(entity.engine, layer.nm);\n        spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n        spriteRenderer.sprite = this.sprite;\n        this.entity = spriteEntity;\n      }\n\n      const { atlasRegion, texture } = this.sprite;\n      texture.wrapModeU = texture.wrapModeV = TextureWrapMode.Clamp;\n      this.spriteRenderer = spriteRenderer;\n\n      // local priority 范围控制在 （0, 1），同时为了尽可能避免精度问题，this.index * 1000000\n      spriteRenderer.priority =  (Number.MAX_SAFE_INTEGER - this.index * 1000000) / Number.MAX_SAFE_INTEGER;\n\n      this.width = atlasRegion.width * texture.width;\n      this.height = atlasRegion.height * texture.height;\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.sprite?.texture?.destroy();\n    this.sprite = null;\n    this.spriteRenderer = null;\n  }\n}\n","import { Entity, Font, Engine, TextRenderer, Logger } from \"@galacean/engine\";\nimport BaseLottieElement from \"./BaseLottieElement\";\nimport { TypeTextKeyframe } from \"../LottieResource\";\n\n/**\n * @internal\n */\nexport default class TextLottieElement extends BaseLottieElement {\n  constructor(layer, engine?: Engine, entity?: Entity, name?: string) {\n    super(layer);\n\n    if (entity) {\n      this.entity = entity;\n      if (name) {\n        this.entity.name = name;\n      }\n    } else {\n      this.entity = new Entity(engine, layer.nm);\n    }\n    const textRenderer = this.entity.addComponent(TextRenderer);\n    const keyframes: TypeTextKeyframe[] = layer?.t?.d?.k;\n    if (keyframes.length === 1) {\n      // only one frame\n      const firstKeyframeStart = keyframes?.[0]?.s;\n      if (firstKeyframeStart) {\n        const { t: text, f: font, s: fontSize, fc: fontColor, lh: lineHeight } = firstKeyframeStart;\n        // set the Font object by font\n        textRenderer.font = Font.createFromOS(engine, font);\n        // set the text to be displayed by text\n        textRenderer.text = text;\n        // set the font size by fontSize\n        textRenderer.fontSize = fontSize;\n        // set the text color by color\n        textRenderer.color.set(fontColor[0], fontColor[1], fontColor[2], 1);\n        // set line spacing via lineSpacing\n        textRenderer.lineSpacing = lineHeight;\n      } else {\n        Logger.warn(`TextLottieElement: ${name}, No corresponding text data found.`);\n      }\n    } else {\n      // TODO: multi keyframes\n      Logger.warn(`TextLottieElement: multi keyframes feature is not supported in this version.`);\n    }\n\n    textRenderer.priority = (Number.MAX_SAFE_INTEGER - this.index * 1000000) / Number.MAX_SAFE_INTEGER;\n  }\n}\n","import CompLottieElement from \"./element/CompLottieElement\";\nimport SpriteLottieElement from \"./element/SpriteLottieElement\";\nimport TextLottieElement from \"./element/TextLottieElement\";\nimport Tools from \"./tools\";\nimport { Script, Vector2, ignoreClone, Entity, Layer, Engine, Renderer } from \"@galacean/engine\";\nimport { LottieResource, TypeAnimationClip } from \"./LottieResource\";\nimport BaseLottieLayer from \"./element/BaseLottieElement\";\n\nexport class LottieAnimation extends Script {\n  private static _pivotVector: Vector2 = new Vector2();\n  private static _tempRenderers: Array<Renderer> = [];\n\n  /** The number of units in world space that correspond to one pixel in the sprite. */\n  /** Repeat times of the animation. */\n  repeats: number = 0;\n  /** whether the animation loop or not. */\n  isLooping: boolean = false;\n  /** whether the animation play back and forth */\n  isAlternate: boolean = false;\n  /** The direction of animation, 1 means play for */\n  direction: 1 | -1 = 1;\n  speed: number = 1;\n  // @ts-ignore\n  pixelsPerUnit: number = Engine._pixelsPerUnit;\n\n  private _alpha: number = 1;\n\n  private _width: number;\n  private _height: number;\n\n  private _resource: LottieResource;\n  private _priority: number = 0;\n  private _priorityDirty: boolean = true;\n  private _layer: Layer = Layer.Layer0;\n  private _layerDirty: boolean = true;\n  private _clip: TypeAnimationClip;\n  private _autoPlay: boolean = false;\n\n  @ignoreClone\n  private _clipEndCallbacks: Object = {};\n  @ignoreClone\n  private _isPlaying: boolean = false;\n  @ignoreClone\n  private _curFrame: number = 0;\n  @ignoreClone\n  private _frame: number = 0;\n  @ignoreClone\n  private _root: CompLottieElement = null;\n  @ignoreClone\n  private _elements: BaseLottieLayer[];\n\n  set resource(value: LottieResource) {\n    if (this._resource === value) {\n      return;\n    }\n\n    if (this._resource) {\n      this.pause();\n      this._destroy();\n      this._resource.refCount--;\n      if (this._resource.refCount <= 0) {\n        this._resource.destroy();\n      }\n    }\n\n    this._resource = value;\n    if (value) {\n      value.refCount++;\n      this._width = value.width;\n      this._height = value.height;\n\n      this._createElements(value);\n      this._priorityDirty = true;\n      this._layerDirty = true;\n    }\n\n    // update the first frame\n    this._curFrame = 0;\n    this.play();\n    this.onUpdate(0);\n\n    if (!this.autoPlay) {\n      this.pause();\n    }\n  }\n\n  get resource(): LottieResource {\n    return this._resource;\n  }\n\n  set priority(value: number) {\n    if (this._priority !== value) {\n      this._priority = value;\n      this._priorityDirty = true;\n    }\n  }\n\n  get priority(): number {\n    return this._priority;\n  }\n\n  set layer(value: Layer) {\n    if (this._layer !== value) {\n      this._layer = value;\n      this._layerDirty = true;\n    }\n  }\n\n  get layer(): Layer {\n    return this._layer;\n  }\n\n  /**\n   * global alpha\n   */\n  set alpha(value: number) {\n    // update in updateElement\n    if (this._alpha !== value) {\n      this._alpha = value;\n\n      if (!this.isPlaying) {\n        this.play();\n        this.onUpdate(0);\n        this.pause();\n      }\n    }\n  }\n\n  get alpha(): number {\n    return this._alpha;\n  }\n\n  set autoPlay(value: boolean) {\n    this._autoPlay = value;\n\n    if (value) {\n      this.play();\n    }\n  }\n\n  get autoPlay(): boolean {\n    return this._autoPlay;\n  }\n\n  get frame(): number {\n    return this._frame;\n  }\n\n  get isPlaying(): boolean {\n    return this._isPlaying;\n  }\n\n  /**\n   * Play the lottie animation\n   */\n  play(name?: string): Promise<any> {\n    if (name) {\n      const clip = this.resource.clips[name];\n      this._clip = clip;\n    } else {\n      this._clip = null;\n    }\n\n    this._isPlaying = true;\n    this._frame = this._curFrame;\n\n    return new Promise((resolve) => {\n      if (name) {\n        this._clipEndCallbacks[name] = resolve;\n      } else {\n        this._clipEndCallbacks[\"ALL\"] = resolve;\n      }\n    });\n  }\n\n  /**\n   * Pause the lottie animation\n   */\n  pause(): void {\n    this._isPlaying = false;\n    this._curFrame = this._frame;\n  }\n\n  stop() {\n    this._isPlaying = false;\n    this._curFrame = 0;\n    this._frame = 0;\n  }\n\n  private _setLayer(layer: Layer, entity?: Entity) {\n    if (!entity) {\n      entity = this.entity;\n    }\n\n    entity.layer = layer;\n    const children = entity.children;\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      child.layer = layer;\n      this._setLayer(layer, child);\n    }\n  }\n\n  private _createLayerElements(layers, elements, parent, isCloned?: boolean) {\n    if (!layers) return;\n\n    for (let i = 0, l = layers.length; i < l; i++) {\n      const layer = layers[i];\n      let element = null;\n\n      if (layer.td !== undefined) continue;\n\n      const treeIndex = parent.treeIndex.concat(i);\n\n      let childEntity: Entity = isCloned && this._findEntityInTree(treeIndex);\n\n      switch (layer.ty) {\n        case 0:\n          element = new CompLottieElement(layer, this.engine, childEntity, layer.id);\n          break;\n\n        case 2:\n          element = new SpriteLottieElement(layer, this._resource.atlas, this.entity, childEntity);\n\n          break;\n\n        case 3:\n          if (layer?.ks?.o?.k === 0) {\n            layer.ks.o.k = 100;\n          }\n\n          element = new CompLottieElement(layer, this.engine, childEntity, layer.id);\n\n          break;\n\n        case 5:\n          element = new TextLottieElement(layer, this.engine, childEntity, layer.id);\n\n          break;\n      }\n\n      if (element) {\n        element.treeIndex = treeIndex;\n\n        elements.push(element);\n        parent.addChild(element);\n        if (layer.layers) {\n          this._createLayerElements(layer.layers, elements, element, isCloned);\n        }\n      }\n    }\n  }\n\n  private _findEntityInTree(treeIndex) {\n    let childEntity: Entity;\n\n    for (let i = 0, l = treeIndex.length; i < l; i++) {\n      const index = treeIndex[i];\n\n      if (childEntity) {\n        childEntity = childEntity.children[index];\n      } else {\n        childEntity = this.entity.children[index];\n      }\n    }\n\n    return childEntity;\n  }\n\n  private _createElements(value, isCloned?: boolean) {\n    const root = new CompLottieElement(value, this.engine, this.entity);\n    this._root = root;\n\n    const { layers } = root;\n\n    const elements = [];\n\n    this._createLayerElements(layers, elements, root, isCloned);\n\n    this._elements = elements;\n  }\n\n  private _updateElements(correctedFrame: number): void {\n    this._root.update(correctedFrame);\n\n    const elements = this._elements;\n\n    for (let i = 0, l = elements.length; i < l; i++) {\n      const layer = elements[i];\n\n      this._updateElement(layer);\n    }\n  }\n\n  private _updateElement<T extends BaseLottieLayer>(layer: T) {\n    // @ts-ignore\n    const { transform, entity, sprite, spriteRenderer, parent, width, height } = layer;\n    const entityTransform = entity.transform;\n    const a = transform.a.v;\n    const s = transform.s.v;\n    let o = transform.o.v;\n    const { pixelsPerUnit } = this;\n\n    let x: number = 0,\n      y: number = 0,\n      z: number = 0;\n\n    if (transform.p) {\n      const p = transform.p.v;\n      x = p[0] ?? 0;\n      y = p[1] ?? 0;\n      z = p[2] ?? 0;\n    } else {\n      if (transform.x) {\n        x = transform.x.v;\n      }\n\n      if (transform.y) {\n        y = transform.y.v;\n      }\n\n      if (transform.z) {\n        z = transform.z.v;\n      }\n    }\n\n    let rx = 0;\n    let ry = 0;\n    let rz = 0;\n\n    if (!layer.visible) {\n      entity.isActive = layer.visible;\n      return;\n    }\n\n    // 2d rotation\n    if (transform.r) {\n      rz = transform.r.v;\n    }\n    // 3d rotation\n    else if (transform.rx || transform.ry || transform.rz) {\n      rx = transform.rx ? transform.rx.v : 0;\n      ry = transform.ry ? transform.ry.v : 0;\n      rz = transform.rz ? transform.rz.v : 0;\n    } else if (transform.or) {\n      const { v } = transform.or;\n      rx = v[0];\n      ry = v[1];\n      rz = v[2];\n    }\n\n    // parent opacity\n    if (parent?.transform?.o) {\n      o *= parent?.transform.o.v;\n    }\n\n    if (sprite) {\n      // update color of sprite\n      const { r, g, b } = spriteRenderer.color;\n      spriteRenderer.color.set(r, g, b, o * this._alpha);\n\n      // update pixels per unit of sprite\n      sprite.pixelsPerUnit = pixelsPerUnit;\n\n      // update pivot of sprite\n      sprite.pivot = LottieAnimation._pivotVector.set(a[0] / width, (height - a[1]) / height);\n    }\n\n    entity.isActive = layer.visible;\n\n    // scale\n    entityTransform.setScale(s[0], s[1], s[2]);\n    entityTransform.setRotation(rx, ry, -rz);\n\n    // anchor\n    if (parent?.transform?.a) {\n      entityTransform.setPosition(\n        (x - parent.transform.a.v[0]) / pixelsPerUnit,\n        (-y + parent.transform.a.v[1]) / pixelsPerUnit,\n        z / pixelsPerUnit\n      );\n    } else {\n      entityTransform.setPosition(\n        (x - this._width / 2) / pixelsPerUnit,\n        (-y + this._height / 2) / pixelsPerUnit,\n        z / pixelsPerUnit\n      );\n    }\n  }\n\n  private _resetElements() {\n    const elements = this._elements;\n\n    for (let i = 0, l = elements.length; i < l; i++) {\n      elements[i].reset();\n    }\n  }\n\n  /**\n   * @override\n   */\n  onUpdate(deltaTime: number): void {\n    if (!this._isPlaying || !this._resource) {\n      return null;\n    }\n\n    if (this._priorityDirty) {\n      this._priorityDirty = false;\n      const renderers = LottieAnimation._tempRenderers;\n      renderers.length = 0;\n      this.entity.getComponentsIncludeChildren(Renderer, renderers);\n      // the diff of global priority\n      let priorityDiff = 0;\n      for (let i = 0, l = renderers.length; i < l; ++i) {\n        const renderer = renderers[i];\n        if (i === 0) {\n          // this._priority represent global priority，Math.floor(renderer.priority) get current global priority\n          priorityDiff = this._priority - Math.floor(renderer.priority);\n        }\n        renderer.priority = renderer.priority + priorityDiff;\n      }\n    }\n\n    if (this._layerDirty) {\n      this._layerDirty = false;\n      this._setLayer(this.layer, this.entity);\n    }\n\n    const time = this.direction * this.speed * deltaTime * 1000;\n    this._frame += time / this._resource.timePerFrame;\n    const clip = this._clip;\n\n    if (this._spill()) {\n      const { duration } = this._resource;\n      this._resetElements();\n\n      if (this.repeats > 0 || this.isLooping) {\n        if (this.repeats > 0) {\n          --this.repeats;\n        }\n\n        if (this.isAlternate) {\n          this.direction *= -1;\n          if (clip) {\n            this._frame = Tools.codomainBounce(this._frame, 0, clip.end - clip.start);\n          } else {\n            this._frame = Tools.codomainBounce(this._frame, 0, duration);\n          }\n        } else {\n          this.direction = 1;\n          if (clip) {\n            this._frame = Tools.euclideanModulo(this._frame, clip.end - clip.start);\n          } else {\n            this._frame = Tools.euclideanModulo(this._frame, duration);\n          }\n        }\n      } else {\n        if (clip) {\n          if (this._frame >= clip.end - clip.start) {\n            const endCallback = this._clipEndCallbacks[clip.name];\n            if (endCallback) {\n              endCallback(clip);\n            }\n          }\n\n          this._frame = Tools.clamp(this._frame, 0, clip.end - clip.start);\n        } else {\n          if (this._frame >= duration) {\n            const endCallback = this._clipEndCallbacks[\"ALL\"];\n            if (endCallback) {\n              endCallback();\n            }\n          }\n\n          this._frame = Tools.clamp(this._frame, 0, duration);\n        }\n      }\n    }\n\n    if (clip) {\n      this._updateElements(this._resource.inPoint + this._frame + clip.start);\n    } else {\n      this._updateElements(this._resource.inPoint + this._frame);\n    }\n  }\n\n  /**\n   * is this time frame spill the range\n   */\n  private _spill(): boolean {\n    let duration: number;\n\n    if (this._clip) {\n      const clip = this._clip;\n      duration = clip.end - clip.start;\n    } else {\n      duration = this._resource.duration;\n    }\n\n    const bottomSpill = this._frame <= 0 && this.direction === -1;\n    const topSpill = this._frame >= duration && this.direction === 1;\n    return bottomSpill || topSpill;\n  }\n\n  /**\n   * @override\n   * @param target\n   */\n  _cloneTo(target) {\n    target._createElements(this._resource, true);\n  }\n\n  private _destroy() {\n    const elements = this._elements;\n    if (elements) {\n      for (let i = 0, l = elements.length; i < l; i++) {\n        elements[i].destroy();\n      }\n    }\n  }\n\n  onDestroy(): void {\n    this._destroy();\n  }\n}\n","function _extends() {\n    _extends = Object.assign || function assign(target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n        }\n\n        return target;\n    };\n\n    return _extends.apply(this, arguments);\n}\nexport { _extends as _ };\n","function _type_of(obj) {\n    \"@swc/helpers - typeof\";\n\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nexport { _type_of as _ };\n","import { Engine, EngineObject } from \"@galacean/engine\";\n\nexport type TypeLayer = {\n  ddd: number;\n  sr: number;\n  st: number;\n  nm: string;\n  op: number;\n  ks: any;\n  ao: number;\n  ip: any;\n  ind: number;\n  refId: string;\n  tm: any;\n  w: number;\n  h: number;\n  fr: number;\n  layers: TypeLayer[];\n\n  // todo: delete\n  // 继承了时间条的时序与渲染关系\n  offsetTime: number;\n  stretch: number;\n  index: number;\n\n  t?: TypeText;\n};\n\nexport type TypeAnimationClip = {\n  name: string;\n  start: number;\n  end: number;\n  auto: boolean;\n};\n\nexport type TypeRes = {\n  v: string;\n  nm: string;\n  ddd: number;\n  fr: number;\n  w: number;\n  h: number;\n  ip: number;\n  op: number;\n  layers: TypeLayer[];\n  assets: any[];\n  lolitaAnimations?: TypeAnimationClip[];\n};\n\nexport type TypeText = {\n  d: {\n    k: TypeTextKeyframe[];\n  };\n};\n\n// field explanation：https://lottiefiles.github.io/lottie-docs/text/#text-document\nexport type TypeTextKeyframe = {\n  s: {\n    t: string;\n    f: string;\n    s: number;\n    fc: number[];\n    lh: number;\n  };\n  t: number;\n};\n\n/**\n * @internal\n */\nexport class LottieResource extends EngineObject {\n  duration: number;\n  timePerFrame: number;\n  inPoint: number;\n  outPoint: number;\n  height: number;\n  width: number;\n  layers: TypeLayer[];\n  comps: any[];\n  atlas: any;\n  name: string;\n  clips: { [name: string]: TypeAnimationClip };\n  refCount: number = 0;\n\n  constructor(engine: Engine, res: TypeRes, atlas: any) {\n    super(engine);\n\n    this.timePerFrame = 1000 / res.fr;\n    this.duration = Math.floor(res.op - res.ip);\n    this.width = res.w;\n    this.height = res.h;\n    this.inPoint = res.ip;\n    this.outPoint = res.op;\n    this.atlas = atlas;\n    this.layers = res.layers;\n    this.comps = res.assets;\n    this.name = res.nm;\n    this.clips = {};\n\n    const compsMap = {};\n    const { comps } = this;\n\n    if (comps) {\n      for (let i = 0, l = comps.length; i < l; i++) {\n        const comp = comps[i];\n        if (comp.id) {\n          compsMap[comp.id] = comp;\n        }\n      }\n    }\n\n    this._buildTree(this.layers, compsMap);\n\n    if (res.lolitaAnimations) {\n      this._parseAnimations(res.lolitaAnimations);\n    }\n  }\n\n  setClips(v: TypeAnimationClip[]) {\n    this.clips = {};\n    this._parseAnimations(v);\n  }\n\n  private _parseAnimations(clips: TypeAnimationClip[]) {\n    clips.forEach((clip) => {\n      this.clips[clip.name] = { ...clip };\n    });\n  }\n\n  /**\n   * 在构建树结构的同时，继承合成的时间条关系\n   * @param layers\n   * @param compsMap\n   * @param startTime - 这条合成的 offsetTime\n   * @param stretch - 这条合成的 stretch\n   * @param indStart - 这条合成的基础 ind\n   * @param indFactor - 这条合成的 ind 缩放因子\n   */\n  private _buildTree(\n    layers,\n    compsMap,\n    startTime: number = 0,\n    stretch: number = 1,\n    indStart: number = 0,\n    indFactor: number = 1\n  ) {\n    const layersMap = {};\n\n    for (let i = 0, l = layers.length; i < l; i++) {\n      const layer = layers[i];\n      layersMap[layer.ind] = layer;\n    }\n\n    for (let i = layers.length - 1; i >= 0; i--) {\n      const layer = layers[i];\n      const { refId, parent } = layer;\n      layer.offsetTime = startTime;\n      layer.stretch = stretch;\n      layer.index = layer.ind * indFactor + indStart;\n      if (parent) {\n        if (!layersMap[parent].layers) {\n          layersMap[parent].layers = [];\n        }\n\n        layersMap[parent].layers.push(layer);\n        layers.splice(i, 1);\n      }\n\n      if (refId && compsMap[refId]) {\n        const refLayers = [];\n        // deep clone the layers in comp asset\n        for (let j = 0; j < compsMap[refId].layers.length; j++) {\n          refLayers.push(this._deepClone(compsMap[refId].layers[j]));\n        }\n        const offsetTime = (layer.offsetTime || 0) + (layer.st || 0);\n        const stretch = (layer.stretch || 1) * (layer.sr || 1);\n        const compIndFactor = (indFactor / (refLayers[refLayers.length - 1].ind + 1)) * indFactor;\n        this._buildTree(refLayers, compsMap, offsetTime, stretch, layer.index, compIndFactor);\n        if (layer.layers) {\n          layer.layers.push(...refLayers);\n        } else {\n          layer.layers = [...refLayers];\n        }\n      }\n    }\n  }\n\n  private _deepClone(from: Object): Object {\n    let out = Array.isArray(from) ? [...from] : { ...from };\n    Reflect.ownKeys(out).map((key) => {\n      out[key] = this._isObject(from[key]) ? this._deepClone(from[key]) : from[key];\n    });\n    return out;\n  }\n\n  private _isObject(obj: Object) {\n    return (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj !== null;\n  }\n\n  destroy(): void {\n    this.layers = null;\n    this.clips = null;\n    this.comps = null;\n    this.atlas.destroy(true);\n    this.atlas = null;\n\n    super.destroy();\n  }\n}\n","import { AssetPromise, AssetType, LoadItem, Loader, ResourceManager, request, resourceLoader } from \"@galacean/engine\";\nimport { LottieResource, TypeRes } from \"./LottieResource\";\n\n/**\n * @internal\n */\n// @ts-ignore\n@resourceLoader(\"EditorLottie\", [\"json\"])\nexport class EditorLottieLoader extends Loader<LottieResource> {\n  // @ts-ignore\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<LottieResource> {\n    return new AssetPromise((resolve) => {\n      request<any>(item.url, { type: \"json\" }).then((data) => {\n        const { jsonUrl, atlasUrl } = data;\n        const jsonPromise = request(jsonUrl, resourceManager);\n        const atlasPromise = resourceManager.load({\n          url: atlasUrl,\n          type: AssetType.SpriteAtlas\n        });\n\n        AssetPromise.all([jsonPromise, atlasPromise]).then(([res, atlas]) => {\n          const { engine } = resourceManager;\n          const resource = new LottieResource(engine, res as TypeRes, atlas);\n          resolve(resource);\n        });\n      });\n    });\n  }\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Engine,\n  Entity,\n  LoadItem,\n  Loader,\n  ResourceManager,\n  Sprite,\n  Texture2D,\n  request,\n  resourceLoader\n} from \"@galacean/engine\";\n\nimport { LottieAnimation } from \"./LottieAnimation\";\nimport { LottieResource, TypeRes } from \"./LottieResource\";\n\nclass Base64Atlas {\n  private sprites = {};\n  private assetsPromises = [];\n\n  constructor(assets, engine: Engine) {\n    this.assetsPromises = assets.map((asset) => {\n      return engine.resourceManager\n        .load<Texture2D>({\n          url: asset.p,\n          type: AssetType.Texture2D\n        })\n        .then((texture) => {\n          const sprite = new Sprite(engine);\n          sprite.texture = texture;\n          this.sprites[asset.id] = sprite;\n        });\n    });\n  }\n\n  request() {\n    return Promise.all(this.assetsPromises);\n  }\n\n  getSprite(id) {\n    return this.sprites[id];\n  }\n}\n\n/**\n * @internal\n */\n// @ts-ignore\n@resourceLoader(\"lottie\", [\"json\"])\nexport class LottieLoader extends Loader<Entity> {\n  // @ts-ignore\n  load(item: LoadItem, resourceManager: ResourceManager): Promise<Entity> {\n    const { urls } = item;\n    const jsonPromise = request(urls[0], { type: \"json\" });\n\n    // atlas\n    if (urls[1]) {\n      const atlasPromise = resourceManager.load({\n        url: urls[1],\n        type: AssetType.SpriteAtlas\n      });\n\n      return AssetPromise.all([jsonPromise, atlasPromise]).then(([res, atlas]) => {\n        const { engine } = resourceManager;\n        const resource = new LottieResource(engine, res as TypeRes, atlas);\n\n        const lottieEntity = new Entity(engine);\n        const lottie = lottieEntity.addComponent(LottieAnimation);\n\n        lottie.resource = resource;\n\n        return lottieEntity;\n      });\n    }\n    // base64\n    else {\n      return AssetPromise.all([jsonPromise]).then(([res]) => {\n        const { engine } = resourceManager;\n        const spriteAssets = (res as TypeRes).assets.filter((asset) => asset.p);\n        (res as TypeRes).assets = (res as TypeRes).assets.filter((asset) => !asset.p);\n\n        const atlas = new Base64Atlas(spriteAssets, engine);\n\n        return atlas.request().then(() => {\n          const resource = new LottieResource(engine, res as TypeRes, atlas);\n\n          const lottieEntity = new Entity(engine);\n          const lottie = lottieEntity.addComponent(LottieAnimation);\n\n          lottie.resource = resource;\n\n          return lottieEntity;\n        });\n      });\n    }\n  }\n}\n","import { Loader } from \"@galacean/engine\";\nimport { LottieAnimation } from \"./LottieAnimation\";\n\nexport { EditorLottieLoader } from \"./EditorLottieLoader\";\nexport { LottieLoader } from \"./LottieLoader\";\nexport { LottieResource } from \"./LottieResource\";\nexport { LottieAnimation };\n\nLoader.registerClass(\"LottieAnimation\", LottieAnimation);\n"],"names":["defaultCurveSegments","beziers","getBezierEasing","a","b","c","d","nm","str","replace","bezier","BezierEasing","storedData","buildBezierData","s","e","to","ti","segments","curveSegments","Math","min","bezierName","segmentLength","lastPoint","points","k","len","length","point","Array","perc","ptDistance","i","ptCoord","pow","sqrt","push","partialLength","Tools","euclideanModulo","n","m","codomainBounce","max","clamp","x","EX_REG","STR_REG","Cycle","type","begin","end","total","update","progress","Pingpong","space","pingpong","dir","floor","FN_MAPS","loopIn","datak","mode","offset","t","last","endIdx","loopOut","beginIdx","parseParams","pStr","params","split","map","it","test","parseInt","parseEx","ex","rs","match","ps","name","hasSupportExpression","ksp","getExpression","_offset","BaseProperty","data","mult","value","animated","Expression","expression","getValue","frameNum","keyData","nextKeyData","keyTime","nextKeyTime","startValue","endValue","h","o","bez","y","reset","ValueProperty","v","MultiDimensionalProperty","Float32Array","newValue","finalValue","KeyframedValueProperty","_value","l","KeyframedMultidimensionalProperty","frames","_lastPoint","_addedLength","arrLen","_frames","bezierData","timeBezier","percent","distanceInLine","addedLength","nextPoint","segmentPercent","TransformFrames","properties","autoOrient","create","p","z","r","rx","ry","rz","or","BaseLottieElement","layer","stretch","parent","visible","startTime","treeIndex","childLayers","is3D","ddd","index","timeRemapping","tm","width","w","height","inPoint","ip","outPoint","op","st","offsetTime","ks","transform","isParentVisible","frame","addChild","node","entity","destroy","CompLottieElement","engine","layers","comps","compEntity","Entity","SpriteLottieElement","atlas","childEntity","spriteRenderer","refId","getComponent","SpriteRenderer","sprite","getSprite","spriteEntity","addComponent","atlasRegion","texture","wrapModeU","wrapModeV","TextureWrapMode","Clamp","priority","Number","MAX_SAFE_INTEGER","TextLottieElement","textRenderer","TextRenderer","keyframes","firstKeyframeStart","f","font","fontSize","fc","fontColor","lh","lineHeight","Font","createFromOS","text","color","set","lineSpacing","Logger","warn","LottieAnimation","repeats","isLooping","isAlternate","direction","speed","pixelsPerUnit","Engine","_pixelsPerUnit","_alpha","_priority","_priorityDirty","_layer","Layer","Layer0","_layerDirty","_autoPlay","_clipEndCallbacks","_isPlaying","_curFrame","_frame","_root","play","clip","resource","clips","_clip","Promise","resolve","pause","stop","_setLayer","children","child","_createLayerElements","elements","isCloned","element","td","undefined","concat","_findEntityInTree","ty","id","_resource","_createElements","root","_elements","_updateElements","correctedFrame","_updateElement","entityTransform","isActive","g","pivot","_pivotVector","setScale","setRotation","setPosition","_width","_height","_resetElements","onUpdate","deltaTime","renderers","_tempRenderers","getComponentsIncludeChildren","Renderer","priorityDiff","renderer","time","timePerFrame","_spill","duration","start","endCallback","bottomSpill","topSpill","_cloneTo","target","_destroy","onDestroy","refCount","autoPlay","alpha","isPlaying","Script","Vector2","LottieResource","res","fr","assets","compsMap","comp","_buildTree","lolitaAnimations","_parseAnimations","setClips","forEach","indStart","indFactor","layersMap","ind","splice","refLayers","j","_deepClone","sr","compIndFactor","from","out","isArray","Reflect","ownKeys","key","_isObject","obj","EngineObject","EditorLottieLoader","load","item","resourceManager","AssetPromise","request","url","then","jsonUrl","atlasUrl","jsonPromise","atlasPromise","AssetType","SpriteAtlas","all","Loader","Base64Atlas","sprites","assetsPromises","asset","Texture2D","Sprite","LottieLoader","urls","lottieEntity","lottie","spriteAssets","filter","registerClass"],"mappings":"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"}