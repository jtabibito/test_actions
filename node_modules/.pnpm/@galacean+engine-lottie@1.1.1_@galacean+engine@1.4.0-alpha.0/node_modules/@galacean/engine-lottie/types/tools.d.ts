/**
 * some useful toolkit
 * @namespace
 */
declare const Tools: {
    /**
     * euclidean modulo
     * @method
     * @param {Number} n input value
     * @param {Number} m modulo
     * @return {Number} re-map to modulo area
     */
    euclideanModulo: (n: any, m: any) => number;
    /**
     * bounce value when value spill codomain
     * @method
     * @param {Number} n input value
     * @param {Number} min lower boundary
     * @param {Number} max upper boundary
     * @return {Number} bounce back to boundary area
     */
    codomainBounce: (n: any, min: any, max: any) => any;
    /**
     * clamp a value in range
     * @method
     * @param {Number} x input value
     * @param {Number} a lower boundary
     * @param {Number} b upper boundary
     * @return {Number} clamp in range
     */
    clamp: (x: any, a: any, b: any) => any;
};
export default Tools;
