import { Engine, EngineObject } from "@galacean/engine";
export type TypeLayer = {
    ddd: number;
    sr: number;
    st: number;
    nm: string;
    op: number;
    ks: any;
    ao: number;
    ip: any;
    ind: number;
    refId: string;
    tm: any;
    w: number;
    h: number;
    fr: number;
    layers: TypeLayer[];
    offsetTime: number;
    stretch: number;
    index: number;
    t?: TypeText;
};
export type TypeAnimationClip = {
    name: string;
    start: number;
    end: number;
    auto: boolean;
};
export type TypeRes = {
    v: string;
    nm: string;
    ddd: number;
    fr: number;
    w: number;
    h: number;
    ip: number;
    op: number;
    layers: TypeLayer[];
    assets: any[];
    lolitaAnimations?: TypeAnimationClip[];
};
export type TypeText = {
    d: {
        k: TypeTextKeyframe[];
    };
};
export type TypeTextKeyframe = {
    s: {
        t: string;
        f: string;
        s: number;
        fc: number[];
        lh: number;
    };
    t: number;
};
/**
 * @internal
 */
export declare class LottieResource extends EngineObject {
    duration: number;
    timePerFrame: number;
    inPoint: number;
    outPoint: number;
    height: number;
    width: number;
    layers: TypeLayer[];
    comps: any[];
    atlas: any;
    name: string;
    clips: {
        [name: string]: TypeAnimationClip;
    };
    refCount: number;
    constructor(engine: Engine, res: TypeRes, atlas: any);
    setClips(v: TypeAnimationClip[]): void;
    private _parseAnimations;
    /**
     * 在构建树结构的同时，继承合成的时间条关系
     * @param layers
     * @param compsMap
     * @param startTime - 这条合成的 offsetTime
     * @param stretch - 这条合成的 stretch
     * @param indStart - 这条合成的基础 ind
     * @param indFactor - 这条合成的 ind 缩放因子
     */
    private _buildTree;
    private _deepClone;
    private _isObject;
    destroy(): void;
}
